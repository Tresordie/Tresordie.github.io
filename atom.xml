<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>时光渐渐逝去</title>
  
  <subtitle>simon&#39;s blog</subtitle>
  <link href="https://tresordie.github.io/atom.xml" rel="self"/>
  
  <link href="https://tresordie.github.io/"/>
  <updated>2024-10-27T09:01:31.121Z</updated>
  <id>https://tresordie.github.io/</id>
  
  <author>
    <name>simon yuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>matplotlib绘制图表元素</title>
    <link href="https://tresordie.github.io/2024/10/27/[matplotlib%E5%AE%9E%E8%B7%B5]matplotlib%E7%BB%98%E5%88%B6%E5%9B%BE%E8%A1%A8%E5%85%83%E7%B4%A0/"/>
    <id>https://tresordie.github.io/2024/10/27/[matplotlib%E5%AE%9E%E8%B7%B5]matplotlib%E7%BB%98%E5%88%B6%E5%9B%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</id>
    <published>2024-10-27T02:00:00.000Z</published>
    <updated>2024-10-27T09:01:31.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matplotlib-图表组成的主要函数">matplotlib图表组成的主要函数</h1><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/matplotlib%20graph.png"alt="matplotlib graph.png|pic_left|800" /></p><h2 id="函数-plot----变量的趋势变化">1. 函数 plot() --变量的趋势变化</h2><ul><li>实体连线将变量的所有点值连接起来，查看变量的趋势变化</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    ls: 线的样式(line style)</span></span><br><span class="line"><span class="string">    lw: 线的宽度</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/plot.png"alt="plot.png|pic_left" /></p><h2 id="函数-scatter----散点图-寻找变量之间的关系">2. 函数 scatter() --散点图 (寻找变量之间的关系)</h2><ul><li>随机点的分布，寻找变量之间的关系</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.2 scatter函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.random.rand(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">plt.scatter(x, y, c=<span class="string">&#x27;b&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/scatter.png"alt="scatter.png|pic_left" /></p><h2 id="函数-xlim----设置-x-轴的数值显示范围">3. 函数 xlim() -- 设置 X轴的数值显示范围</h2><ul><li>plt.xlim(xmin, xmax)：显示 x 轴数值的最小值和最大值范围数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.3 xlim函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.random.rand(<span class="number">1000</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">plt.scatter(x, y, c=<span class="string">&#x27;b&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.xlim(<span class="number">0.05</span>, <span class="number">10</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/xlim.png"alt="xlim.png|pic_left" /></p><h2 id="函数-xlabelylabel----设置-xy-轴的标签文本">4. 函数xlabel()/ylabel() -- 设置 X/Y 轴的标签文本</h2><ul><li>plt.xlabel(string)：设置 x 轴的标签文本</li><li>plt. ylabel (string)：设置 y 轴的标签文本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.4 xlabel函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.random.rand(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">plt.scatter(x, y, c=<span class="string">&#x27;b&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.xlim(<span class="number">0.05</span>, <span class="number">10</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;x axis&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y axis&#x27;</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/xlabels.png"alt="xlabels.png|pic_left" /></p><h2 id="函数-grid----设置坐标系的网格">5. 函数 grid() --设置坐标系的网格</h2><ul><li>plt.grid(linestyle, color,alpha)：设置网格的样式，颜色以及透明度</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.5 grid函数的使用，透明度默认</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    ls: 线的样式(line style)</span></span><br><span class="line"><span class="string">    lw: 线的宽度</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;x_axis&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y_axis&#x27;</span>)</span><br><span class="line">plt.grid(ls=<span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/grid.png"alt="grid.png|pic_left" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.5 grid函数的使用，透明度默认</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    ls: 线的样式(line style)</span></span><br><span class="line"><span class="string">    lw: 线的宽度</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;x_axis&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y_axis&#x27;</span>)</span><br><span class="line">plt.grid(ls=<span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;g&#x27;</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/grid_alpha.png"alt="grid_alpha.png|pic_left" /></p><h2 id="函数-axhlineaxvline----绘制平行于-x-轴的水平垂直参考线">6. 函数axhline()/axvline() -- 绘制平行于 X 轴的水平/垂直参考线</h2><ul><li>plt.axhline(y, linestyle, color,linewidth)：设置水平参考线的位置，线风格，颜色以及线宽</li><li>plt.axvline (x, linestyle, color,linewidth)：设置垂直参考线的位置，线风格，颜色以及线宽</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.7 axhline/axvline函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    ls: 线的样式(line style)</span></span><br><span class="line"><span class="string">    lw: 线的宽度</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;x_axis&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y_axis&#x27;</span>)</span><br><span class="line">plt.axhline(y=<span class="number">0.5</span>, ls=<span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;r&#x27;</span>, lw=<span class="number">1</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line">plt.axvline(x=<span class="number">5</span>, ls=<span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;b&#x27;</span>, lw=<span class="number">1</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line">plt.grid(ls=<span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;g&#x27;</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/axhline.png"alt="axhline.png|pic_left" /></p><h2 id="函数-axvspanaxhspan----绘制垂直于x-轴y-轴的垂直区域">7. 函数axvspan()/axhspan() -- 绘制垂直于X 轴/Y 轴的垂直区域</h2><ul><li>plt.axvspan(xmin, xmax, facecolor,alpha)：设置水平参考区域的位置，范围，颜色，透明度</li><li>plt.axhspan(ymin, ymax, facecolor,alpha)：设置垂直参考区域的位置，范围，颜色，透明度</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.8 axvspan/axhspan函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">    x: x轴上的数据</span></span><br><span class="line"><span class="string">    y: y轴上的数据</span></span><br><span class="line"><span class="string">    ls: 线的样式(line style)</span></span><br><span class="line"><span class="string">    lw: 线的宽度</span></span><br><span class="line"><span class="string">    c: 线的颜色</span></span><br><span class="line"><span class="string">    label: 图例</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;x_axis&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y_axis&#x27;</span>)</span><br><span class="line">plt.axvspan(xmin=<span class="number">4</span>, xmax=<span class="number">6</span>, alpha=<span class="number">0.5</span>, facecolor=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">plt.axhspan(ymin=<span class="number">0.2</span>, ymax=<span class="number">0.5</span>, alpha=<span class="number">0.5</span>, facecolor=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.grid(ls=<span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;g&#x27;</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/axvspan.png"alt="axvspan.png|pic_left" /></p><h2 id="函数-annotate----添加图形内容细节的指向型注释文本">8. 函数annotate() -- 添加图形内容细节的指向型注释文本</h2><p><code>plt.annotate</code> 是 Matplotlib中的一个函数，用于在图表中添加注释。它允许我们在图形中某个特定的点添加文字说明，并可以通过箭头将文字与注释点相连。<code>plt.annotate</code>非常灵活，可以指定文本的位置、箭头的样式等<br /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">plt.annotate(</span><br><span class="line">    text,               <span class="comment"># 注释文本</span></span><br><span class="line">    xy,                 <span class="comment"># 注释点的坐标 (x, y)</span></span><br><span class="line">    xytext=<span class="literal">None</span>,        <span class="comment"># 文本显示位置坐标 (x, y)</span></span><br><span class="line">    weight=<span class="string">&#x27;bold&#x27;</span>,<span class="comment"># 字体粗细</span></span><br><span class="line">    color=<span class="string">&#x27;b&#x27;</span>,<span class="comment"># 字体颜色</span></span><br><span class="line">    arrowprops=<span class="literal">None</span>,    <span class="comment"># 箭头属性</span></span><br><span class="line">    **kwargs            <span class="comment"># 其他可选参数</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.9 annotate函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-.&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;c&#x27;</span>, label=<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.annotate(</span><br><span class="line">    <span class="string">&quot;maximum&quot;</span>,</span><br><span class="line">    xy=(np.pi / <span class="number">2</span>, <span class="number">1.0</span>),</span><br><span class="line">    xytext=((np.pi / <span class="number">2</span>) + <span class="number">1.0</span>, <span class="number">0.8</span>),</span><br><span class="line">    weight=<span class="string">&#x27;bold&#x27;</span>,</span><br><span class="line">    color=<span class="string">&#x27;red&#x27;</span>,</span><br><span class="line">    arrowprops=<span class="built_in">dict</span>(arrowstyle=<span class="string">&#x27;-&gt;&#x27;</span>, connectionstyle=<span class="string">&#x27;arc3&#x27;</span>, color=<span class="string">&#x27;b&#x27;</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/annotate.png"alt="annotate.png|pic_left" /></p><h2 id="函数-text----添加图形内容细节的无指向型注释文本">9. 函数 text()-- 添加图形内容细节的无指向型注释文本</h2><ul><li>plt.text(x, y, string, weight,color)：添加图形内容细节的无指向型注释文本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.10 text函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-.&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;c&#x27;</span>, label=<span class="string">&#x27;plot figure&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.text(<span class="number">3.10</span>, <span class="number">0.09</span>, <span class="string">&#x27;y=sin(x)&#x27;</span>, weight=<span class="string">&#x27;bold&#x27;</span>, color=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/text.png"alt="text.png|pic_left" /></p><h2 id="函数-title----添加图形内容的标题">10. 函数 title() --添加图形内容的标题</h2><ul><li>plt. title(string)：添加图形内容的标题</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.11 title函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-.&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;c&#x27;</span>, label=<span class="string">&#x27;plot figure&#x27;</span>)</span><br><span class="line">plt.text(<span class="number">3.10</span>, <span class="number">0.09</span>, <span class="string">&#x27;y=sin(x)&#x27;</span>, weight=<span class="string">&#x27;bold&#x27;</span>, color=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.title(<span class="string">&#x27;sin(x) plot&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/title.png"alt="title.png|pic_left" /></p><h2 id="函数-legend----标示不同图形的文本标签图例">11. 函数 legend() --标示不同图形的文本标签图例</h2><ul><li>plt.legend(loc="lower left")：loc 表示图例在图中的地理位置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.12 legend函数的使用</span></span><br><span class="line">x = np.linspace(<span class="number">0.05</span>, <span class="number">10</span>, <span class="number">1000</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y, ls=<span class="string">&#x27;-.&#x27;</span>, lw=<span class="number">2</span>, c=<span class="string">&#x27;c&#x27;</span>, label=<span class="string">&#x27;plot figure&#x27;</span>)</span><br><span class="line">plt.text(<span class="number">3.10</span>, <span class="number">0.09</span>, <span class="string">&#x27;y=sin(x)&#x27;</span>, weight=<span class="string">&#x27;bold&#x27;</span>, color=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;sin(x) plot&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/legend1.png"alt="legend1.png|pic_left|500" /> <imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/legend2.png"alt="legend2.png|pic_left|500" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;matplotlib-图表组成的主要函数&quot;&gt;matplotlib
图表组成的主要函数&lt;/h1&gt;
&lt;p&gt;&lt;img
src=&quot;https://raw.githubusercontent.com/Tresordie/PicBed/master/matplotlib</summary>
      
    
    
    
    <category term="Python" scheme="https://tresordie.github.io/categories/Python/"/>
    
    
    <category term="software" scheme="https://tresordie.github.io/tags/software/"/>
    
    <category term="software/python" scheme="https://tresordie.github.io/tags/software-python/"/>
    
  </entry>
  
  <entry>
    <title>齐纳二极管</title>
    <link href="https://tresordie.github.io/2023/12/18/%E9%BD%90%E7%BA%B3%E4%BA%8C%E6%9E%81%E7%AE%A1/"/>
    <id>https://tresordie.github.io/2023/12/18/%E9%BD%90%E7%BA%B3%E4%BA%8C%E6%9E%81%E7%AE%A1/</id>
    <published>2023-12-17T16:00:00.000Z</published>
    <updated>2023-12-18T08:20:44.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="齐纳二极管">齐纳二极管</h1><h2 id="什么是齐纳二极管">什么是齐纳二极管</h2><ul><li><h3id="齐纳二极管是二极管中的一种p型半导体和n型半导体融合在一起形成pn结在pn结周围形成具有反相离子的耗尽层">齐纳二极管是二极管中的一种，P型半导体和N型半导体融合在一起形成PN结，在PN结周围，形成具有反相离子的耗尽层</h3><ul><li><h4id="齐纳二极管与简单二极管之间的区别">齐纳二极管与简单二极管之间的区别</h4><ul><li><p><strong>掺杂程度</strong>:简单二极管是中度掺杂，齐纳二极管是重掺杂，以实现更高的击穿电压。掺杂程度的不同这有助于它们在不同电压水平下工作的规格</p></li><li><p><strong>导电情况</strong>，由于齐纳二极管高掺杂，与简单二极管的PN结相比，齐纳二极管PN结的耗尽层很薄，这为齐纳二极管提供了特殊的特性，在正向和反向偏置条件下都可以导电</p></li></ul></li></ul></li><li><h3 id="齐纳二极管工作原理">齐纳二极管工作原理</h3><ul><li><h4id="齐纳二极管在正向偏置时的作用类似于普通二极管然后一旦反向电压等于其额定电压就会允许电流反向流动">齐纳二极管在正向偏置时的作用类似于普通二极管。然后，一旦反向电压等于其额定电压，就会允许电流反向流动</h4></li><li><h4id="击穿工作的齐纳二极管充当电压调节器因为它在指定的反向电流值范围内跨其端子保持几乎恒定的电压该电压等于齐纳电压由反向击穿产生的齐纳二极管两端的恒定电压降由直流电压符号表示">击穿工作的齐纳二极管充当电压调节器，因为它在指定的反向电流值范围内跨其端子保持几乎恒定的电压，该电压等于齐纳电压。由反向击穿产生的齐纳二极管两端的恒定电压降由直流电压符号表示</h4></li></ul></li><li><h3 id="反向偏置特性">反向偏置特性</h3><ul><li><h4id="普通二极管在反向偏置模式下工作时不会有电流流过在这种情况下大量电子流可能会损坏二极管然而在齐纳二极管中由于pn结的薄耗尽层产生的强电场而发生齐纳击穿发生齐纳击穿的电压称为vz齐纳电压">普通二极管在反向偏置模式下工作时，不会有电流流过。在这种情况下，大量电子流可能会损坏二极管。然而，在齐纳二极管中，由于PN结的薄耗尽层产生的强电场而发生齐纳击穿。发生齐纳击穿的电压称为<strong>VZ</strong>（齐纳电压）</h4></li><li><h4id="根据应用和电压要求生产的齐纳二极管具有不同级别的齐纳电压一旦发生齐纳击穿反向电压的进一步增加不会导致任何进一步的电压下降并且在一定的电压水平上保持恒定直到发生雪崩击穿">根据应用和电压要求，生产的齐纳二极管具有不同级别的齐纳电压。一旦发生齐纳击穿，反向电压的进一步增加不会导致任何进一步的电压下降，并且在一定的电压水平上保持恒定，直到发生雪崩击穿</h4></li><li><h4id="击穿电压小于约-5-v-的齐纳二极管通常在齐纳击穿中工作那些击穿电压大于约-5-v-的设备通常在雪崩击穿中工作">击穿电压小于约5 V 的齐纳二极管通常在齐纳击穿中工作。那些击穿电压大于约 5 V的设备通常在雪崩击穿中工作</h4></li></ul></li></ul><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/Pasted%20image%2020231218161813.png" /></p><h2 id="齐纳二极管参数解读">齐纳二极管参数解读</h2><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/Pasted%20image%2020231218161558.png" /></p><ul><li><h4 id="齐纳电压vz">齐纳电压（Vz）</h4><ul><li>齐纳电压也称为击穿电压，是使二极管导通电流的反向偏置电压。击穿电压的范围通常为2.4V至数百伏，具体取决于特定的齐纳二极管</li></ul></li><li><h4 id="最大电流iz-max">最大电流（Iz-max）</h4><ul><li><p>Iz-max 是在反向击穿电压下可以流过齐纳二极管的最大电流。它的范围从200μA 到 200A。Iz-max 可以使用以下公式计算：</p><ul><li><p>Iz=Pz/Vz</p></li><li><p>其中 Pz 是二极管可以处理的最大功率，Vz 是反向击穿电压</p></li></ul></li></ul></li><li><h4 id="最小电流iz-min">最小电流（Iz-min）</h4><ul><li>Iz-min 是导致齐纳二极管击穿所需的最小电流量。它的范围从 5mA 到10mA</li></ul></li><li><h4 id="测试电流iz">测试电流(IZ )</h4><ul><li>对于每个齐纳二极管，齐纳电压 (VZ ) 是在指定的齐纳测试电流 (IZ )下测量的。 例如，1N4732A 的齐纳电压范围为 4.465 至 4.935V，典型值为4.7V，测试电流为 53mA</li></ul></li><li><h4 id="拐点电流izk">拐点电流(IZK )</h4><ul><li>保持二极管击穿电压调节所需的最小电流。1 瓦齐纳二极管的典型值约为0.25 至1mA。如果未达到此电流，二极管将无法充分击穿以维持其额定电压。</li></ul></li><li><h4 id="漏电流">漏电流</h4><ul><li>反向漏电流是针对小于拐点电压的反向电压指定的。这意味着齐纳二极管对于这些测量没有反向击穿。例如，1N4728A中的反向电压为 1V</li></ul></li><li><h4 id="额定功率pz">额定功率（Pz）</h4><ul><li><p>额定功率是齐纳二极管可以安全耗散的最大功率。齐纳二极管常用的额定功率包括400 mW、500mW、1mW、3mW 和5mW。具有高额定功率的齐纳二极管通常很昂贵，并且它们需要额外的设备来去除多余的热量。齐纳二极管的最大功耗(Pzm) 可以通过给定的公式计算，</p><ul><li><p>Pzm=Iz*Vz</p></li><li><p>其中，Iz 是可以流过齐纳二极管的最大电流，Vz是齐纳击穿电压</p></li></ul></li></ul></li><li><h4 id="齐纳电阻-zz">齐纳电阻 (ZZ )</h4><ul><li><p>齐纳电阻或齐纳阻抗是齐纳二极管为电流提供的总电阻。齐纳电阻从反向VI特性图中也很明显，因为它不是完全垂直的，因此对于齐纳二极管两端电压的微小变化，电流会发生轻微变化，而这种电压相对于电流是齐纳二极管提供的电阻。理想情况下，它应该为零，但每个齐纳二极管都提供一定量的齐纳电阻。</p></li><li><p>齐纳二极管的齐纳阻抗由下式计算：</p><ul><li><p>R=Vi-Vz/Iz</p></li><li><p>其中Vi是输入电压，Iz是通过齐纳二极管的电流，Vz是齐纳击穿电压</p></li></ul></li></ul></li><li><h4 id="齐纳二极管容差">齐纳二极管容差</h4><ul><li>齐纳二极管的容差被定义为接近击穿电压的电压范围，在该范围内齐纳二极管在反向偏置中传导电流。在制造稳压二极管的过程中，同一种稳压二极管的掺杂浓度可能会略有不同，这意味着它们的击穿电压也有细微的差别，因此同一种稳压二极管在不同的反向击穿电压值下会导通反向电流，而齐纳击穿电压的这个范围称为它们的容差。通常，齐纳二极管的电压容差为±5%</li></ul></li><li><h4 id="温度系数-tc">温度系数 (TC)</h4><ul><li><p>齐纳二极管受与其电压温度系数相关的温度变化的影响。温度系数指定每次温度变化时齐纳电压的百分比变化。对于给定的结温变化(%/℃)，计算齐纳电压变化的公式为：</p><ul><li><p><imgsrc="https://static.mianbaoban-assets.eet-china.com/xinyu-images/MBXY-CR-c09bfc2701ac6a16603b105e5677bb84.png" /></p></li><li><p>Vz 是标称齐纳电压，TC 是温度系数，ΔT 是温度变化</p></li><li><p>如果温度系数以 mV/℃ 表示，则 ΔVz 为：</p></li><li><p><imgsrc="https://static.mianbaoban-assets.eet-china.com/xinyu-images/MBXY-CR-83c1493ae08de32ff01184271e1bf5e8.png" /></p></li><li><p>正温度系数意味着齐纳电压的变化与温度的变化成正比。因此，负 TC意味着齐纳电压与温度变化成反比</p></li></ul></li></ul></li><li><h4 id="结温">结温</h4><ul><li>为了保证二极管的可靠性，二极管结温是关键。即使外壳可能足够冷，活动区域仍然可能非常热。因此，一些制造商指定了结本身的工作范围。对于正常设计，通常在设备内的最大预期温度和结之间保留适当的余量。设备内部温度将再次高于设备外部温度。尽管设备外部的环境温度可以接受，但必须注意确保单个物品不会变得太热</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;齐纳二极管&quot;&gt;齐纳二极管&lt;/h1&gt;
&lt;h2 id=&quot;什么是齐纳二极管&quot;&gt;什么是齐纳二极管&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3
id=&quot;齐纳二极管是二极管中的一种p型半导体和n型半导体融合在一起形成pn结在pn结周围形成具有反相离子的耗尽层&quot;&gt;齐纳二极管是二</summary>
      
    
    
    
    <category term="元器件" scheme="https://tresordie.github.io/categories/%E5%85%83%E5%99%A8%E4%BB%B6/"/>
    
    
    <category term="二极管" scheme="https://tresordie.github.io/tags/%E4%BA%8C%E6%9E%81%E7%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Filco键盘蓝牙配对方式</title>
    <link href="https://tresordie.github.io/2023/12/17/Filco%E9%94%AE%E7%9B%98%E8%93%9D%E7%89%99%E9%85%8D%E5%AF%B9%E6%96%B9%E5%BC%8F/"/>
    <id>https://tresordie.github.io/2023/12/17/Filco%E9%94%AE%E7%9B%98%E8%93%9D%E7%89%99%E9%85%8D%E5%AF%B9%E6%96%B9%E5%BC%8F/</id>
    <published>2023-12-17T02:00:00.000Z</published>
    <updated>2023-12-18T07:44:53.385Z</updated>
    
    <content type="html"><![CDATA[<h1 id="filco键盘蓝牙配对方式">Filco键盘蓝牙配对方式</h1><ul><li>1.长按清除键</li><li>2.Ctrl + Alt + Fn 同时按，此时蓝灯和红灯常亮</li><li>3.按1~4选择一个蓝牙通道进行第一个蓝牙配对</li><li>4.和第一台设备进行蓝牙配对</li><li>5.Ctrl + Alt + Fn 同时按，此时蓝灯和红灯常亮</li><li>6.按1~4选择一个蓝牙通道进行第二个蓝牙配对</li><li>7.Ctrl + Alt + Fn 同时按，此时蓝灯和红灯常亮</li><li>8.按1~4选择一个蓝牙通道进行第三个蓝牙配对</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;filco键盘蓝牙配对方式&quot;&gt;Filco键盘蓝牙配对方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1.长按清除键&lt;/li&gt;
&lt;li&gt;2.Ctrl + Alt + Fn 同时按，此时蓝灯和红灯常亮&lt;/li&gt;
&lt;li&gt;3.按1~4选择一个蓝牙通道进行第一个蓝牙配对&lt;/li</summary>
      
    
    
    
    <category term="蓝牙键盘" scheme="https://tresordie.github.io/categories/%E8%93%9D%E7%89%99%E9%94%AE%E7%9B%98/"/>
    
    
    <category term="Filco" scheme="https://tresordie.github.io/tags/Filco/"/>
    
  </entry>
  
  <entry>
    <title>vmware虚拟机与windows之间无法复制粘贴</title>
    <link href="https://tresordie.github.io/2023/12/16/vmware%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8Ewindows%E4%B9%8B%E9%97%B4%E6%97%A0%E6%B3%95%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4/"/>
    <id>https://tresordie.github.io/2023/12/16/vmware%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8Ewindows%E4%B9%8B%E9%97%B4%E6%97%A0%E6%B3%95%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4/</id>
    <published>2023-12-16T02:00:00.000Z</published>
    <updated>2023-12-16T14:45:29.223Z</updated>
    
    <content type="html"><![CDATA[<h1id="vmware虚拟机与windows之间无法复制粘贴">vmware虚拟机与windows之间无法复制粘贴</h1><h2 id="删除原来安装的文件">1.删除原来安装的文件</h2><pre><code>sudo apt autoremove open-vm-tools</code></pre><h2 id="重新安装">2.重新安装</h2><pre><code>sudo apt install open-vm-toolssudo apt install open-vm-tools-desktop</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1
id=&quot;vmware虚拟机与windows之间无法复制粘贴&quot;&gt;vmware虚拟机与windows之间无法复制粘贴&lt;/h1&gt;
&lt;h2 id=&quot;删除原来安装的文件&quot;&gt;1.删除原来安装的文件&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo apt autoremove open</summary>
      
    
    
    
    <category term="virtual machine" scheme="https://tresordie.github.io/categories/virtual-machine/"/>
    
    
    <category term="vmware" scheme="https://tresordie.github.io/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>生成特定格式csv文件</title>
    <link href="https://tresordie.github.io/2023/12/16/%E7%94%9F%E6%88%90%E7%89%B9%E5%AE%9A%E6%A0%BC%E5%BC%8F%E7%9A%84csv%E6%96%87%E4%BB%B6/"/>
    <id>https://tresordie.github.io/2023/12/16/%E7%94%9F%E6%88%90%E7%89%B9%E5%AE%9A%E6%A0%BC%E5%BC%8F%E7%9A%84csv%E6%96%87%E4%BB%B6/</id>
    <published>2023-12-16T02:00:00.000Z</published>
    <updated>2023-12-16T14:27:02.052Z</updated>
    
    <content type="html"><![CDATA[<h1 id="生成特定格式csv文件">生成特定格式csv文件</h1><h2 id="格式要求">1.格式要求</h2><pre><code>格式可以参考以下截图</code></pre><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231216220205804.png"alt="image-20231216220205804" /></p><h2 id="如何实现">2.如何实现</h2><h3 id="如何按照格式写入csv文件">2.1 如何按照格式写入csv文件</h3><p>1.这里可以使用调用python的库csv_logger,直接将整行数据组成的列表写入csv log<br />https://pypi.org/project/csv-logger/<br />2.值得注意的是，csv_logger库只支持每次一维列表数组的写入，可以将多维数组列表拆分进行多次写入即可</p><h3 id="如何获取待写入的数据">2.2 如何获取待写入的数据</h3><p>1.首先需要定义好待生成的csv文件的file name</p><p>2.待生成的csv文件的header</p><p>3.测试数据对比测试规格的判定，测试规格哪里来呢？<br />3.1)可以定义一个csv的规格的limits文件，在测试开始时，将所有测试项的limits读到缓存，在测试过程中进行判断<br />3.2)也可以通过源代码中进行定义，但是这种扩展性不够好</p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231216222600098.png"alt="image-20231216222600098" /></p><p>4.如果获取test item的测试数据<br />4.1)定义一个列表，用于存取所有测试items的总结果<br />4.2)另外定义一个当前测试项的行内容列表，在当前item测试完成后生成，并添加到总测试结果中</p><p>5.最终测试完成后，将总测试数据写入csv文件即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;生成特定格式csv文件&quot;&gt;生成特定格式csv文件&lt;/h1&gt;
&lt;h2 id=&quot;格式要求&quot;&gt;1.格式要求&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;格式可以参考以下截图&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img
src=&quot;https://raw.githubuserco</summary>
      
    
    
    
    <category term="Python" scheme="https://tresordie.github.io/categories/Python/"/>
    
    
    <category term="csv" scheme="https://tresordie.github.io/tags/csv/"/>
    
  </entry>
  
  <entry>
    <title>Windows中查看8080端口被占用情况</title>
    <link href="https://tresordie.github.io/2023/12/13/Windows%E4%B8%AD%E6%9F%A5%E7%9C%8B8080%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"/>
    <id>https://tresordie.github.io/2023/12/13/Windows%E4%B8%AD%E6%9F%A5%E7%9C%8B8080%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/</id>
    <published>2023-12-13T02:00:00.000Z</published>
    <updated>2023-12-16T14:50:29.351Z</updated>
    
    <content type="html"><![CDATA[<h1id="windows中查看8080端口被占用情况">Windows中查看8080端口被占用情况</h1><h2 id="端口9090被那个进程占用">1.端口9090被那个进程占用</h2><pre><code>netstat -ano|findstr &quot;8080&quot;</code></pre><h2 id="查看进程号为-5678-对应的进程">2.查看进程号为 5678对应的进程</h2><pre><code>tasklist|findstr &quot;5678&quot;</code></pre><h2id="结束某个进程如结束javaw.exe">3.结束某个进程，如结束javaw.exe</h2><pre><code>taskkill /f /t /im javaw.exe    /f  强制终值进程    /t  终止指定的进程和它启动的子进程    /im 指定要终止的进程映像名称，若使用通配符*，则可以匹配所有的进程映像名称</code></pre><h2 id="查看所有端口的使用情况">4.查看所有端口的使用情况</h2><pre><code>netstat -ano</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1
id=&quot;windows中查看8080端口被占用情况&quot;&gt;Windows中查看8080端口被占用情况&lt;/h1&gt;
&lt;h2 id=&quot;端口9090被那个进程占用&quot;&gt;1.端口9090被那个进程占用&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;netstat -ano|findstr &amp;qu</summary>
      
    
    
    
    <category term="Python" scheme="https://tresordie.github.io/categories/Python/"/>
    
    
    <category term="sftp" scheme="https://tresordie.github.io/tags/sftp/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV图像数字化基础</title>
    <link href="https://tresordie.github.io/2023/12/10/OpenCV%E5%9B%BE%E5%83%8F%E6%95%B0%E5%AD%97%E5%8C%96%E5%9F%BA%E7%A1%80/"/>
    <id>https://tresordie.github.io/2023/12/10/OpenCV%E5%9B%BE%E5%83%8F%E6%95%B0%E5%AD%97%E5%8C%96%E5%9F%BA%E7%A1%80/</id>
    <published>2023-12-10T02:00:00.000Z</published>
    <updated>2023-12-10T13:34:26.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="opencv图像数字化基础">OpenCV图像数字化基础</h1><p><imgsrc="https://geekscoders.com/wp-content/uploads/2020/11/python-opencv.png"alt="OpenCV Python - Learn OpenCV with Python" /></p><h2 id="像素">1. 像素</h2><h3 id="基本定义">1.1 基本定义</h3><blockquote><ol type="1"><li>图像的基本组成单位</li></ol></blockquote><h3 id="像素坐标">1.2 像素坐标</h3><blockquote><ol type="1"><li>OpenCV中像素坐标的表示方法：(y, x)</li><li>代码读出某个特定坐标位置的像素点的BGR颜色值</li><li><font color='yellow'>使用imread方法读出的数据是按照BGR顺序输出的，如下代码中[36 42 49], 表示 Blue = 36, Green = 42, Red = 49</font></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">pixel = image_data[<span class="number">291</span>, <span class="number">218</span>]</span><br><span class="line"><span class="built_in">print</span>(pixel)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">36</span> <span class="number">42</span> <span class="number">49</span>]</span><br></pre></td></tr></table></figure><h2 id="rgb空间">2. RGB空间</h2><h3 id="像素的bgr值">2.1 像素的BGR值</h3><blockquote><p><font color = 'yellow'>1.彩色图片中的每一个像素点，都包含着3个颜色通道，及RGB三基色值</font></p><p><font color = 'yellow'>2.从彩色图片中读取特定坐标点的B,G,R三基色值</font></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">pixel = image_data[<span class="number">291</span>, <span class="number">218</span>]</span><br><span class="line">blue = pixel[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;blue =   &#x27;</span>, blue)</span><br><span class="line">green = pixel[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;green =  &#x27;</span>, green)</span><br><span class="line">red = pixel[<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;red =    &#x27;</span>, red)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">blue =    <span class="number">36</span></span><br><span class="line">green =   <span class="number">42</span></span><br><span class="line">red =     <span class="number">49</span></span><br></pre></td></tr></table></figure><h3 id="修改像素的bgr值">2.2 修改像素的BGR值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;2.1&#x27;</span>, image_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">241</span>, <span class="number">292</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">168</span>, <span class="number">219</span>):</span><br><span class="line">        image_data[i, j] = [<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>]</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;2.8&#x27;</span>, image_data)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210145700651.png"alt="image-20231210145700651" /></p><h3 id="bgr转换成rgb">2.3 BGR转换成RGB</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">pixel = image_data[<span class="number">291</span>, <span class="number">218</span>]</span><br><span class="line"><span class="built_in">print</span>(pixel)</span><br><span class="line"></span><br><span class="line">image_rgb_data = cv2.cvtColor(image_data, cv2.COLOR_BGR2RGB)</span><br><span class="line">pixel_rgb = image_rgb_data[<span class="number">291</span>, <span class="number">218</span>]</span><br><span class="line"><span class="built_in">print</span>(pixel_rgb)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">36</span> <span class="number">42</span> <span class="number">49</span>]</span><br><span class="line">[<span class="number">49</span> <span class="number">42</span> <span class="number">36</span>]</span><br></pre></td></tr></table></figure><h2 id="gray空间">3. GRAY空间</h2><h3 id="什么是灰度空间">3.1 什么是灰度空间</h3><blockquote><p><font color = 'yellow'>1. 灰度空间指的是灰度图像</font></p><p><font color = 'yellow'>2.灰度图像中每个像素都是从黑到白，单色256个灰度级别</font></p><p><font color = 'yellow'>3.可以通过opencv的库函数将cvtColor将彩色图片转换为灰度图片</font></p><p><font color = 'yellow'>4.灰度图像无法转换为彩色图片，因为彩色配比信息已经无法还原</font></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;color&#x27;</span>, image_data)</span><br><span class="line"></span><br><span class="line">image_gray_data = cv2.cvtColor(image_data, cv2.COLOR_BGR2GRAY)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;gray&#x27;</span>, image_gray_data)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210152240132.png"alt="image-20231210152240132" /></p><h2 id="hsv空间">4. HSV空间</h2><h3 id="什么是hsv空间">4.1 什么是HSV空间</h3><blockquote><p><font color = 'yellow'>1. RGB色彩空间是以R, G,B三基色呈现彩色的</font></p><p><font color = 'yellow'>2. HSV色彩空间则是基于色调H,饱和度S及亮度V而言的</font></p><p><font color = 'yellow'>3. HSV各参数含义</font>：</p><p><font color = 'yellow'>H:色调，指光的颜色，在OpenCV中，色调的取值范围[0, 180],红色，黄色，绿色，蓝色的色调值分别为：0，30，60，120</font></p><p><font color = 'yellow'>S:饱和度，指色彩的深浅，在OpenCV中，色调的取值范围[0, 255],当饱和度为0时，图像变为灰度图像</font></p><p><font color = 'yellow'>V：亮度，指光的明暗，在OpenCV中，色调的取值范围[0,255]，亮度值越大，图像越亮；当亮度值为0时，图像呈纯黑色</font></p><p><font color = 'red'>4.BGR色彩空间转换为HSV空间后，发现在HSV空间的图片色彩失真，再将HSV转回BGR之后，可以还原色彩</font></p></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210155624114.png"alt="image-20231210155624114" /></p><h2 id="rgba空间">5. RGBA空间</h2><h3 id="alpha通道">5.1 alpha通道</h3><blockquote><p><font color = 'yellow'>1. RGB色彩空间为R, G,B三基色为基础，为3个通道</font></p><p><font color = 'yellow'>2.alpha通道为在RGB通道基础上增加的，表示图像的透明度，取值区间为[0, 255],其中，0：透明，255：不透明</font></p><p><font color = 'yellow'>3.alpha通道设置为不同值时，调试时显示出的图像无法看出差别，不同alpha值保存图片后可以看出差别</font></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_bgr_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgr&#x27;</span>, image_bgr_data)</span><br><span class="line">image_bgra_data = cv2.cvtColor(image_bgr_data, cv2.COLOR_BGR2BGRA)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgra&#x27;</span>, image_bgra_data)</span><br><span class="line"></span><br><span class="line">b, g, r, a = cv2.split(image_bgra_data)</span><br><span class="line">a[:, :] = <span class="number">178</span></span><br><span class="line">bgr_a178 = cv2.merge([b, g, r, a])</span><br><span class="line">a[:, :] = <span class="number">0</span></span><br><span class="line">bgr_a0 = cv2.merge([b, g, r, a])</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgr_a178&#x27;</span>, bgr_a178)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgr_a0&#x27;</span>, bgr_a0)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210165009421.png"alt="image-20231210165009421" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_bgr_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgr&#x27;</span>, image_bgr_data)</span><br><span class="line">image_bgra_data = cv2.cvtColor(image_bgr_data, cv2.COLOR_BGR2BGRA)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgra&#x27;</span>, image_bgra_data)</span><br><span class="line"></span><br><span class="line">b, g, r, a = cv2.split(image_bgra_data)</span><br><span class="line">a[:, :] = <span class="number">178</span></span><br><span class="line">bgr_a178 = cv2.merge([b, g, r, a])</span><br><span class="line">a[:, :] = <span class="number">0</span></span><br><span class="line">bgr_a0 = cv2.merge([b, g, r, a])</span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./local_test/bgr_a178.png&#x27;</span>, bgr_a178)</span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./local_test/bgr_a0.png&#x27;</span>, bgr_a0)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210165750193.png"alt="image-20231210165750193" /></p><h2 id="通道">6. 通道</h2><h3 id="拆分通道bgr-cv2.split">6.1 拆分通道(BGR): cv2.split</h3><blockquote><ol type="1"><li>通过split方法拆分出R,G,B基色</li><li>拆分通道后，单色显示时，相当于三个通道都是相同的颜色值</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_bgr_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgr&#x27;</span>, image_bgr_data)</span><br><span class="line"></span><br><span class="line">b, g, r = cv2.split(image_bgr_data)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;B&#x27;</span>, b)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;G&#x27;</span>, g)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;R&#x27;</span>, r)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210160721057.png"alt="image-20231210160721057" /></p><h3 id="拆分通道hsv-cv2.split">6.2 拆分通道(HSV): cv2.split</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_bgr_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgr&#x27;</span>, image_bgr_data)</span><br><span class="line">b, g, r = cv2.split(image_bgr_data)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;B&#x27;</span>, b)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;G&#x27;</span>, g)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;R&#x27;</span>, r)</span><br><span class="line"></span><br><span class="line">image_hsv_data = cv2.cvtColor(image_bgr_data, cv2.COLOR_BGR2HSV)</span><br><span class="line"></span><br><span class="line">h, s, v = cv2.split(image_hsv_data)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;H&#x27;</span>, h)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;S&#x27;</span>, s)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;V&#x27;</span>, v)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210163029567.png"alt="image-20231210163029567" /></p><h3 id="合并通道-cv2.merge">6.3 合并通道: cv2.merge</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_bgr_data = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;bgr&#x27;</span>, image_bgr_data)</span><br><span class="line">b, g, r = cv2.split(image_bgr_data)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;B&#x27;</span>, b)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;G&#x27;</span>, g)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;R&#x27;</span>, r)</span><br><span class="line">image_bgr_merge_data = cv2.merge([b, g, r])</span><br><span class="line">cv2.imshow(<span class="string">&#x27;BGR_merge&#x27;</span>, image_bgr_merge_data)</span><br><span class="line"></span><br><span class="line">image_hsv_data = cv2.cvtColor(image_bgr_data, cv2.COLOR_BGR2HSV)</span><br><span class="line">h, s, v = cv2.split(image_hsv_data)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;H&#x27;</span>, h)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;S&#x27;</span>, s)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;V&#x27;</span>, v)</span><br><span class="line">image_hsv_merge_data = cv2.merge([h, s, v])</span><br><span class="line">cv2.imshow(<span class="string">&#x27;hsv_merge&#x27;</span>, image_hsv_merge_data)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210163612057.png"alt="image-20231210163612057" /></p><h2 id="numpy">7. Numpy</h2><h3 id="创建数组array方法">7.1 创建数组：array()方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">numpy.array(<span class="built_in">object</span>, dtype, copy, order, subok, ndmin)</span><br><span class="line"></span><br><span class="line"><span class="built_in">object</span>: 数组接口方法的对象，是一个对象，所以对于二位或者多维数组而言，必须作为一个整体</span><br><span class="line">dtype: 数据类型</span><br><span class="line">copy: 默认为<span class="literal">True</span>，则<span class="built_in">object</span>对象被复制；否则，只有当 __array__返回副本，<span class="built_in">object</span>参数为嵌套序列，或者需要副本满足数据类型或者顺序要求时，才会生成副本</span><br><span class="line">order: 元素在内存中的出现序列，值为 C(按行), F(按列), A(原顺序), K(元素在内存中的出现顺序)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">n2 = np.array([<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">1.3</span>])</span><br><span class="line">n3 = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(n1)</span><br><span class="line"><span class="built_in">print</span>(n2)</span><br><span class="line"><span class="built_in">print</span>(n3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line">[<span class="number">0.1</span> <span class="number">0.2</span> <span class="number">1.3</span>]</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span>]       </span><br><span class="line"> [<span class="number">3</span> <span class="number">4</span>]]  </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">list_test = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">n1 = np.array(list_test, dtype=np.float_)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(n1)</span><br><span class="line"><span class="built_in">print</span>(n1.dtype)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(n1[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">1.</span> <span class="number">2.</span> <span class="number">3.</span>]</span><br><span class="line">float64</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">numpy</span>.<span class="title">float64</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建三维数组">7.2 创建三维数组</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">list_test = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">n1 = np.array(list_test, ndmin=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(n1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]]]</span><br></pre></td></tr></table></figure><h3 id="创建未初始化的数组np.empty">7.3创建未初始化的数组：np.empty</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.empty([<span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(n1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>] </span><br><span class="line"> [<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>]]</span><br></pre></td></tr></table></figure><h3 id="创建纯0数组np.zeros">7.4 创建纯0数组：np.zeros</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.zeros([<span class="number">2</span>, <span class="number">3</span>])  <span class="comment"># np.zeros(行，列，数据类型)</span></span><br><span class="line"><span class="built_in">print</span>(n1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>] </span><br><span class="line"> [<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>]]</span><br></pre></td></tr></table></figure><h3 id="创建纯1数组np.ones">7.4 创建纯1数组：np.ones</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.ones([<span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(n1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>] </span><br><span class="line"> [<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]]</span><br></pre></td></tr></table></figure><h3 id="创建随机数组np.random.randint">7.4创建随机数组：np.random.randint</h3><blockquote><p><font color = 'yellow'>1. numpy.random.randint(low, high,size)</font></p><p>​ low: 随机数最小取值范围</p><p>​ high: 可选参数，随机数的最大取值范围，若high为空，取值范围为（0,low）</p><p>​ size: 可选参数，数组维数</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.random.randint(<span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;随机生成10个1到3之间且不包括3的整数:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(n1)</span><br><span class="line"></span><br><span class="line">n2 = np.random.randint(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;size大小为空, 随机返回一个整数:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(n2)</span><br><span class="line"></span><br><span class="line">n3 = np.random.randint(<span class="number">5</span>, size=(<span class="number">2</span>, <span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;随机生成5以内的二维数组:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(n3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">随机生成<span class="number">10</span>个<span class="number">1</span>到<span class="number">3</span>之间且不包括<span class="number">3</span>的整数:</span><br><span class="line">[<span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span>]</span><br><span class="line">size大小为空, 随机返回一个整数:</span><br><span class="line"><span class="number">8</span></span><br><span class="line">随机生成<span class="number">5</span>以内的二维数组:</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">4</span> <span class="number">2</span> <span class="number">4</span> <span class="number">4</span>]]</span><br></pre></td></tr></table></figure><h3 id="操作数组">7.5 操作数组</h3><blockquote><ol type="1"><li><p>Numpy库可以实现对维数相等的数组进行加，减，乘，除，幂等运算</p></li><li><p>Numpy也可以进行比较运算</p></li><li><p>Numpy库对数组进行copy</p><p>np.array(n1, copy=True)</p><p>np.copy()</p></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">n2 = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(n1 + n2)</span><br><span class="line"><span class="built_in">print</span>(n1 - n2)</span><br><span class="line"><span class="built_in">print</span>(n1 * n2)</span><br><span class="line"><span class="built_in">print</span>(n1 / n2)</span><br><span class="line"><span class="built_in">print</span>(n1**n2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">5</span> <span class="number">7</span> <span class="number">9</span>]</span><br><span class="line">[-<span class="number">3</span> -<span class="number">3</span> -<span class="number">3</span>]      </span><br><span class="line">[ <span class="number">4</span> <span class="number">10</span> <span class="number">18</span>]      </span><br><span class="line">[<span class="number">0.25</span> <span class="number">0.4</span>  <span class="number">0.5</span> ]</span><br><span class="line">[  <span class="number">1</span>  <span class="number">32</span> <span class="number">729</span>] </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">n2 = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(n1 &gt;= n2)</span><br><span class="line"><span class="built_in">print</span>(n1 == n2)</span><br><span class="line"><span class="built_in">print</span>(n1 &lt;= n2)</span><br><span class="line"><span class="built_in">print</span>(n1 / n2)</span><br><span class="line"><span class="built_in">print</span>(n1 != n2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="literal">False</span> <span class="literal">False</span> <span class="literal">False</span>]</span><br><span class="line">[<span class="literal">False</span> <span class="literal">False</span> <span class="literal">False</span>]</span><br><span class="line">[ <span class="literal">True</span>  <span class="literal">True</span>  <span class="literal">True</span>]</span><br><span class="line">[<span class="number">0.25</span> <span class="number">0.4</span>  <span class="number">0.5</span> ]</span><br><span class="line">[ <span class="literal">True</span>  <span class="literal">True</span>  <span class="literal">True</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">n2 = n1.copy()</span><br><span class="line"><span class="built_in">print</span>(n1 == n2)</span><br><span class="line"></span><br><span class="line">n2[<span class="number">0</span>] = <span class="number">9</span></span><br><span class="line"><span class="built_in">print</span>(n2)</span><br><span class="line"><span class="built_in">print</span>(n1 == n2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[ <span class="literal">True</span>  <span class="literal">True</span>  <span class="literal">True</span>]</span><br><span class="line">[<span class="number">9</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line">[<span class="literal">False</span>  <span class="literal">True</span>  <span class="literal">True</span>]</span><br></pre></td></tr></table></figure><h3 id="数组的索引和切片">7.6 数组的索引和切片</h3><h4 id="索引">7.6.1 索引</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="切片式索引">7.6.2 切片式索引</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">1</span>:])</span><br><span class="line"><span class="built_in">print</span>(n1[:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line">[<span class="number">2</span> <span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n1 = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[:<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">3</span>:<span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">6</span>:])</span><br><span class="line"><span class="built_in">print</span>(n1[::])</span><br><span class="line"><span class="built_in">print</span>(n1[:])</span><br><span class="line"><span class="built_in">print</span>(n1[::<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">1</span>::<span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[<span class="number">2</span>::<span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(n1[::-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[:-<span class="number">3</span>:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[-<span class="number">3</span>:-<span class="number">5</span>:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(n1[-<span class="number">5</span>::-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span>]</span><br><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line">[<span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>]</span><br><span class="line">[<span class="number">0</span> <span class="number">2</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">6</span>]</span><br><span class="line">[<span class="number">2</span> <span class="number">8</span>]</span><br><span class="line">[<span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line">[<span class="number">9</span> <span class="number">8</span>]</span><br><span class="line">[<span class="number">7</span> <span class="number">6</span>]</span><br><span class="line">[<span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span>]</span><br></pre></td></tr></table></figure><h4 id="二维数组索引">7.6.3 二维数组索引</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n = np.array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>], [<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]])</span><br><span class="line"><span class="built_in">print</span>(n[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(n[<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(n[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]</span><br><span class="line"><span class="number">6</span></span><br><span class="line">[ <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br></pre></td></tr></table></figure><h4 id="二维数组切片">7.6.3 二维数组切片</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n = np.array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>], [<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]])</span><br><span class="line"><span class="built_in">print</span>(n[:<span class="number">2</span>, <span class="number">1</span>:])</span><br><span class="line"><span class="built_in">print</span>(n[<span class="number">1</span>, :<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(n[:<span class="number">2</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(n[:, :<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>] </span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span> <span class="number">7</span>]]</span><br><span class="line">[<span class="number">4</span> <span class="number">5</span>]</span><br><span class="line">[<span class="number">2</span> <span class="number">6</span>]</span><br><span class="line">[[<span class="number">0</span>] </span><br><span class="line"> [<span class="number">4</span>] </span><br><span class="line"> [<span class="number">8</span>]]</span><br></pre></td></tr></table></figure><h2 id="创建图像">8 创建图像</h2><h3 id="创建纯黑图像">8.1 创建纯黑图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">width = <span class="number">200</span></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">image_data = np.zeros((height, width), np.uint8)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;image&#x27;</span>, image_data)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h3 id="创建纯白图像">8.2 创建纯白图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">width = <span class="number">200</span></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">image_data = np.ones((height, width), np.uint8) * <span class="number">255</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;image&#x27;</span>, image_data)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h3 id="黑色内部绘制白色">8.3 黑色内部绘制白色</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">width = <span class="number">200</span></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">image_data = np.zeros((height, width), np.uint8)</span><br><span class="line">image_data[<span class="number">25</span>:<span class="number">75</span>, <span class="number">50</span>:<span class="number">100</span>] = <span class="number">255</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;image&#x27;</span>, image_data)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210204009052.png" /></p><h3 id="黑白相间的图像">8.4 黑白相间的图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">width = <span class="number">200</span></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">image_data = np.zeros((height, width), np.uint8)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, width, <span class="number">40</span>):</span><br><span class="line">    image_data[:, i : i + <span class="number">20</span>] = <span class="number">255</span></span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;image&#x27;</span>, image_data)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210204854176.png" /></p><h3 id="创建彩色图像">8.5 创建彩色图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">width = <span class="number">200</span></span><br><span class="line"></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">image_data = np.zeros((height, width, <span class="number">3</span>), np.uint8)</span><br><span class="line"></span><br><span class="line">blue = image_data.copy()</span><br><span class="line"></span><br><span class="line">blue[:, :, <span class="number">0</span>] = <span class="number">255</span></span><br><span class="line"></span><br><span class="line">green = image_data.copy()</span><br><span class="line"></span><br><span class="line">green[:, :, <span class="number">1</span>] = <span class="number">255</span></span><br><span class="line"></span><br><span class="line">red = image_data.copy()</span><br><span class="line"></span><br><span class="line">red[:, :, <span class="number">2</span>] = <span class="number">255</span></span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;blue&#x27;</span>, blue)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;green&#x27;</span>, green)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;red&#x27;</span>, red)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line"></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210211911075.png"alt="image-20231210211911075" /></p><h3 id="创建随机图像">8.6 创建随机图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">width = <span class="number">200</span></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">image_data = np.random.randint(<span class="number">256</span>, size=(height, width), dtype=np.uint8)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;random&#x27;</span>, image_data)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210212301844.png"alt="image-20231210212301844" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">width = <span class="number">200</span></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">image_data = np.random.randint(<span class="number">256</span>, size=(height, width, <span class="number">3</span>), dtype=np.uint8)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;random&#x27;</span>, image_data)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210212401754.png" /></p><h2 id="拼接图像">9. 拼接图像</h2><h3 id="水平拼接">9.1 水平拼接</h3><blockquote><ol type="1"><li>水平拼接：即将不同数组在水平方向上续接起来</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">b = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br><span class="line">c = np.array([<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>])</span><br><span class="line">result = np.hstack((a, b, c))</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br></pre></td></tr></table></figure><h3 id="垂直拼接">9.2 垂直拼接</h3><blockquote><ol type="1"><li>垂直拼接：即将不同数组在垂直方向上续接起来</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">b = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br><span class="line">c = np.array([<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>])</span><br><span class="line">result = np.vstack((a, b, c))</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>] </span><br><span class="line"> [ <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>] </span><br><span class="line"> [ <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br></pre></td></tr></table></figure><h3 id="水平垂直拼接图像">9.3 水平，垂直拼接图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">image = cv2.imread(<span class="string">&#x27;./2.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">image_h = np.hstack((image, image))</span><br><span class="line">image_v = np.vstack((image, image))</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;image_h&#x27;</span>, image_h)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;image_v&#x27;</span>, image_v)</span><br><span class="line"></span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231210213349496.png"alt="image-20231210213349496" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;opencv图像数字化基础&quot;&gt;OpenCV图像数字化基础&lt;/h1&gt;
&lt;p&gt;&lt;img
src=&quot;https://geekscoders.com/wp-content/uploads/2020/11/python-opencv.png&quot;
alt=&quot;OpenCV </summary>
      
    
    
    
    <category term="OpenCV" scheme="https://tresordie.github.io/categories/OpenCV/"/>
    
    
    <category term="OpenCV" scheme="https://tresordie.github.io/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV python环境搭建</title>
    <link href="https://tresordie.github.io/2023/12/07/OpenCV%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://tresordie.github.io/2023/12/07/OpenCV%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2023-12-07T02:00:00.000Z</published>
    <updated>2023-12-08T05:41:41.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="opencv环境搭建">OpenCV环境搭建</h1><p><imgsrc="https://geekscoders.com/wp-content/uploads/2020/11/python-opencv.png"alt="OpenCV Python - Learn OpenCV with Python" /></p><h2 id="opencv库安装">1. OpenCV库安装</h2><blockquote><ol type="1"><li>这里指定了OpenCV库的版本(会自动安装依赖的numpy库)</li></ol><p>pip install opencv-contrib-python==4.2.0.34</p></blockquote><h2 id="读取图像数据">2. 读取图像数据</h2><h3 id="彩色图像数据">2.1 彩色图像数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># image = cv2.imread(filename, flags)</span></span><br><span class="line"><span class="comment"># flags: 1 - 彩色图像，0 - 灰度图像</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(image_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[[<span class="number">38</span> <span class="number">68</span> <span class="number">43</span>] </span><br><span class="line">  [<span class="number">33</span> <span class="number">63</span> <span class="number">38</span>] </span><br><span class="line">  [<span class="number">34</span> <span class="number">64</span> <span class="number">39</span>] </span><br><span class="line">  ...        </span><br><span class="line">  [<span class="number">47</span> <span class="number">49</span> <span class="number">50</span>] </span><br><span class="line">  [<span class="number">50</span> <span class="number">52</span> <span class="number">53</span>] </span><br><span class="line">  [<span class="number">53</span> <span class="number">54</span> <span class="number">58</span>]]</span><br><span class="line"></span><br><span class="line"> [[<span class="number">33</span> <span class="number">63</span> <span class="number">38</span>] </span><br><span class="line">  [<span class="number">34</span> <span class="number">64</span> <span class="number">39</span>] </span><br><span class="line">  [<span class="number">37</span> <span class="number">67</span> <span class="number">42</span>] </span><br><span class="line">  ...        </span><br><span class="line">  [<span class="number">38</span> <span class="number">40</span> <span class="number">41</span>] </span><br><span class="line">  [<span class="number">41</span> <span class="number">43</span> <span class="number">44</span>] </span><br><span class="line">  [<span class="number">44</span> <span class="number">46</span> <span class="number">47</span>]]</span><br><span class="line"></span><br><span class="line"> [[<span class="number">36</span> <span class="number">66</span> <span class="number">41</span>] </span><br><span class="line">  [<span class="number">37</span> <span class="number">67</span> <span class="number">42</span>] </span><br><span class="line">  [<span class="number">44</span> <span class="number">74</span> <span class="number">49</span>] </span><br><span class="line">  ...        </span><br><span class="line">  [<span class="number">30</span> <span class="number">32</span> <span class="number">32</span>] </span><br><span class="line">  [<span class="number">33</span> <span class="number">35</span> <span class="number">35</span>] </span><br><span class="line">  [<span class="number">37</span> <span class="number">39</span> <span class="number">39</span>]]</span><br><span class="line"></span><br><span class="line"> ...</span><br><span class="line"></span><br><span class="line"> [[<span class="number">16</span> <span class="number">25</span> <span class="number">15</span>] </span><br><span class="line">  [<span class="number">12</span> <span class="number">21</span> <span class="number">11</span>] </span><br><span class="line">  [ <span class="number">9</span> <span class="number">17</span>  <span class="number">7</span>] </span><br><span class="line">  ...        </span><br><span class="line">  [<span class="number">19</span> <span class="number">25</span> <span class="number">36</span>] </span><br><span class="line">  [<span class="number">31</span> <span class="number">38</span> <span class="number">47</span>] </span><br><span class="line">  [<span class="number">48</span> <span class="number">53</span> <span class="number">62</span>]]</span><br><span class="line"></span><br><span class="line"> [[ <span class="number">7</span> <span class="number">18</span>  <span class="number">8</span>]</span><br><span class="line">  [ <span class="number">8</span> <span class="number">17</span>  <span class="number">7</span>]</span><br><span class="line">  [ <span class="number">9</span> <span class="number">17</span>  <span class="number">7</span>]</span><br><span class="line">  ...</span><br><span class="line">  [<span class="number">26</span> <span class="number">33</span> <span class="number">42</span>]</span><br><span class="line">  [<span class="number">29</span> <span class="number">36</span> <span class="number">45</span>]</span><br><span class="line">  [<span class="number">32</span> <span class="number">37</span> <span class="number">46</span>]]</span><br><span class="line"></span><br><span class="line"> [[ <span class="number">8</span> <span class="number">19</span>  <span class="number">9</span>]</span><br><span class="line">  [ <span class="number">9</span> <span class="number">18</span>  <span class="number">8</span>]</span><br><span class="line">  [<span class="number">11</span> <span class="number">19</span>  <span class="number">9</span>]</span><br><span class="line">  ...</span><br><span class="line">  [<span class="number">24</span> <span class="number">31</span> <span class="number">40</span>]</span><br><span class="line">  [<span class="number">31</span> <span class="number">38</span> <span class="number">47</span>]</span><br><span class="line">  [<span class="number">36</span> <span class="number">42</span> <span class="number">49</span>]]]</span><br></pre></td></tr></table></figure><h3 id="灰度图像">2.2 灰度图像</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(image_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[[<span class="number">57</span> <span class="number">52</span> <span class="number">53</span> ... <span class="number">49</span> <span class="number">52</span> <span class="number">55</span>]</span><br><span class="line"> [<span class="number">52</span> <span class="number">53</span> <span class="number">56</span> ... <span class="number">40</span> <span class="number">43</span> <span class="number">46</span>]</span><br><span class="line"> [<span class="number">55</span> <span class="number">56</span> <span class="number">63</span> ... <span class="number">32</span> <span class="number">35</span> <span class="number">39</span>]</span><br><span class="line"> ...</span><br><span class="line"> [<span class="number">21</span> <span class="number">17</span> <span class="number">13</span> ... <span class="number">28</span> <span class="number">40</span> <span class="number">55</span>]</span><br><span class="line"> [<span class="number">14</span> <span class="number">13</span> <span class="number">13</span> ... <span class="number">35</span> <span class="number">38</span> <span class="number">39</span>]</span><br><span class="line"> [<span class="number">15</span> <span class="number">14</span> <span class="number">15</span> ... <span class="number">33</span> <span class="number">40</span> <span class="number">43</span>]]</span><br></pre></td></tr></table></figure><h2 id="显示图像">3. 显示图像</h2><h3 id="彩色图像显示">3.1 彩色图像显示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># print(image_data)</span></span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;flower_image&#x27;</span>, image_data)</span><br><span class="line">retval = cv2.waitKey(<span class="number">10000</span>)</span><br><span class="line"><span class="built_in">print</span>(retval)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231208121255990.png"alt="image-20231208121255990" /></p><h3 id="灰度图像显示">3.2 灰度图像显示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment"># print(image_data)</span></span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&#x27;flower_image&#x27;</span>, image_data)</span><br><span class="line">retval = cv2.waitKey(<span class="number">10000</span>)</span><br><span class="line"><span class="built_in">print</span>(retval)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231208121341446.png"alt="image-20231208121341446" /></p><h2 id="保存图像">4. 保存图像</h2><blockquote><ol type="1"><li>读取图片信息是，如果读取的是灰度信息，保存的图片就是灰度图片；如果读取的是彩色信息，保存的图片也是彩色信息</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment"># print(image_data)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## show the image and wait key to exit</span></span><br><span class="line"><span class="comment"># cv2.imshow(&#x27;flower_image&#x27;, image_data)</span></span><br><span class="line"><span class="comment"># retval = cv2.waitKey(10000)</span></span><br><span class="line"><span class="comment"># print(retval)</span></span><br><span class="line"><span class="comment"># cv2.destroyAllWindows()</span></span><br><span class="line"></span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./local_test/1.jpg&#x27;</span>, image_data)</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231208122051890.png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image_data = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># print(image_data)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## show the image and wait key to exit</span></span><br><span class="line"><span class="comment"># cv2.imshow(&#x27;flower_image&#x27;, image_data)</span></span><br><span class="line"><span class="comment"># retval = cv2.waitKey(10000)</span></span><br><span class="line"><span class="comment"># print(retval)</span></span><br><span class="line"><span class="comment"># cv2.destroyAllWindows()</span></span><br><span class="line"></span><br><span class="line">cv2.imwrite(<span class="string">&#x27;./local_test/1.jpg&#x27;</span>, image_data)</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231208122512755.png"alt="image-20231208122512755" /></p><h2 id="图像属性">5. 图像属性</h2><blockquote><ol type="1"><li>shape: 行，列，通道数组成的像素点；数据类型为元组</li><li>size: 像素点个数(行x列x通道数)；数据类型为元组</li><li>dtype: 获取的是图像的数据类型</li><li>读取图像的数据类型为 &lt;class 'numpy.ndarray'&gt;</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># image_data = cv2.imread(&#x27;./1.1.jpg&#x27;, 1)</span></span><br><span class="line"><span class="comment"># print(image_data)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## show image and wait key to exit</span></span><br><span class="line"><span class="comment"># cv2.imshow(&#x27;flower_image&#x27;, image_data)</span></span><br><span class="line"><span class="comment"># retval = cv2.waitKey(10000)</span></span><br><span class="line"><span class="comment"># print(retval)</span></span><br><span class="line"><span class="comment"># cv2.destroyAllWindows()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## save image</span></span><br><span class="line"><span class="comment"># cv2.imwrite(&#x27;./local_test/2.jpg&#x27;, image_data)</span></span><br><span class="line"></span><br><span class="line">image_color = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;获取彩色图像的属性：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(image_color))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;shape = &#x27;</span>, image_color.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(image_color.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;size = &#x27;</span>, image_color.size)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(image_color.size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dtype = &#x27;</span>, image_color.dtype)</span><br><span class="line"></span><br><span class="line">image_grey = cv2.imread(<span class="string">&#x27;./1.1.jpg&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;获取灰度图像的属性：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;shape = &#x27;</span>, image_grey.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;size = &#x27;</span>, image_grey.size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dtype = &#x27;</span>, image_grey.dtype)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">获取彩色图像的属性：</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">numpy</span>.<span class="title">ndarray</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">shape</span> =  (<span class="params"><span class="number">292</span>, <span class="number">219</span>, <span class="number">3</span></span>) </span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">tuple</span>&#x27;&gt;        </span></span><br><span class="line"><span class="class"><span class="title">size</span> =  191844</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">int</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">dtype</span> =  <span class="title">uint8</span></span></span><br><span class="line"><span class="class">获取灰度图像的属性：   </span></span><br><span class="line"><span class="class"><span class="title">shape</span> =  (<span class="params"><span class="number">292</span>, <span class="number">219</span></span>)    </span></span><br><span class="line"><span class="class"><span class="title">size</span> =  63948</span></span><br><span class="line"><span class="class"><span class="title">dtype</span> =  <span class="title">uint8</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;opencv环境搭建&quot;&gt;OpenCV环境搭建&lt;/h1&gt;
&lt;p&gt;&lt;img
src=&quot;https://geekscoders.com/wp-content/uploads/2020/11/python-opencv.png&quot;
alt=&quot;OpenCV Python</summary>
      
    
    
    
    <category term="OpenCV" scheme="https://tresordie.github.io/categories/OpenCV/"/>
    
    
    <category term="OpenCV" scheme="https://tresordie.github.io/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>sftp服务器文件传输</title>
    <link href="https://tresordie.github.io/2023/11/22/[Python]sftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%BB%E5%86%99/"/>
    <id>https://tresordie.github.io/2023/11/22/[Python]sftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%BB%E5%86%99/</id>
    <published>2023-11-22T02:00:00.000Z</published>
    <updated>2023-11-25T11:15:06.932Z</updated>
    
    <content type="html"><![CDATA[<h1id="本地搭建sftp服务器内外网访问">本地搭建sftp服务器(内外网访问)</h1><h2 id="搭建本地sftp服务器">1. 搭建本地sftp服务器</h2><h3 id="sftpgo下载">1.1 SFTPGo下载</h3><blockquote><ol type="1"><li>下载地址：https://github.com/drakkan/sftpgo</li><li>我下载了windows版本，在windows端搭建sftp server,通过虚拟机ubuntu访问</li></ol></blockquote><h3 id="sftpgo配置">1.2 SFTPGo配置</h3><blockquote><ol type="1"><li><p>下载完成后，可以通过命令方式开启或者停止sftp service</p><p>sftpgo service start</p><p>sftpgo service stop</p></li><li><p>开启sftpgoservice之后，可以通过网页方式访问服务器页面进行设置</p><p>localhost:8080</p></li><li><p>配置如下：</p><p>(a)注册管理员账号</p><p>(b)左侧‘Users’栏添加用户，设置用户名及登录密码</p><p>(c)public key区域为需要使用密钥认证的ssh-rsa的公钥</p><p>(d)在下面的Filesystem中设置Storage设置一种存储方式，这里设置为本地local(即将本地设置为服务器)，HomeDir设置一个服务器的根目录映射地址</p><p>(e)设置完成后点击submit就可以了</p><p>(f)通过server manager中status就可以看到服务器状态了</p></li><li><p>至此sftp服务器已经搭建完成</p></li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125162721848.png"alt="image-20231125162721848" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125162945224.png"alt="image-20231125162945224" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125163708342.png"alt="image-20231125163708342" /></p><h2 id="sftp服务器内网访问用户名密码方式">2.SFTP服务器内网访问(用户名密码方式)</h2><h4 id="a-windows中使用客户端访问filezilla-winscp等">a)Windows中使用客户端访问(FileZilla, WinSCP等)</h4><blockquote><ol type="1"><li>设置服务器IP及端口，使用设置的用户名和密码登录</li><li>如下图，正常连接成功</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125164236367.png"alt="image-20231125164236367" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125164543212.png"alt="image-20231125164543212" /></p><h4 id="b-ubuntu中使用客户端访问">b) Ubuntu中使用客户端访问</h4><blockquote><ol type="1"><li><p>通过命令也可以正常访问sftp服务器</p><p>sftp -oPort=2022 test@192.168.123.144</p></li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125164930728.png"alt="image-20231125164930728" /></p><h2 id="sftp服务器内网访问私钥方式">3. SFTP服务器内网访问(私钥方式)</h2><h3 id="生成私钥对">3.1 生成私钥对</h3><blockquote><ol type="1"><li><p>生成特定格式的私钥对，也可以通过putty-gen来生成，但是putty生成的是ppk格式的(有的服务器不识别)</p><p>ssh-keygen -m PEM -t rsa - b 2048</p></li><li><p>生成了公钥(id_ras.pub)以及私钥(id_rsa)</p></li><li><p>需要将id_rsa.pub发送至服务器端，作为后续私钥访问时身份验证</p></li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125170502318.png"alt="image-20231125170502318" /></p><h3 id="通过密钥对访问服务器">3.2 通过密钥对访问服务器</h3><h4 id="a-windows中使用客户端访问filezilla">a)Windows中使用客户端访问(FileZilla)</h4><blockquote><ol type="1"><li>公钥发送至服务器端</li><li>客户端使用私钥进行登录身份验证(无需输入密码)</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125172409285.png"alt="image-20231125172409285" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125172501814.png"alt="image-20231125172501814" /></p><h2 id="python内网私钥方式">4. python内网(私钥方式)</h2><blockquote><ol type="1"><li>代码如下</li><li>功能测试正常，可以正常读写sftp服务器指定路径及文件</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> stat</span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sftp_rsa_access</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">        self,</span></span></span><br><span class="line"><span class="params"><span class="function">        sftpserver_address,</span></span></span><br><span class="line"><span class="params"><span class="function">        sftpserver_port,</span></span></span><br><span class="line"><span class="params"><span class="function">        sftpclient_private_key_path,</span></span></span><br><span class="line"><span class="params"><span class="function">        sftplogin_username,</span></span></span><br><span class="line"><span class="params"><span class="function">        sftpclient_private_key_password=<span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        sftplogin_userpassword=<span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    </span>):</span></span><br><span class="line">        self.sftpserver_address = sftpserver_address</span><br><span class="line">        self.sftpserver_port = sftpserver_port</span><br><span class="line"></span><br><span class="line">        self.sftpclient_private_key_path = sftpclient_private_key_path</span><br><span class="line">        self.sftpclient_private_key_password = sftpclient_private_key_password</span><br><span class="line"></span><br><span class="line">        self.sftplogin_username = sftplogin_username</span><br><span class="line">        self.sftplogin_userpassword = sftplogin_userpassword</span><br><span class="line"></span><br><span class="line">        self.sftpclient = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        self.private_key = paramiko.RSAKey.from_private_key_file(</span><br><span class="line">            filename=self.sftpclient_private_key_path</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        self.transport = paramiko.Transport(</span><br><span class="line">            (self.sftpserver_address, <span class="built_in">int</span>(self.sftpserver_port))</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect_sftpserver_with_private_key</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            <span class="string">&#x27;\nConnecting to sftpserver: %s:%s&#x27;</span></span><br><span class="line">            % (self.sftpserver_address, self.sftpserver_port)</span><br><span class="line">        )</span><br><span class="line">        self.transport.connect(username=self.sftplogin_username, pkey=self.private_key)</span><br><span class="line"></span><br><span class="line">        self.sftpclient = paramiko.SFTPClient.from_transport(self.transport)</span><br><span class="line">        folder_list = self.sftpclient.listdir()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> folder_list:</span><br><span class="line">            <span class="built_in">print</span>(</span><br><span class="line">                <span class="string">&#x27;Successflly connected to sftpserver: %s:%s&#x27;</span></span><br><span class="line">                % (self.sftpserver_address, self.sftpserver_port)</span><br><span class="line">            )</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s:%s\n&#x27;</span> % (self.sftpserver_getcwd(), folder_list))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disconnect_sftpserver</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.transport.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_listdir</span>(<span class="params">self, target_directory</span>):</span></span><br><span class="line">        tmp_folder_list = self.sftpclient.listdir(target_directory)</span><br><span class="line">        <span class="comment"># print(&#x27;directory_list [%s]: %s&#x27; % (target_directory, tmp_folder_list))</span></span><br><span class="line">        <span class="keyword">return</span> tmp_folder_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_listdir_attr</span>(<span class="params">self, target_directory</span>):</span></span><br><span class="line">        tmp_folder_list = self.sftpclient.listdir_attr(target_directory)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;directory_listdir_attr [%s]: %s&#x27;</span> % (target_directory, tmp_folder_list))</span><br><span class="line">        <span class="keyword">return</span> tmp_folder_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_lstat</span>(<span class="params">self, target_directory</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;_summary_</span></span><br><span class="line"><span class="string">            similar to linux command &#x27;ls -l&#x27;</span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            target_directory (_type_): _description_</span></span><br><span class="line"><span class="string">            target directory we want to stat</span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: _description_</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        tmp_folder_lstat = self.sftpclient.lstat(target_directory)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;directory_lstat [%s]: %s&#x27;</span> % (target_directory, tmp_folder_lstat))</span><br><span class="line">        <span class="keyword">return</span> tmp_folder_lstat</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_posix_rename</span>(<span class="params">self, target_directory, oldpath, newpath</span>):</span></span><br><span class="line">        self.sftpserver_chdir(target_directory)</span><br><span class="line">        self.sftpclient.posix_rename(oldpath=oldpath, newpath=newpath)</span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            <span class="string">&#x27;rename_directory_list [%s]: %s&#x27;</span></span><br><span class="line">            % (target_directory, self.sftpserver_listdir(<span class="string">&#x27;./&#x27;</span>))</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_chdir</span>(<span class="params">self, target_directory</span>):</span></span><br><span class="line">        <span class="keyword">if</span> target_directory != self.sftpserver_getcwd():</span><br><span class="line">            self.sftpclient.chdir(target_directory)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Already in target_directory path!\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        target_directory_folder_list = self.sftpclient.listdir()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: %s:\n&#x27;</span> % (target_directory, target_directory_folder_list))</span><br><span class="line">        <span class="keyword">return</span> target_directory_folder_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_file</span>(<span class="params">self, target_directory, file_name, mode, bufsize</span>):</span></span><br><span class="line">        tmp_target_dir_file_list = self.sftpserver_chdir(target_directory)</span><br><span class="line">        <span class="keyword">if</span> file_name <span class="keyword">in</span> tmp_target_dir_file_list:</span><br><span class="line">            <span class="built_in">print</span>(self.sftpclient.<span class="built_in">open</span>(filename=file_name, mode=mode, bufsize=bufsize))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_getcwd</span>(<span class="params">self</span>):</span></span><br><span class="line">        tmp_current_dir_file_path = self.sftpclient.getcwd()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;current work directory: %s&#x27;</span> % tmp_current_dir_file_path)</span><br><span class="line">        <span class="keyword">return</span> tmp_current_dir_file_path</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_mkdir</span>(<span class="params">self, target_directory, new_dir_name, permissions_mode</span>):</span></span><br><span class="line">        tmp_target_dir_file_list = self.sftpserver_chdir(target_directory)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Creating directory %s&#x27;</span> % new_dir_name)</span><br><span class="line"></span><br><span class="line">        tmp_current_dir_file_list = self.sftpclient.listdir(target_directory)</span><br><span class="line">        <span class="keyword">if</span> new_dir_name <span class="keyword">in</span> tmp_current_dir_file_list:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;new directory already exists!\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.sftpclient.mkdir(new_dir_name, permissions_mode)</span><br><span class="line">            tmp_current_dir_file_list = self.sftpclient.listdir(target_directory)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Current directory list: %s&#x27;</span> % tmp_current_dir_file_list)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> new_dir_name <span class="keyword">in</span> tmp_current_dir_file_list:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;\nSuccessfully to create directory: %s\n&#x27;</span> % new_dir_name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_posix_rename</span>(<span class="params">self, target_directory, oldpath, newpath</span>):</span></span><br><span class="line">        self.sftpserver_chdir(target_directory)</span><br><span class="line">        self.sftpclient.posix_rename(oldpath=oldpath, newpath=newpath)</span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            <span class="string">&#x27;rename_directory_list [%s]: %s&#x27;</span></span><br><span class="line">            % (target_directory, self.sftpserver_listdir(<span class="string">&#x27;./&#x27;</span>))</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_filepath_ISDIR</span>(<span class="params">self, remote_path</span>):</span></span><br><span class="line">        tmp_stat = self.sftpclient.stat(remote_path)</span><br><span class="line">        <span class="comment"># print(&#x27;stat: %s&#x27; % tmp_stat)</span></span><br><span class="line"></span><br><span class="line">        tmp_stat_stmode = tmp_stat.st_mode</span><br><span class="line">        <span class="comment"># print(&#x27;st_mode: %s\n&#x27; % tmp_stat_stmode)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> stat.S_ISDIR(tmp_stat_stmode):</span><br><span class="line">            <span class="comment"># print(&#x27;%s is a directory!&#x27; % file_remote_path)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(&#x27;%s is not a directory!&#x27; % file_remote_path)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">local_filepath_ISDIR</span>(<span class="params">self, local_abs_path</span>):</span></span><br><span class="line">        tmp_stat_stmode = os.stat(local_abs_path).st_mode</span><br><span class="line">        <span class="comment"># print(&#x27;st_mode: %s\n&#x27; % tmp_stat_stmode)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> stat.S_ISDIR(tmp_stat_stmode):</span><br><span class="line">            <span class="comment"># print(&#x27;%s is a directory!&#x27; % file_local_abs_path)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(&#x27;%s is not a directory!&#x27; % file_local_abs_path)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_put_callback</span>(<span class="params">self, completed_transfer_bytes, total_transfer_bytes</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            <span class="string">&quot;transfer_bytes: %d/%d&quot;</span> % (completed_transfer_bytes, total_transfer_bytes)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> completed_transfer_bytes != total_transfer_bytes:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;file transfer failed!\n&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;file transfer successfully!\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_put_singlefile</span>(<span class="params">self, file_local_abs_path, remote_folder_path</span>):</span></span><br><span class="line">        tmp_file_name = file_local_abs_path</span><br><span class="line">        tmp_file_name_split = tmp_file_name.split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        file_name = tmp_file_name_split[<span class="built_in">len</span>(tmp_file_name_split) - <span class="number">1</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;file transfering: %s&#x27;</span> % (file_local_abs_path))</span><br><span class="line"></span><br><span class="line">        tmp_dir_file_list = self.sftpserver_listdir(remote_folder_path)</span><br><span class="line">        <span class="keyword">if</span> file_name <span class="keyword">in</span> tmp_dir_file_list:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s already exists in %s!\n&#x27;</span> % (file_name, remote_folder_path))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.sftpclient.put(</span><br><span class="line">                localpath=file_local_abs_path,</span><br><span class="line">                remotepath=remote_folder_path + <span class="string">&#x27;/&#x27;</span> + file_name,</span><br><span class="line">                callback=self.sftpserver_put_callback,</span><br><span class="line">                confirm=<span class="literal">True</span>,</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_put_folder</span>(<span class="params">self, local_folder_abs_path, remote_folder_path</span>):</span></span><br><span class="line">        tmp_local_path_file_list = os.listdir(local_folder_abs_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;local path file list: %s&#x27;</span> % (tmp_local_path_file_list))</span><br><span class="line"></span><br><span class="line">        tmp_remote_path_file_list = self.sftpserver_listdir(remote_folder_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;remote path file list: %s\n&#x27;</span> % (tmp_remote_path_file_list))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> tmp_local_path_file_list:</span><br><span class="line">            <span class="built_in">print</span>(file_name)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># should be regular file name</span></span><br><span class="line">            <span class="keyword">if</span> file_name <span class="keyword">not</span> <span class="keyword">in</span> tmp_remote_path_file_list:</span><br><span class="line">                self.sftpserver_put_singlefile(</span><br><span class="line">                    local_folder_abs_path + <span class="string">&#x27;./&#x27;</span> + file_name, remote_folder_path</span><br><span class="line">                )</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;%s already exists in remote path file list\n&#x27;</span> % (file_name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_put</span>(<span class="params">self, local_abs_path, remote_path</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.sftpserver_filepath_ISDIR(remote_path=remote_path):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Error: %s is not a directory!&#x27;</span> % remote_path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.local_filepath_ISDIR(local_abs_path=local_abs_path):</span><br><span class="line">                self.sftpserver_put_singlefile(local_abs_path, remote_path)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.sftpserver_put_folder(local_abs_path, remote_path)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_get_callback</span>(<span class="params">self, completed_received_bytes, total_receive_bytes</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            <span class="string">&quot;receiving_bytes: %d/%d&quot;</span> % (completed_received_bytes, total_receive_bytes)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> completed_received_bytes != total_receive_bytes:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;file receive failed!\n&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;file receive successfully!\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_get_singlefile</span>(<span class="params">self, file_remote_path, local_folder_abs_path</span>):</span></span><br><span class="line">        tmp_file_name = file_remote_path</span><br><span class="line">        tmp_file_name_split = tmp_file_name.split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        file_name = tmp_file_name_split[<span class="built_in">len</span>(tmp_file_name_split) - <span class="number">1</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;file receiving: %s&#x27;</span> % (file_remote_path))</span><br><span class="line"></span><br><span class="line">        tmp_dir_file_list = os.listdir(local_folder_abs_path)</span><br><span class="line">        <span class="keyword">if</span> file_name <span class="keyword">in</span> tmp_dir_file_list:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s already exists in %s!\n&#x27;</span> % (file_name, local_folder_abs_path))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.sftpclient.get(</span><br><span class="line">                remotepath=file_remote_path,</span><br><span class="line">                localpath=local_folder_abs_path + <span class="string">&#x27;/&#x27;</span> + file_name,</span><br><span class="line">                callback=self.sftpserver_get_callback,</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_get_folder</span>(<span class="params">self, remote_folder_path, local_folder_abs_path</span>):</span></span><br><span class="line">        tmp_local_path_file_list = os.listdir(local_folder_abs_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;local path file list: %s&#x27;</span> % (tmp_local_path_file_list))</span><br><span class="line"></span><br><span class="line">        tmp_remote_path_file_list = self.sftpserver_listdir(remote_folder_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;remote path file list: %s\n&#x27;</span> % (tmp_remote_path_file_list))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> tmp_remote_path_file_list:</span><br><span class="line">            <span class="comment"># should be regular file name</span></span><br><span class="line">            <span class="keyword">if</span> file_name <span class="keyword">not</span> <span class="keyword">in</span> tmp_local_path_file_list:</span><br><span class="line">                self.sftpserver_get_singlefile(</span><br><span class="line">                    remote_folder_path + <span class="string">&#x27;./&#x27;</span> + file_name, local_folder_abs_path</span><br><span class="line">                )</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;%s already exists in local path file list\n&#x27;</span> % (file_name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sftpserver_get</span>(<span class="params">self, remote_path, local_abs_path</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.local_filepath_ISDIR(local_abs_path):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Error: %s is not a directory!&#x27;</span> % local_abs_path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.sftpserver_filepath_ISDIR(remote_path):</span><br><span class="line">                self.sftpserver_get_singlefile(remote_path, local_abs_path)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.sftpserver_get_folder(remote_path, local_abs_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    sftp_rsa_access = sftp_rsa_access(<span class="string">&#x27;192.168.123.144&#x27;</span>, <span class="number">2022</span>, <span class="string">&#x27;./id_rsa&#x27;</span>, <span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    sftp_rsa_access.connect_sftpserver_with_private_key()</span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_put_singlefile(</span></span><br><span class="line">    <span class="comment">#     r&#x27;F:/vmshare/sftp_trans/id_rsa&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;/test2&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_put_singlefile(</span></span><br><span class="line">    <span class="comment">#     r&#x27;/usr/local/sftp_test/test1&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;/test2&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_put_folder(</span></span><br><span class="line">    <span class="comment">#     r&#x27;F:/vmshare/sftp_trans&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;/sgt&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_put_folder(</span></span><br><span class="line">    <span class="comment">#     r&#x27;/usr/local/sftp_test/&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;/sgt&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_put(</span></span><br><span class="line">    <span class="comment">#     r&#x27;F:/vmshare/sftp_trans/&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;/sgt&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_put(</span></span><br><span class="line">    <span class="comment">#     r&#x27;/usr/local/sftp_test/&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;/sgt&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_get_singlefile(</span></span><br><span class="line">    <span class="comment">#     &#x27;/sgt/test2&#x27;,</span></span><br><span class="line">    <span class="comment">#     r&#x27;F:/vmshare/sftp_trans/&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_get_folder(</span></span><br><span class="line">    <span class="comment">#     &#x27;/sgt&#x27;,</span></span><br><span class="line">    <span class="comment">#     r&#x27;/usr/local/sftp_test/&#x27;,</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">    sftp_rsa_access.sftpserver_get(</span><br><span class="line">        <span class="string">&#x27;/sgt/test1&#x27;</span>,</span><br><span class="line">        <span class="string">r&#x27;/usr/local/sftp_test&#x27;</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># sftp_rsa_access.local_filepath_ISDIR(r&#x27;F:/vmshare/sftp_trans/id_rsa.pub&#x27;)</span></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_filepath_ISDIR(&#x27;/test2/id_rsa&#x27;)</span></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_mkdir(&#x27;/&#x27;, &#x27;test1&#x27;, int(777))</span></span><br><span class="line">    <span class="comment"># sftp_rsa_access.sftpserver_posix_rename(&#x27;/&#x27;, &#x27;test1&#x27;, &#x27;test2&#x27;)</span></span><br><span class="line">    sftp_rsa_access.disconnect_sftpserver()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="python外网私钥方式">5. python外网(私钥方式)</h2><h3 id="内网穿透">5.1 内网穿透</h3><blockquote><ol type="1"><li>安装Cpolar, 注册账号登录并创建一个管道</li><li>设置为tcp协议，端口为sftp的端口号</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125190632808.png"alt="image-20231125190632808" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125190858558.png"alt="image-20231125190858558" /></p><h3 id="外网连接sftp-server">5.2 外网连接sftp server</h3><blockquote><ol type="1"><li>使用另外一台电脑，连接不同的网络，即电脑连接了外网</li><li>连接外网的电脑，运行python脚本(只需要更改sftp的地址及端口号即可)</li><li>外网对sftp server进行读写，结果正常</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20231125191005161.png"alt="image-20231125191005161" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sftp_rsa_access = sftp_rsa_access(<span class="string">&quot;8.tcp.cpolar.top&quot;</span>, <span class="number">10830</span>, <span class="string">&quot;./id_rsa&quot;</span>, <span class="string">&quot;test&quot;</span>)</span><br><span class="line">sftp_rsa_access.connect_sftpserver_with_private_key()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">╭─   ~/Gitee/pyqt5/sftp_trans on   master ································································· at  <span class="number">15</span>:<span class="number">48</span>:<span class="number">13</span> ─╮</span><br><span class="line">╰─❯ /usr/local/<span class="built_in">bin</span>/python3 /Users/yuanyong/Gitee/pyqt5/sftp_trans/sftp_trans.py                                               ─╯</span><br><span class="line"></span><br><span class="line">Connecting to sftpserver: <span class="number">8.</span>tcp.cpolar.top:<span class="number">10830</span></span><br><span class="line">Successflly connected to sftpserver: <span class="number">8.</span>tcp.cpolar.top:<span class="number">10830</span></span><br><span class="line">current work directory: <span class="literal">None</span></span><br><span class="line"><span class="literal">None</span>:[<span class="string">&#x27;cosmo&#x27;</span>, <span class="string">&#x27;monolith&#x27;</span>, <span class="string">&#x27;sgt&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"></span><br><span class="line">local path file <span class="built_in">list</span>: [<span class="string">&#x27;id_rsa&#x27;</span>]</span><br><span class="line">remote path file <span class="built_in">list</span>: [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>, <span class="string">&#x27;test3&#x27;</span>, <span class="string">&#x27;test4&#x27;</span>]</span><br><span class="line"></span><br><span class="line">file receiving: /sgt/./test1</span><br><span class="line">receiving_bytes: <span class="number">13</span>/<span class="number">13</span></span><br><span class="line">file receive successfully!</span><br><span class="line"></span><br><span class="line">file receiving: /sgt/./test2</span><br><span class="line">receiving_bytes: <span class="number">6</span>/<span class="number">6</span></span><br><span class="line">file receive successfully!</span><br><span class="line"></span><br><span class="line">file receiving: /sgt/./test3</span><br><span class="line">receiving_bytes: <span class="number">6</span>/<span class="number">6</span></span><br><span class="line">file receive successfully!</span><br><span class="line"></span><br><span class="line">file receiving: /sgt/./test4</span><br><span class="line">receiving_bytes: <span class="number">7</span>/<span class="number">7</span></span><br><span class="line">file receive successfully!</span><br><span class="line"></span><br><span class="line">file transfering: /Users/yuanyong/gitee/pyqt5/sftp_trans/sftp_test/id_rsa</span><br><span class="line">transfer_bytes: <span class="number">1675</span>/<span class="number">1675</span></span><br><span class="line">file transfer successfully!</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1
id=&quot;本地搭建sftp服务器内外网访问&quot;&gt;本地搭建sftp服务器(内外网访问)&lt;/h1&gt;
&lt;h2 id=&quot;搭建本地sftp服务器&quot;&gt;1. 搭建本地sftp服务器&lt;/h2&gt;
&lt;h3 id=&quot;sftpgo下载&quot;&gt;1.1 SFTPGo下载&lt;/h3&gt;
&lt;blockquo</summary>
      
    
    
    
    <category term="Python" scheme="https://tresordie.github.io/categories/Python/"/>
    
    
    <category term="sftp" scheme="https://tresordie.github.io/tags/sftp/"/>
    
  </entry>
  
  <entry>
    <title>Pandas数据读取与输出</title>
    <link href="https://tresordie.github.io/2023/08/13/Pandas%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96%E4%B8%8E%E8%BE%93%E5%87%BA/"/>
    <id>https://tresordie.github.io/2023/08/13/Pandas%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96%E4%B8%8E%E8%BE%93%E5%87%BA/</id>
    <published>2023-08-13T02:00:00.000Z</published>
    <updated>2023-11-26T17:35:59.879Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pythonpandas数据读取与输出">[Python]Pandas数据读取与输出</h1><h2 id="pandas-read_csv函数原型">1.pandas read_csv函数原型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">pd.read_csv(</span><br><span class="line">    filepath_or_buffer: <span class="type">Union</span>[<span class="built_in">str</span>, pathlib.Path, IO[~AnyStr]],</span><br><span class="line">    sep=<span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">    delimiter=<span class="literal">None</span>,</span><br><span class="line">    header=<span class="string">&#x27;infer&#x27;</span>,</span><br><span class="line">    names=<span class="literal">None</span>,</span><br><span class="line">    index_col=<span class="literal">None</span>,</span><br><span class="line">    usecols=<span class="literal">None</span>,</span><br><span class="line">    squeeze=<span class="literal">False</span>,</span><br><span class="line">    prefix=<span class="literal">None</span>,</span><br><span class="line">    mangle_dupe_cols=<span class="literal">True</span>,</span><br><span class="line">    dtype=<span class="literal">None</span>,</span><br><span class="line">    engine=<span class="literal">None</span>,</span><br><span class="line">    converters=<span class="literal">None</span>,</span><br><span class="line">    true_values=<span class="literal">None</span>,</span><br><span class="line">    false_values=<span class="literal">None</span>,</span><br><span class="line">    skipinitialspace=<span class="literal">False</span>,</span><br><span class="line">    skiprows=<span class="literal">None</span>,</span><br><span class="line">    skipfooter=<span class="number">0</span>,</span><br><span class="line">    nrows=<span class="literal">None</span>,</span><br><span class="line">    na_values=<span class="literal">None</span>,</span><br><span class="line">    keep_default_na=<span class="literal">True</span>,</span><br><span class="line">    na_filter=<span class="literal">True</span>,</span><br><span class="line">    verbose=<span class="literal">False</span>,</span><br><span class="line">    skip_blank_lines=<span class="literal">True</span>,</span><br><span class="line">    parse_dates=<span class="literal">False</span>,</span><br><span class="line">    infer_datetime_format=<span class="literal">False</span>,</span><br><span class="line">    keep_date_col=<span class="literal">False</span>,</span><br><span class="line">    date_parser=<span class="literal">None</span>,</span><br><span class="line">    dayfirst=<span class="literal">False</span>,</span><br><span class="line">    cache_dates=<span class="literal">True</span>,</span><br><span class="line">    iterator=<span class="literal">False</span>,</span><br><span class="line">    chunksize=<span class="literal">None</span>,</span><br><span class="line">    compression=<span class="string">&#x27;infer&#x27;</span>,</span><br><span class="line">    thousands=<span class="literal">None</span>,</span><br><span class="line">    decimal: <span class="built_in">str</span> = <span class="string">&#x27;.&#x27;</span>,</span><br><span class="line">    lineterminator=<span class="literal">None</span>,</span><br><span class="line">    quotechar=<span class="string">&#x27;&quot;&#x27;</span>,</span><br><span class="line">    quoting=<span class="number">0</span>,</span><br><span class="line">    doublequote=<span class="literal">True</span>,</span><br><span class="line">    escapechar=<span class="literal">None</span>,</span><br><span class="line">    comment=<span class="literal">None</span>,</span><br><span class="line">    encoding=<span class="literal">None</span>,</span><br><span class="line">    dialect=<span class="literal">None</span>,</span><br><span class="line">    error_bad_lines=<span class="literal">True</span>,</span><br><span class="line">    warn_bad_lines=<span class="literal">True</span>,</span><br><span class="line">    delim_whitespace=<span class="literal">False</span>,</span><br><span class="line">    low_memory=<span class="literal">True</span>,</span><br><span class="line">    memory_map=<span class="literal">False</span>,</span><br><span class="line">    float_precision=<span class="literal">None</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="pandas-read_csv函数参数">2.pandas read_csv函数参数</h2><h3 id="filepath_or_buffer">2.1 filepath_or_buffer</h3><blockquote><ol type="1"><li>用来指定数据的路径的，从官方文档中我们知道这个参数可以是一个str对象、path对象或者类文件对象</li><li>例子：pd.read_csv("c:")</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">(<span class="number">100</span>, <span class="number">8</span>)</span><br></pre></td></tr></table></figure><h3 id="sep">2.2 sep</h3><blockquote><ol type="1"><li>指定数据中列之间的分隔符的，默认是逗号，如果没有出现sep，则列不会被区分</li><li>举例：下面没有逗号的被认为是一列，有逗号的被识别成正确的5列</li><li>sep指定的符号是用来划分列的</li></ol></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> csv的原始数据, python脚本运行显示为 ”3行1列“</span></span><br><span class="line"></span><br><span class="line">id;name;sex;height;time</span><br><span class="line">01;张三;F;170;2020-02-25</span><br><span class="line">02;李四;M;null;2020-02-04</span><br><span class="line">03;王五;F;168;2020-02-03</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./test_sep1.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./test_sep1.csv&#x27;</span>,sep=<span class="string">&#x27;;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> csv的原始数据, python脚本运行显示为 ”3行5列“</span></span><br><span class="line"></span><br><span class="line">id,name,sex,height,time</span><br><span class="line">01,张三,F,170,2020-02-25</span><br><span class="line">02,李四,M,null,2020-02-04</span><br><span class="line">03,王五,F,168,2020-02-03</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./test_sep2.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><h3 id="delimiter">2.3 delimiter</h3><blockquote><ol type="1"><li>这个参数也是用来指定分隔符的，和参数sep功能相同，但默认值为None。也就是说这个参数默认是不启用的，但是启用时也可以正确读取文件</li></ol></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> csv的原始数据, python脚本运行显示为 ”3行1列“</span></span><br><span class="line"></span><br><span class="line">id;name;sex;height;time</span><br><span class="line">01;张三;F;170;2020-02-25</span><br><span class="line">02;李四;M;null;2020-02-04</span><br><span class="line">03;王五;F;168;2020-02-03</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./test_sep1.csv&#x27;</span>,delimiter=<span class="string">&#x27;;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><h3 id="header">2.4 header</h3><blockquote><ol type="1"><li>header为表头，支持整形和有整形组成的列表，可以指定表头<ul><li>如何设置header, 参考如下例程</li><li>header设置为默认0，和非零的区别</li></ul></li><li>header设置为None时，pandas默认会生成行的index</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认header = 0, 即默认第0行为header</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">        name team  Q1  Q2  Q3  Q4  total    avg</span><br><span class="line"><span class="number">0</span>      Liver    E  <span class="number">89</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">64</span>    <span class="number">198</span>  <span class="number">49.50</span></span><br><span class="line"><span class="number">1</span>       Arry    C  <span class="number">36</span>  <span class="number">37</span>  <span class="number">37</span>  <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line"><span class="number">2</span>        Ack    A  <span class="number">57</span>  <span class="number">60</span>  <span class="number">18</span>  <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line"><span class="number">3</span>      Eorge    C  <span class="number">93</span>  <span class="number">96</span>  <span class="number">71</span>  <span class="number">78</span>    <span class="number">338</span>  <span class="number">84.50</span></span><br><span class="line"><span class="number">4</span>        Oah    D  <span class="number">65</span>  <span class="number">49</span>  <span class="number">61</span>  <span class="number">86</span>    <span class="number">261</span>  <span class="number">65.25</span></span><br><span class="line">..       ...  ...  ..  ..  ..  ..    ...    ...</span><br><span class="line"><span class="number">95</span>   Gabriel    C  <span class="number">48</span>  <span class="number">59</span>  <span class="number">87</span>  <span class="number">74</span>    <span class="number">268</span>  <span class="number">67.00</span></span><br><span class="line"><span class="number">96</span>   Austin7    C  <span class="number">21</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line"><span class="number">97</span>  Lincoln4    C  <span class="number">98</span>  <span class="number">93</span>   <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>  <span class="number">53.00</span></span><br><span class="line"><span class="number">98</span>       Eli    E  <span class="number">11</span>  <span class="number">74</span>  <span class="number">58</span>  <span class="number">91</span>    <span class="number">234</span>  <span class="number">58.50</span></span><br><span class="line"><span class="number">99</span>       Ben    E  <span class="number">21</span>  <span class="number">43</span>  <span class="number">41</span>  <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">8</span> columns]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置header = None, 则不会讲行数据设置为header</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">            <span class="number">0</span>     <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>      <span class="number">6</span>      <span class="number">7</span></span><br><span class="line"><span class="number">0</span>        name  team  Q1  Q2  Q3  Q4  total    avg</span><br><span class="line"><span class="number">1</span>       Liver     E  <span class="number">89</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">64</span>    <span class="number">198</span>   <span class="number">49.5</span></span><br><span class="line"><span class="number">2</span>        Arry     C  <span class="number">36</span>  <span class="number">37</span>  <span class="number">37</span>  <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line"><span class="number">3</span>         Ack     A  <span class="number">57</span>  <span class="number">60</span>  <span class="number">18</span>  <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line"><span class="number">4</span>       Eorge     C  <span class="number">93</span>  <span class="number">96</span>  <span class="number">71</span>  <span class="number">78</span>    <span class="number">338</span>   <span class="number">84.5</span></span><br><span class="line">..        ...   ...  ..  ..  ..  ..    ...    ...</span><br><span class="line"><span class="number">96</span>    Gabriel     C  <span class="number">48</span>  <span class="number">59</span>  <span class="number">87</span>  <span class="number">74</span>    <span class="number">268</span>   <span class="number">67.0</span></span><br><span class="line"><span class="number">97</span>    Austin7     C  <span class="number">21</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line"><span class="number">98</span>   Lincoln4     C  <span class="number">98</span>  <span class="number">93</span>   <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>   <span class="number">53.0</span></span><br><span class="line"><span class="number">99</span>        Eli     E  <span class="number">11</span>  <span class="number">74</span>  <span class="number">58</span>  <span class="number">91</span>    <span class="number">234</span>   <span class="number">58.5</span></span><br><span class="line"><span class="number">100</span>       Ben     E  <span class="number">21</span>  <span class="number">43</span>  <span class="number">41</span>  <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">101</span> rows x <span class="number">8</span> columns]</span><br></pre></td></tr></table></figure><h3 id="names">2.5 names</h3><blockquote><ol type="1"><li>names参数也是用来指定列名的</li><li>当没有指定header参数时，pandas会从names参数而非文件中读取表头</li><li>指定names列表作为表头时，其是从右至左来指定各个列的</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, names=[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;team&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">                            name   team</span><br><span class="line">name     team Q1 Q2 Q3 Q4  total    avg</span><br><span class="line">Liver    E    <span class="number">89</span> <span class="number">21</span> <span class="number">24</span> <span class="number">64</span>    <span class="number">198</span>   <span class="number">49.5</span></span><br><span class="line">Arry     C    <span class="number">36</span> <span class="number">37</span> <span class="number">37</span> <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line">Ack      A    <span class="number">57</span> <span class="number">60</span> <span class="number">18</span> <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line">Eorge    C    <span class="number">93</span> <span class="number">96</span> <span class="number">71</span> <span class="number">78</span>    <span class="number">338</span>   <span class="number">84.5</span></span><br><span class="line"><span class="meta">... </span>                         ...    ...</span><br><span class="line">Gabriel  C    <span class="number">48</span> <span class="number">59</span> <span class="number">87</span> <span class="number">74</span>    <span class="number">268</span>   <span class="number">67.0</span></span><br><span class="line">Austin7  C    <span class="number">21</span> <span class="number">31</span> <span class="number">30</span> <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line">Lincoln4 C    <span class="number">98</span> <span class="number">93</span> <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>   <span class="number">53.0</span></span><br><span class="line">Eli      E    <span class="number">11</span> <span class="number">74</span> <span class="number">58</span> <span class="number">91</span>    <span class="number">234</span>   <span class="number">58.5</span></span><br><span class="line">Ben      E    <span class="number">21</span> <span class="number">43</span> <span class="number">41</span> <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">101</span> rows x <span class="number">2</span> columns]</span><br></pre></td></tr></table></figure><h3 id="index_col">2.6 index_col</h3><blockquote><ol type="1"><li>pandas默认为我们生成了index，从0开始的整数。如果我们在读取csv文件时，想自定义index，尤其是我们希望把数据中的某一列数据作为index，就可以使用这个参数</li><li>Index_col是列index,默认pandas生成，也可以指定，指定为整形或者字符(即可以指定列号或者列开头的字符)</li><li><font color='red'>指的注意：当index_col选中的是DataFrame中的内容时，整个DataFrame的行列就会发生变化，即df.shape()会和之前不同</font></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认生成的列index</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">        name team  Q1  Q2  Q3  Q4  total    avg</span><br><span class="line"><span class="number">0</span>      Liver    E  <span class="number">89</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">64</span>    <span class="number">198</span>  <span class="number">49.50</span></span><br><span class="line"><span class="number">1</span>       Arry    C  <span class="number">36</span>  <span class="number">37</span>  <span class="number">37</span>  <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line"><span class="number">2</span>        Ack    A  <span class="number">57</span>  <span class="number">60</span>  <span class="number">18</span>  <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line"><span class="number">3</span>      Eorge    C  <span class="number">93</span>  <span class="number">96</span>  <span class="number">71</span>  <span class="number">78</span>    <span class="number">338</span>  <span class="number">84.50</span></span><br><span class="line"><span class="number">4</span>        Oah    D  <span class="number">65</span>  <span class="number">49</span>  <span class="number">61</span>  <span class="number">86</span>    <span class="number">261</span>  <span class="number">65.25</span></span><br><span class="line">..       ...  ...  ..  ..  ..  ..    ...    ...</span><br><span class="line"><span class="number">95</span>   Gabriel    C  <span class="number">48</span>  <span class="number">59</span>  <span class="number">87</span>  <span class="number">74</span>    <span class="number">268</span>  <span class="number">67.00</span></span><br><span class="line"><span class="number">96</span>   Austin7    C  <span class="number">21</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line"><span class="number">97</span>  Lincoln4    C  <span class="number">98</span>  <span class="number">93</span>   <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>  <span class="number">53.00</span></span><br><span class="line"><span class="number">98</span>       Eli    E  <span class="number">11</span>  <span class="number">74</span>  <span class="number">58</span>  <span class="number">91</span>    <span class="number">234</span>  <span class="number">58.50</span></span><br><span class="line"><span class="number">99</span>       Ben    E  <span class="number">21</span>  <span class="number">43</span>  <span class="number">41</span>  <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">8</span> columns]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定index_col为‘team’</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, index_col=<span class="string">&#x27;team&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">          name  Q1  Q2  Q3  Q4  total    avg</span><br><span class="line">team                                        </span><br><span class="line">E        Liver  <span class="number">89</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">64</span>    <span class="number">198</span>  <span class="number">49.50</span></span><br><span class="line">C         Arry  <span class="number">36</span>  <span class="number">37</span>  <span class="number">37</span>  <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line">A          Ack  <span class="number">57</span>  <span class="number">60</span>  <span class="number">18</span>  <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line">C        Eorge  <span class="number">93</span>  <span class="number">96</span>  <span class="number">71</span>  <span class="number">78</span>    <span class="number">338</span>  <span class="number">84.50</span></span><br><span class="line">D          Oah  <span class="number">65</span>  <span class="number">49</span>  <span class="number">61</span>  <span class="number">86</span>    <span class="number">261</span>  <span class="number">65.25</span></span><br><span class="line"><span class="meta">... </span>       ...  ..  ..  ..  ..    ...    ...</span><br><span class="line">C      Gabriel  <span class="number">48</span>  <span class="number">59</span>  <span class="number">87</span>  <span class="number">74</span>    <span class="number">268</span>  <span class="number">67.00</span></span><br><span class="line">C      Austin7  <span class="number">21</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line">C     Lincoln4  <span class="number">98</span>  <span class="number">93</span>   <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>  <span class="number">53.00</span></span><br><span class="line">E          Eli  <span class="number">11</span>  <span class="number">74</span>  <span class="number">58</span>  <span class="number">91</span>    <span class="number">234</span>  <span class="number">58.50</span></span><br><span class="line">E          Ben  <span class="number">21</span>  <span class="number">43</span>  <span class="number">41</span>  <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">7</span> columns]</span><br></pre></td></tr></table></figure><h3 id="usecols">2.7 usecols</h3><blockquote><ol type="1"><li><p>一个文件中的数据可能有很多列，有时候我们只需要部分列，这时候可以使用usecols参数。这个参数接受一个列表对象或者可调用对象</p></li><li><p><font color = 'yellow'>如果是列表对象(列表中的元素可以是单个或者多个)，要求列表中的元素要么都是int，要么都是str。和index_col参数中一样，int表示需要的列在所有列中的序号，起始序号从0开始。str则是列名字符串</font></p></li><li><p>usercols还可以接受一个可调用的对象，最常用的调用对象是函数，即这个参数可以接收一个函数，如下面的例子，接收一个函数传参，<em>usecols</em>=<em>lambda</em><em>x</em>: x.startswith("t")，隐含的意思是head中含有 't' 的列</p></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用部分列，使用字符串列表指定</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, usecols= [<span class="string">&#x27;team&#x27;</span>,<span class="string">&#x27;avg&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">   team    avg</span><br><span class="line"><span class="number">0</span>     E  <span class="number">49.50</span></span><br><span class="line"><span class="number">1</span>     C  <span class="number">41.75</span></span><br><span class="line"><span class="number">2</span>     A  <span class="number">54.75</span></span><br><span class="line"><span class="number">3</span>     C  <span class="number">84.50</span></span><br><span class="line"><span class="number">4</span>     D  <span class="number">65.25</span></span><br><span class="line">..  ...    ...</span><br><span class="line"><span class="number">95</span>    C  <span class="number">67.00</span></span><br><span class="line"><span class="number">96</span>    C  <span class="number">31.25</span></span><br><span class="line"><span class="number">97</span>    C  <span class="number">53.00</span></span><br><span class="line"><span class="number">98</span>    E  <span class="number">58.50</span></span><br><span class="line"><span class="number">99</span>    E  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">2</span> columns]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用部分列，使用列号来指定</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, usecols= [<span class="number">1</span>,<span class="number">7</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">   team    avg</span><br><span class="line"><span class="number">0</span>     E  <span class="number">49.50</span></span><br><span class="line"><span class="number">1</span>     C  <span class="number">41.75</span></span><br><span class="line"><span class="number">2</span>     A  <span class="number">54.75</span></span><br><span class="line"><span class="number">3</span>     C  <span class="number">84.50</span></span><br><span class="line"><span class="number">4</span>     D  <span class="number">65.25</span></span><br><span class="line">..  ...    ...</span><br><span class="line"><span class="number">95</span>    C  <span class="number">67.00</span></span><br><span class="line"><span class="number">96</span>    C  <span class="number">31.25</span></span><br><span class="line"><span class="number">97</span>    C  <span class="number">53.00</span></span><br><span class="line"><span class="number">98</span>    E  <span class="number">58.50</span></span><br><span class="line"><span class="number">99</span>    E  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">2</span> columns]</span><br></pre></td></tr></table></figure><h3 id="squeeze">2.7 squeeze</h3><blockquote><ol type="1"><li>希望读取的数据只有一列，默认返回的是DataFrame，如果我们希望返回Series，可以使用这个参数。参数接收的是布尔值，默认为False，表示返回DataFrame，如果是True，则返回Series</li><li>文件有多列时，无论squeeze为true还是false,都是返回dataframe,如果只有一列时，才返回series</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Squeeze = False时，读回的是包含header</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>,usecols=[<span class="number">2</span>], squeeze=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">    Q1</span><br><span class="line"><span class="number">0</span>   <span class="number">89</span></span><br><span class="line"><span class="number">1</span>   <span class="number">36</span></span><br><span class="line"><span class="number">2</span>   <span class="number">57</span></span><br><span class="line"><span class="number">3</span>   <span class="number">93</span></span><br><span class="line"><span class="number">4</span>   <span class="number">65</span></span><br><span class="line">..  ..</span><br><span class="line"><span class="number">95</span>  <span class="number">48</span></span><br><span class="line"><span class="number">96</span>  <span class="number">21</span></span><br><span class="line"><span class="number">97</span>  <span class="number">98</span></span><br><span class="line"><span class="number">98</span>  <span class="number">11</span></span><br><span class="line"><span class="number">99</span>  <span class="number">21</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">1</span> columns]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Squeeze = True，读回的是不包含header</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>,usecols=[<span class="number">2</span>], squeeze=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line"><span class="number">0</span>     <span class="number">89</span></span><br><span class="line"><span class="number">1</span>     <span class="number">36</span></span><br><span class="line"><span class="number">2</span>     <span class="number">57</span></span><br><span class="line"><span class="number">3</span>     <span class="number">93</span></span><br><span class="line"><span class="number">4</span>     <span class="number">65</span></span><br><span class="line">      ..</span><br><span class="line"><span class="number">95</span>    <span class="number">48</span></span><br><span class="line"><span class="number">96</span>    <span class="number">21</span></span><br><span class="line"><span class="number">97</span>    <span class="number">98</span></span><br><span class="line"><span class="number">98</span>    <span class="number">11</span></span><br><span class="line"><span class="number">99</span>    <span class="number">21</span></span><br><span class="line">Name: Q1, Length: <span class="number">100</span>, dtype: int64</span><br></pre></td></tr></table></figure><h3 id="prefix">2.8 prefix</h3><blockquote><ol type="1"><li>如果我们的数据没有表头或列名，我们也不想使用names参数来指定列名，pandas提供了一种快捷的方式给数据列添加列名。这就需要使用prefix参数，prefix这个参数可以指定一个前缀，这样列的序号会和这个前缀拼接到一块构成列名。这个参数接收一个字符串对象</li><li><font color='red'>运行时，python提示prefix将来可能会被取消掉</font></li><li><font color='red'>header必须为None时，才可以使用prefix参数</font></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>,header=<span class="literal">None</span>,prefix=<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">           X0    X1  X2  X3  X4  X5     X6     X7</span><br><span class="line"><span class="number">0</span>        name  team  Q1  Q2  Q3  Q4  total    avg</span><br><span class="line"><span class="number">1</span>       Liver     E  <span class="number">89</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">64</span>    <span class="number">198</span>   <span class="number">49.5</span></span><br><span class="line"><span class="number">2</span>        Arry     C  <span class="number">36</span>  <span class="number">37</span>  <span class="number">37</span>  <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line"><span class="number">3</span>         Ack     A  <span class="number">57</span>  <span class="number">60</span>  <span class="number">18</span>  <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line"><span class="number">4</span>       Eorge     C  <span class="number">93</span>  <span class="number">96</span>  <span class="number">71</span>  <span class="number">78</span>    <span class="number">338</span>   <span class="number">84.5</span></span><br><span class="line">..        ...   ...  ..  ..  ..  ..    ...    ...</span><br><span class="line"><span class="number">96</span>    Gabriel     C  <span class="number">48</span>  <span class="number">59</span>  <span class="number">87</span>  <span class="number">74</span>    <span class="number">268</span>   <span class="number">67.0</span></span><br><span class="line"><span class="number">97</span>    Austin7     C  <span class="number">21</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line"><span class="number">98</span>   Lincoln4     C  <span class="number">98</span>  <span class="number">93</span>   <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>   <span class="number">53.0</span></span><br><span class="line"><span class="number">99</span>        Eli     E  <span class="number">11</span>  <span class="number">74</span>  <span class="number">58</span>  <span class="number">91</span>    <span class="number">234</span>   <span class="number">58.5</span></span><br><span class="line"><span class="number">100</span>       Ben     E  <span class="number">21</span>  <span class="number">43</span>  <span class="number">41</span>  <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">101</span> rows x <span class="number">8</span> columns]</span><br></pre></td></tr></table></figure><h3 id="mangle_dupe_cols">2.9 mangle_dupe_cols</h3><blockquote><ol type="1"><li>这个参数接收一个布尔值，如果是True，若数据中存在同名列，如有两个name列，则第一个列名保持不变，第二个name列将被重命名为name.1。如果是FALSE会抛出ValueError异常</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件中存在同名列</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>,mangle_dupe_cols=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">ValueError                                Traceback (most recent call last)</span><br><span class="line">~\AppData\Local\Temp\ipykernel_18692\<span class="number">182617956.</span>py <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">      <span class="number">1</span> <span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">      <span class="number">2</span> </span><br><span class="line">----&gt; <span class="number">3</span> df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>,mangle_dupe_cols=<span class="literal">False</span>)</span><br><span class="line">      <span class="number">4</span> </span><br><span class="line">      <span class="number">5</span> <span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line">c:\Users\simon\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\util\_decorators.py <span class="keyword">in</span> wrapper(*args, **kwargs)</span><br><span class="line">    <span class="number">309</span>                     stacklevel=stacklevel,</span><br><span class="line">    <span class="number">310</span>                 )</span><br><span class="line">--&gt; <span class="number">311</span>             <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">    <span class="number">312</span> </span><br><span class="line">    <span class="number">313</span>         <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line">c:\Users\simon\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\io\parsers\readers.py <span class="keyword">in</span> read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)</span><br><span class="line">    <span class="number">584</span>     kwds.update(kwds_defaults)</span><br><span class="line">    <span class="number">585</span> </span><br><span class="line">--&gt; <span class="number">586</span>     <span class="keyword">return</span> _read(filepath_or_buffer, kwds)</span><br><span class="line">    <span class="number">587</span> </span><br><span class="line">    <span class="number">588</span> </span><br><span class="line"></span><br><span class="line">c:\Users\simon\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\io\parsers\readers.py <span class="keyword">in</span> _read(filepath_or_buffer, kwds)</span><br><span class="line">    <span class="number">480</span> </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>,mangle_dupe_cols=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">        name team  Q1  Q1<span class="number">.1</span>  Q3  Q4  total    avg</span><br><span class="line"><span class="number">0</span>      Liver    E  <span class="number">89</span>    <span class="number">21</span>  <span class="number">24</span>  <span class="number">64</span>    <span class="number">198</span>  <span class="number">49.50</span></span><br><span class="line"><span class="number">1</span>       Arry    C  <span class="number">36</span>    <span class="number">37</span>  <span class="number">37</span>  <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line"><span class="number">2</span>        Ack    A  <span class="number">57</span>    <span class="number">60</span>  <span class="number">18</span>  <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line"><span class="number">3</span>      Eorge    C  <span class="number">93</span>    <span class="number">96</span>  <span class="number">71</span>  <span class="number">78</span>    <span class="number">338</span>  <span class="number">84.50</span></span><br><span class="line"><span class="number">4</span>        Oah    D  <span class="number">65</span>    <span class="number">49</span>  <span class="number">61</span>  <span class="number">86</span>    <span class="number">261</span>  <span class="number">65.25</span></span><br><span class="line">..       ...  ...  ..   ...  ..  ..    ...    ...</span><br><span class="line"><span class="number">95</span>   Gabriel    C  <span class="number">48</span>    <span class="number">59</span>  <span class="number">87</span>  <span class="number">74</span>    <span class="number">268</span>  <span class="number">67.00</span></span><br><span class="line"><span class="number">96</span>   Austin7    C  <span class="number">21</span>    <span class="number">31</span>  <span class="number">30</span>  <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line"><span class="number">97</span>  Lincoln4    C  <span class="number">98</span>    <span class="number">93</span>   <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>  <span class="number">53.00</span></span><br><span class="line"><span class="number">98</span>       Eli    E  <span class="number">11</span>    <span class="number">74</span>  <span class="number">58</span>  <span class="number">91</span>    <span class="number">234</span>  <span class="number">58.50</span></span><br><span class="line"><span class="number">99</span>       Ben    E  <span class="number">21</span>    <span class="number">43</span>  <span class="number">41</span>  <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">8</span> columns]</span><br></pre></td></tr></table></figure><h3 id="dtype">2.10 dtype</h3><blockquote><ol type="1"><li>read_csv将其读入DataFrame时，会指定各数据列的数据类型</li></ol></blockquote><h3 id="engine">2.11 engine</h3><blockquote><ol type="1"><li>这个参数用来确定read_csv函数在解析数据时使用的引擎，默认使用C引擎，解析速度较快。另一个可选的引擎是python引擎，解析速度虽然慢，但是功能全面</li></ol></blockquote><h3 id="converters">2.12 <strong>converters</strong></h3><blockquote><ol type="1"><li>可以使用converters传参对具体的数据进行替换或者修改</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, converters=&#123;<span class="string">&#x27;name&#x27;</span>: <span class="keyword">lambda</span> x: <span class="number">1</span> <span class="keyword">if</span> x == <span class="string">&#x27;Liver&#x27;</span> <span class="keyword">else</span> <span class="number">0</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">    name team  Q1  Q2  Q3  Q4  total    avg</span><br><span class="line"><span class="number">0</span>      <span class="number">1</span>    E  <span class="number">89</span>  <span class="number">21</span>  <span class="number">24</span>  <span class="number">64</span>    <span class="number">198</span>  <span class="number">49.50</span></span><br><span class="line"><span class="number">1</span>      <span class="number">0</span>    C  <span class="number">36</span>  <span class="number">37</span>  <span class="number">37</span>  <span class="number">57</span>    <span class="number">167</span>  <span class="number">41.75</span></span><br><span class="line"><span class="number">2</span>      <span class="number">0</span>    A  <span class="number">57</span>  <span class="number">60</span>  <span class="number">18</span>  <span class="number">84</span>    <span class="number">219</span>  <span class="number">54.75</span></span><br><span class="line"><span class="number">3</span>      <span class="number">0</span>    C  <span class="number">93</span>  <span class="number">96</span>  <span class="number">71</span>  <span class="number">78</span>    <span class="number">338</span>  <span class="number">84.50</span></span><br><span class="line"><span class="number">4</span>      <span class="number">0</span>    D  <span class="number">65</span>  <span class="number">49</span>  <span class="number">61</span>  <span class="number">86</span>    <span class="number">261</span>  <span class="number">65.25</span></span><br><span class="line">..   ...  ...  ..  ..  ..  ..    ...    ...</span><br><span class="line"><span class="number">95</span>     <span class="number">0</span>    C  <span class="number">48</span>  <span class="number">59</span>  <span class="number">87</span>  <span class="number">74</span>    <span class="number">268</span>  <span class="number">67.00</span></span><br><span class="line"><span class="number">96</span>     <span class="number">0</span>    C  <span class="number">21</span>  <span class="number">31</span>  <span class="number">30</span>  <span class="number">43</span>    <span class="number">125</span>  <span class="number">31.25</span></span><br><span class="line"><span class="number">97</span>     <span class="number">0</span>    C  <span class="number">98</span>  <span class="number">93</span>   <span class="number">1</span>  <span class="number">20</span>    <span class="number">212</span>  <span class="number">53.00</span></span><br><span class="line"><span class="number">98</span>     <span class="number">0</span>    E  <span class="number">11</span>  <span class="number">74</span>  <span class="number">58</span>  <span class="number">91</span>    <span class="number">234</span>  <span class="number">58.50</span></span><br><span class="line"><span class="number">99</span>     <span class="number">0</span>    E  <span class="number">21</span>  <span class="number">43</span>  <span class="number">41</span>  <span class="number">74</span>    <span class="number">179</span>  <span class="number">44.75</span></span><br></pre></td></tr></table></figure><h3 id="true_values和false_values">2.13<strong>true_values和false_values</strong></h3><blockquote><ol type="1"><li>这两个参数都是接收一个列表对象，主要作用是通过判断是否为指定内容，然后将其转换为True或者False</li><li><font color ='purple'>当我们使用true_values和false_values这两个参数时，需要保证true_values+false_values中的元素能够覆盖到列的所有取值，否则使用这个参数是不会产生作用的</font></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>,name,sex,height,time,y</span><br><span class="line">01,张三,F,<span class="number">170</span>,<span class="number">2020</span>-02-<span class="number">25</span>,是</span><br><span class="line">02,李四,M,null,<span class="number">2020</span>-02-04,否</span><br><span class="line">03,王五,F,<span class="number">168</span>,<span class="number">2020</span>-02-03,是</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,true_values=[<span class="string">&#x27;是&#x27;</span>],false_values=[<span class="string">&#x27;否&#x27;</span>])</span><br><span class="line">​</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time      y</span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span>   <span class="literal">True</span></span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04  <span class="literal">False</span></span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03   <span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,false_values=[<span class="string">&#x27;是&#x27;</span>,<span class="string">&#x27;否&#x27;</span>])</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time      y</span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span>  <span class="literal">False</span></span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04  <span class="literal">False</span></span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03  <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,true_values=[<span class="string">&#x27;是&#x27;</span>,<span class="string">&#x27;否&#x27;</span>])</span><br><span class="line">​</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time     y</span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span>  <span class="literal">True</span></span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04  <span class="literal">True</span></span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03  <span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面的程序是没有产生效果</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,false_values=[<span class="string">&#x27;是&#x27;</span>])</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time  y</span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span>  是</span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04  否</span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03  是</span><br></pre></td></tr></table></figure><h3 id="skipinitialspace">2.14 <strong>skipinitialspace</strong></h3><blockquote><ol type="1"><li>如果数据之前存在空格，或者说分隔符与数据之间存在空格，这个参数如果指定为True，会跳过这个空格再读数据.。如果取值为False不会跳过空格，而是将空格作为数据的一部分进行读取。这个参数的默认取值为False</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.iloc[<span class="number">1</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line">  <span class="number">21</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./team_avg.csv&#x27;</span>, header=<span class="literal">None</span>, skipinitialspace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df.iloc[<span class="number">1</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute and output</span></span><br><span class="line"><span class="number">21</span></span><br></pre></td></tr></table></figure><h3 id="skiprows">2.14 <strong>skiprows</strong></h3><blockquote><ol type="1"><li><p>这个参数用来指定在读取数据时，我们想跳过哪些行。可以接收int、list、可调用对象等数据类型</p><ul><li><p>可以是int，此时表示从文件开头算起，跳过多少行。如指定为2，表示跳过前2行，从第3行开始读数据,<font color='yellow'>此时需要注意的是head，如果之前指定了head=0，那么跳过2行之后，第3行将变成了head</font></p></li><li><p>可以是一个列表，列表中的元素表示哪些行的数据可以跳过，例如我们想跳过第3行数据，可以传递一个列表[2],<font color='red'>向skiprows传递2和[2]，结果是完全不同的。传递int，表示从文件开头算起，总共跳过多少行。传递一个list，表示跳过指定的行</font></p></li><li><p>跳过第0行及第2行：</p><p>df = pd.read_csv(r'C:.csv'<br />,skiprows=lambda x:x in [0,2])</p></li></ul></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,skiprows=<span class="number">2</span>)</span><br><span class="line">​</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   02  李四   M  null  <span class="number">2020</span>-02-04</span><br><span class="line"><span class="number">0</span>   <span class="number">3</span>  王五   F   <span class="number">168</span>  <span class="number">2020</span>-02-03</span><br></pre></td></tr></table></figure><h3 id="skipfooter">2.15 <strong>skipfooter</strong></h3><blockquote><ol type="1"><li>接收一个int，表示不读取数据的最后3行。read_csv默认使用的c引擎不支持这个参数，因此默认条件下使用这个参数时会打印警告信息。如果我们修改数据的解析引擎为python引擎时则不会抛出警告。另外使用python引擎时，可能会出现乱码，此时可以搭配使用encoding参数指定编码防止出现乱码</li><li>c引擎不支持skipfooter参数，可以指定引擎为python</li></ol></blockquote><h3 id="nrows">2.16 <strong>nrows</strong></h3><blockquote><ol type="1"><li>这个参数指定pandas一次性从文件中读取多少行数据，这在读取海量数据中很有用。此外，有时候我们只是想了解一下数据，没必要把数据都读入内存，只需要读入几行看一下即可，也可以使用这个参数</li><li>这里的行数不包括表头</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,nrows=<span class="number">3</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   <span class="built_in">id</span> name  sex  height        time</span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三    F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span></span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四    M     NaN  <span class="number">2020</span>-02-04</span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五    F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03</span><br></pre></td></tr></table></figure><h3 id="na_values">2.17 <strong>na_values</strong></h3><blockquote><ol type="1"><li><p>这个参数主要用来识别缺失值。即指定数据中哪些字符被识别为缺失值</p></li><li><p>pandas有一个默认缺失值标识符列表，默认将所有列中下面的字符识别为缺失值nan</p><ul><li>```python<br />'', '#N/A', '#N/A N/A', '#NA', '-1.#IND', '-1.#QNAN', '-NaN', '-nan','1.#IND', '1.#QNAN', '<NA>', 'N/A', 'NA', 'NULL', 'NaN', 'n/a', 'nan','null'.<br /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. 这个参数可以接收字符串、列表或字典</span><br><span class="line"></span><br><span class="line">   * 可以是字符串。如`&quot;&#x27;null&#x27;&quot;`，此时将所有列中含有&#x27;null&#x27;的字符全部识别为nan。</span><br><span class="line">   * 可以指定为一个列表，如`[&quot;&#x27;null&#x27;&quot;,&#x27;(null)&#x27;]`，此时会将所有列中含有`&#x27;null&#x27;`和`(null)`字符识别为nan；</span><br><span class="line">   * 可以指定为一个字典，为某一列指定缺失值，字典的key为列名，value可以是上面所示的字符串或列表。</span><br><span class="line"></span><br><span class="line">### 2.18 **keep_default_na**</span><br><span class="line"></span><br><span class="line">1. keep_default_na可以被设置为true或者false, 当被设置为true时，那么na_values中的null值的list就会起作用；当keep_default_na为false时，na_values中的null就不会被取代为NaN了</span><br><span class="line"></span><br><span class="line">![image-20230903184715850](https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230903184715850.png)</span><br><span class="line"></span><br><span class="line">![image-20230903184750976](https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230903184750976.png)</span><br><span class="line"></span><br><span class="line">### 2.19 **na_filter**</span><br><span class="line"></span><br><span class="line">1. 控制pandas在读取数据时是否自动检测数据中的缺失值(大文件中有没有空值)。这个参数就是用来控制这个行为的，默认为True表示检测缺失值，如果设置为False，表示不检测缺失值，这样可以提高数据读取的速度</span><br><span class="line">2. &lt;font color=&#x27;yellow&#x27;&gt;当这个参数设置为False时，na_values和keep_default_na两个参数将被忽略&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">### 2.20 **skip_blank_lines**</span><br><span class="line"></span><br><span class="line">1. 判断是否跳过空行。如果指定为True，表示跳过空行。指定为False，不跳过空行，空行数据正常读取但被全部转换为缺失值nan。默认值为True</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">id,name,sex,height,time</span><br><span class="line">01,张三,F,170,2020-02-25</span><br><span class="line">02,李四,M,null,&#x27;null&#x27;</span><br><span class="line"></span><br><span class="line">03,王五,F,168,2020-02-03</span><br><span class="line">&gt;&gt;&gt;df = pd.read_csv(r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span><br><span class="line">                ,skip_blank_lines=True</span><br><span class="line">                )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">  id name  sex  height        time</span><br><span class="line">0   1   张三    F   170.0  2020-02-25</span><br><span class="line">1   2   李四    M     NaN  2020-02-04</span><br><span class="line">2   3   王五    F   168.0  2020-02-03</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df = pd.read_csv(r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span><br><span class="line">                   # 设置为False，会把空行读入，但是设置为缺失值。</span><br><span class="line">                ,skip_blank_lines=False</span><br><span class="line">                )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   id name  sex  height        time</span><br><span class="line">0  1.0   张三    F   170.0  2020-02-25</span><br><span class="line">1  2.0   李四    M     NaN  2020-02-04</span><br><span class="line">2  NaN  NaN  NaN     NaN         NaN</span><br><span class="line">3  3.0   王五    F   168.0  2020-02-03</span><br></pre></td></tr></table></figure></li></ul></li></ol></blockquote><h3 id="parse_dates">2.21 <strong>parse_dates</strong></h3><blockquote><ol type="1"><li>专门用来设置日期时间列的数据类型</li><li>这个参数可以接收布尔类型、整数列表、字符串列表、列表的列表、字典作为实参<ul><li>可以接收布尔类型数据。此时常常搭配index_col参数来使用</li><li>可以接收整数列表或字符列表，这里的字符为列名。这样可以将一个或多个列解析为日期时间格式</li><li><font color='yellow'>可以接收列表的列表，即二维列表，这样可以将多个列解析为一个时间日期格式列</font></li><li><font color='red'>可以是一个字典,可以对上面生成的新的列自定义列名</font></li></ul></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,parse_dates=<span class="literal">True</span></span><br><span class="line">                 ,index_col=<span class="string">&#x27;time&#x27;</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">            <span class="built_in">id</span> name sex  height  year  month  day</span><br><span class="line">time                                             </span><br><span class="line"><span class="number">2020</span>-02-<span class="number">25</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>      <span class="number">2</span>    <span class="number">5</span></span><br><span class="line"><span class="number">2020</span>-02-04   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>      <span class="number">2</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2020</span>-02-03   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>      <span class="number">2</span>    <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df.index</span><br><span class="line">DatetimeIndex([<span class="string">&#x27;2020-02-25&#x27;</span>, <span class="string">&#x27;2020-02-04&#x27;</span>, <span class="string">&#x27;2020-02-03&#x27;</span>], dtype=<span class="string">&#x27;datetime64[ns]&#x27;</span>, name=<span class="string">&#x27;time&#x27;</span>, freq=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,parse_dates=[<span class="number">4</span>,<span class="number">5</span>] <span class="comment"># 等价于,parse_dates=[&#x27;time&#x27;,&#x27;year&#x27;]</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   <span class="built_in">id</span> name sex  height       time       year  month  day</span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span> <span class="number">2020</span>-02-<span class="number">25</span> <span class="number">2020</span>-01-01      <span class="number">2</span>    <span class="number">5</span></span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN <span class="number">2020</span>-02-04 <span class="number">2020</span>-01-01      <span class="number">2</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F   <span class="number">168.0</span> <span class="number">2020</span>-02-03 <span class="number">2020</span>-01-01      <span class="number">2</span>    <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df.info()</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">pandas</span>.<span class="title">core</span>.<span class="title">frame</span>.<span class="title">DataFrame</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">RangeIndex</span>:</span> <span class="number">3</span> entries, <span class="number">0</span> to <span class="number">2</span></span><br><span class="line">Data columns (total <span class="number">8</span> columns):</span><br><span class="line"> <span class="comment">#   Column  Non-Null Count  Dtype         </span></span><br><span class="line">---  ------  --------------  -----         </span><br><span class="line"> <span class="number">0</span>   <span class="built_in">id</span>      <span class="number">3</span> non-null      int64         </span><br><span class="line"> <span class="number">1</span>   name    <span class="number">3</span> non-null      <span class="built_in">object</span>        </span><br><span class="line"> <span class="number">2</span>   sex     <span class="number">3</span> non-null      <span class="built_in">object</span>        </span><br><span class="line"> <span class="number">3</span>   height  <span class="number">2</span> non-null      float64       </span><br><span class="line"> <span class="number">4</span>   time    <span class="number">3</span> non-null      datetime64[ns]</span><br><span class="line"> <span class="number">5</span>   year    <span class="number">3</span> non-null      datetime64[ns]</span><br><span class="line"> <span class="number">6</span>   month   <span class="number">3</span> non-null      int64         </span><br><span class="line"> <span class="number">7</span>   day     <span class="number">3</span> non-null      int64         </span><br><span class="line">dtypes: datetime64[ns](<span class="number">2</span>), float64(<span class="number">1</span>), int64(<span class="number">3</span>), <span class="built_in">object</span>(<span class="number">2</span>)</span><br><span class="line">memory usage: <span class="number">320.0</span>+ <span class="built_in">bytes</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将year列、month列、day列解析为一个日期时间列, 出现了一个新的列year_month_day，原来的三个列则舍去了</span></span><br><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,parse_dates=[[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]] <span class="comment">#等价于,parse_dates=[[&#x27;year&#x27;,&#x27;month&#x27;,&#x27;day&#x27;]]</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">  year_month_day  <span class="built_in">id</span> name sex  height        time</span><br><span class="line"><span class="number">0</span>     <span class="number">2020</span>-02-05   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span></span><br><span class="line"><span class="number">1</span>     <span class="number">2020</span>-02-04   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04</span><br><span class="line"><span class="number">2</span>     <span class="number">2020</span>-02-03   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,parse_dates=&#123;<span class="string">&#x27;date&#x27;</span>:[<span class="string">&#x27;year&#x27;</span>,<span class="string">&#x27;month&#x27;</span>,<span class="string">&#x27;day&#x27;</span>]&#125;</span><br><span class="line">                 <span class="comment"># ,parse_dates=[[5,6,7]]</span></span><br><span class="line">                 <span class="comment"># ,parse_dates=&#123;&#x27;date&#x27;:[5,6,7]&#125;</span></span><br><span class="line">                 <span class="comment"># ,parse_dates=True</span></span><br><span class="line">                 <span class="comment"># ,index_col=&#x27;time&#x27;</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">        date  <span class="built_in">id</span> name sex  height        time</span><br><span class="line"><span class="number">0</span> <span class="number">2020</span>-02-05   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span></span><br><span class="line"><span class="number">1</span> <span class="number">2020</span>-02-04   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04</span><br><span class="line"><span class="number">2</span> <span class="number">2020</span>-02-03   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03</span><br></pre></td></tr></table></figure><h3 id="keep_date_col">2.22 <strong>keep_date_col</strong></h3><blockquote><ol type="1"><li>parse_dates中的列表的列表中year, month,day三个组成一个新的日期时间列date, 但是原来的year,month和day被删去了，如果将keep_date_col设置为True,则可以保留这三个列</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,parse_dates=&#123;<span class="string">&#x27;date&#x27;</span>:[<span class="string">&#x27;year&#x27;</span>,<span class="string">&#x27;month&#x27;</span>,<span class="string">&#x27;day&#x27;</span>]&#125;</span><br><span class="line">                 ,keep_date_col=<span class="literal">True</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">        date  <span class="built_in">id</span> name sex  height        time  year month day</span><br><span class="line"><span class="number">0</span> <span class="number">2020</span>-02-05   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span>  <span class="number">2020</span>    02  05</span><br><span class="line"><span class="number">1</span> <span class="number">2020</span>-02-04   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04  <span class="number">2020</span>    02  04</span><br><span class="line"><span class="number">2</span> <span class="number">2020</span>-02-03   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03  <span class="number">2020</span>    02  03</span><br></pre></td></tr></table></figure><h3 id="iterator">2.23 <strong>iterator</strong></h3><blockquote><ol type="1"><li>当数据量很大时，这个参数比较有用。这个参数如果为True，那么read_csv将返回一个TextFileReader 对象，而不是DataFrame</li><li>调用TextFileReader对象的get_chunk方法，就可以设置每次读多少行数据</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先函数返回了一个TextFileReader对象，第一次调用TextFileReader的get_chunk方法时，我们指定读取两条数据，结果返回两条。然后数据中只有一条数据了，我们再调用get_chunk方法，让读取2条数据，尽管数据量不够，那么也不会报错，有几条数据就返回几条。只有一条数据就返回一条。但是当第三次调用get_chunk方法时，由于已经没有数据了，所以抛出了StopIteration异常。</span></span><br><span class="line"></span><br><span class="line">熟悉迭代器的伙伴相信已经看出来了，这个TextFileReader似乎是一个类似迭代器的对象，事实上确实是如此的，其确实有__iter__和__next__方法。感兴趣的可以自己探索一下</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,iterator=<span class="literal">True</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">&lt;pandas.io.parsers.TextFileReader at <span class="number">0x1e4c99f7880</span>&gt;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df.get_chunk(<span class="number">2</span>)</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time </span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span> </span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04 </span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df.get_chunk(<span class="number">2</span>)</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time </span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F     <span class="number">168</span>  <span class="number">2020</span>-02-03 </span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df.get_chunk(<span class="number">2</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;&lt;ipython-input-303-4e7dd29059ce&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    df.get_chunk(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;C:\Users\yj\Anaconda3\lib\site-packages\pandas\io\parsers.py&quot;</span>, line <span class="number">1232</span>, <span class="keyword">in</span> get_chunk</span><br><span class="line">    <span class="keyword">return</span> self.read(nrows=size)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;C:\Users\yj\Anaconda3\lib\site-packages\pandas\io\parsers.py&quot;</span>, line <span class="number">1198</span>, <span class="keyword">in</span> read</span><br><span class="line">    ret = self._engine.read(nrows)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;C:\Users\yj\Anaconda3\lib\site-packages\pandas\io\parsers.py&quot;</span>, line <span class="number">2157</span>, <span class="keyword">in</span> read</span><br><span class="line">    data = self._reader.read(nrows)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;pandas\_libs\parsers.pyx&quot;</span>, line <span class="number">847</span>, <span class="keyword">in</span> pandas._libs.parsers.TextReader.read</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;pandas\_libs\parsers.pyx&quot;</span>, line <span class="number">887</span>, <span class="keyword">in</span> pandas._libs.parsers.TextReader._read_low_memory</span><br><span class="line"></span><br><span class="line">StopIteration</span><br></pre></td></tr></table></figure><h3 id="chunksize">2.24 <strong>chunksize</strong></h3><blockquote><ol type="1"><li>可以给get_chunk方法设置默认每次迭代时返回多少数据，这个在chunksize参数中设置，如下面例子中，我们设置每次迭代时返回2条数据，这样每次调用get_chunk方法时，就不需要传入参数了</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 ,iterator=<span class="literal">True</span></span><br><span class="line">                 ,chunksize=<span class="number">2</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df.get_chunk()</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time </span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span> </span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04 </span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;df.get_chunk()</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time </span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F     <span class="number">168</span>  <span class="number">2020</span>-02-03 </span><br></pre></td></tr></table></figure><h3 id="compression">2.25 <strong>compression</strong></h3><blockquote><ol type="1"><li>如果数据本身是压缩文件，read_csv允许我们在不解压的条件下读取数据。这需要指定compression参数，可以为'bz2','gzip', 'xz', 'zip'</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;D:\MyDocuments\yj\桌面\Python\practice\data.zip&#x27;</span></span><br><span class="line">                  ,compression=<span class="string">&#x27;zip&#x27;</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">   <span class="built_in">id</span> name sex  height        time </span><br><span class="line"><span class="number">0</span>   <span class="number">1</span>   张三   F   <span class="number">170.0</span>  <span class="number">2020</span>-02-<span class="number">25</span> </span><br><span class="line"><span class="number">1</span>   <span class="number">2</span>   李四   M     NaN  <span class="number">2020</span>-02-04 </span><br><span class="line"><span class="number">2</span>   <span class="number">3</span>   王五   F   <span class="number">168.0</span>  <span class="number">2020</span>-02-03 </span><br></pre></td></tr></table></figure><h3 id="encoding">2.26 <strong>encoding</strong></h3><blockquote><ol type="1"><li>指定读取文件时使用的编码，通常是<code>utf-8</code>，可以根据自己文件的实际编码进行设置</li></ol></blockquote><h3 id="error_bad_lines">2.27 <strong>error_bad_lines</strong></h3><blockquote><ol type="1"><li>数据中可能有一些行比其他行多一些列。有太多列的行(例如csv行有太多逗号)在默认情况（error_bad_lines设置为True）下会抛出异常，函数也不会返回DataFrame。如果error_bad_lines为False，那么DataFrame会正常返回，而且这些“坏行”会从返回的DataFrame中删除。</li><li>将error_bad_lines设置为False之后，会将有多余列的行直接删除，如下截图</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 把我们的数据中第三行末尾增加一个逗号，表示这一行多了一个字段，来演示</span></span><br><span class="line">&gt;&gt;&gt;df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line">                 )</span><br><span class="line">&gt;&gt;&gt;df</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;&lt;ipython-input-320-e8e87212b1f9&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    df = pd.read_csv(<span class="string">r&#x27;C:\Users\yj\Desktop\data.csv&#x27;</span></span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;C:\Users\yj\Anaconda3\lib\site-packages\pandas\io\parsers.py&quot;</span>, line <span class="number">688</span>, <span class="keyword">in</span> read_csv</span><br><span class="line">    <span class="keyword">return</span> _read(filepath_or_buffer, kwds)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;C:\Users\yj\Anaconda3\lib\site-packages\pandas\io\parsers.py&quot;</span>, line <span class="number">460</span>, <span class="keyword">in</span> _read</span><br><span class="line">    data = parser.read(nrows)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;C:\Users\yj\Anaconda3\lib\site-packages\pandas\io\parsers.py&quot;</span>, line <span class="number">1198</span>, <span class="keyword">in</span> read</span><br><span class="line">    ret = self._engine.read(nrows)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;C:\Users\yj\Anaconda3\lib\site-packages\pandas\io\parsers.py&quot;</span>, line <span class="number">2157</span>, <span class="keyword">in</span> read</span><br><span class="line">    data = self._reader.read(nrows)</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;pandas\_libs\parsers.pyx&quot;</span>, line <span class="number">847</span>, <span class="keyword">in</span> pandas._libs.parsers.TextReader.read</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;pandas\_libs\parsers.pyx&quot;</span>, line <span class="number">862</span>, <span class="keyword">in</span> pandas._libs.parsers.TextReader._read_low_memory</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;pandas\_libs\parsers.pyx&quot;</span>, line <span class="number">918</span>, <span class="keyword">in</span> pandas._libs.parsers.TextReader._read_rows</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;pandas\_libs\parsers.pyx&quot;</span>, line <span class="number">905</span>, <span class="keyword">in</span> pandas._libs.parsers.TextReader._tokenize_rows</span><br><span class="line"></span><br><span class="line">  File <span class="string">&quot;pandas\_libs\parsers.pyx&quot;</span>, line <span class="number">2042</span>, <span class="keyword">in</span> pandas._libs.parsers.raise_parser_error</span><br><span class="line"></span><br><span class="line">ParserError: Error tokenizing data. C error: Expected <span class="number">5</span> fields <span class="keyword">in</span> line <span class="number">3</span>, saw <span class="number">6</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230903212611063.png"alt="image-20230903212611063" /></p><h3 id="warn_bad_lines">2.27 <strong>warn_bad_lines</strong></h3><blockquote><ol type="1"><li>这个参数一般和error_bad_lines一块使用，当error_bad_lines设置为False时，这个参数设置为True时（也是默认情况），会打印警告信息。上面的例子我们已经看到了。如果设置为False，则不打印警告信息</li></ol></blockquote><h3 id="low_memory">2.28 <strong>low_memory</strong></h3><blockquote><ol type="1"><li><p>从参数名上看，这个参数似乎是和内存有关的。首先我们需要清楚，pandas不是一次性把数据都读入到内存的，而是分块读取数据的，也就是说先读第一块数据，再读第二块数据。这样可以避免当数据量过大，一次性将数据读入内存带来的内存溢出。</p><p>前面提到，pandas在读取数据时，默认会通过猜的方式来设置各列的数据类型（除非指定了dtype参数）。分块读数据会有这样一个问题：如果同一列数据在不同块中有不同的数据类型，如何设置这个列的数据类型呢？例如身高height这个列，第一块数据都是int，pandas会首先认为这个列是int类型，但是第二块中某一行的height是一个float，这时候，pandas会采用向上兼容的方式，认为这个列是float类型。但是会在数据读取完毕后打印一个DtypeWarning警告信息，提示这个列是mixedtypes。</p><p>避免出现这种情况，可以将low_memory参数设置为False（默认为True，表示分块读数据），这样pandas在读数据时就不是用分块读取了。但是弊端还是很明显的，就是一旦数据量过大，会出现内存溢出。</p><p>解决这个问题的另一个方法是读取数据时指定dtype参数，这样pandas就不用猜测dtype了，也就不会出现mixedtypes</p></li></ol></blockquote><h2 id="pandas-read_excel函数参数">3.pandas read_excel函数参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pd.read_excel(io, sheet_name=<span class="number">0</span>, header=<span class="number">0</span>,</span><br><span class="line">              names=<span class="literal">None</span>, index_col=<span class="literal">None</span>,</span><br><span class="line">              usecols=<span class="literal">None</span>, squeeze=<span class="literal">False</span>,</span><br><span class="line">              dtype=<span class="literal">None</span>, engine=<span class="literal">None</span>,</span><br><span class="line">              converters=<span class="literal">None</span>, true_values=<span class="literal">None</span>,</span><br><span class="line">              false_values=<span class="literal">None</span>, skiprows=<span class="literal">None</span>,</span><br><span class="line">              nrows=<span class="literal">None</span>, na_values=<span class="literal">None</span>,</span><br><span class="line">              keep_default_na=<span class="literal">True</span>, verbose=<span class="literal">False</span>,</span><br><span class="line">              parse_dates=<span class="literal">False</span>, date_parser=<span class="literal">None</span>,</span><br><span class="line">              thousands=<span class="literal">None</span>, comment=<span class="literal">None</span>, skipfooter=<span class="number">0</span>,</span><br><span class="line">              convert_float=<span class="literal">True</span>, mangle_dupe_cols=<span class="literal">True</span>, **kwds)</span><br></pre></td></tr></table></figure><h3 id="io">3.1 io</h3><blockquote><ol type="1"><li>io类似csv中的file_path_buffer, 即文件路径</li></ol></blockquote><h3 id="sheet_name">3.2 sheet_name</h3><blockquote><ol type="1"><li>表格：excel中的sheet的页面</li></ol></blockquote><h3 id="header-1">3.3 header</h3><blockquote><ol type="1"><li>表头，类似与csv</li></ol></blockquote><h3 id="names-1">3.4 names</h3><blockquote><ol type="1"><li>列名: 实际是header_row</li></ol></blockquote><h2 id="数据输出">4. 数据输出</h2><h3 id="df.to_csv">4.1 df.to_csv()</h3><blockquote><ol type="1"><li>写入数据到csv: df.to_csv('xxx.csv')</li><li>当写入文件太大时，可以在写入时进行压缩<ul><li>compression_opts = dict(method='zip', archive_name='out.csv')<br />df.to_csv('out.zip', index=False, compression=compression_opts)</li></ul></li></ol></blockquote><h3 id="df.to_excel">4.2 df.to_excel()</h3><blockquote><ol type="1"><li>df.to_excel('xxxx.xlsx')</li><li>df.to_excel('xxxx.xlsx', sheet_name='Sheet1', index=False)</li><li>df.to_excel('xxxx.xlsx', sheet_name='Sheet1', index_label='label',merge_cells = False)</li><li>多个df分不同sheet写入到一个excel中：<ul><li>with pd.ExcelWriter('path_to_file.xlsx') as writer:<br />df1.to_excel(writer, sheet_name="sheet1")<br />df2.to_excel(writer, sheet_name="sheet2")</li></ul></li><li>指定引擎写入excel<ul><li>df.to_excel('xxxx.xlsx', sheet_name='Sheet1', engine ='xlsxwriter')</li></ul></li><li>在engine参数中设置ExcelWriter使用的引擎<ul><li>writer = pd.ExcelWriter('xxxx.xlsx', sheet_name='Sheet1', engine ='xlsxwriter')<br />df1.to_excel(writer)<br />writer.save()</li></ul></li><li>设置系统引擎<ul><li>from pandas import options<br />options.io.xlsx.writer = 'xlsxwriter'<br />df.to_excel(writer, sheet_name="sheet1")</li></ul></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;pythonpandas数据读取与输出&quot;&gt;[Python]Pandas数据读取与输出&lt;/h1&gt;
&lt;h2 id=&quot;pandas-read_csv函数原型&quot;&gt;1.pandas read_csv函数原型&lt;/h2&gt;
&lt;figure class=&quot;highlight p</summary>
      
    
    
    
    <category term="Python" scheme="https://tresordie.github.io/categories/Python/"/>
    
    
    <category term="Pandas" scheme="https://tresordie.github.io/tags/Pandas/"/>
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="https://tresordie.github.io/2023/07/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>https://tresordie.github.io/2023/07/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2023-07-03T02:00:00.000Z</published>
    <updated>2023-07-21T12:46:46.375Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python数据结构">[Python]数据结构</h1><h2 id="什么是数据结构">1. 什么是数据结构</h2><blockquote><p>常见的数据结构</p><ol type="1"><li>栈(stack)</li><li>队列(Queue)</li><li>数组(Array)</li><li>链表(Linked List)</li><li>树(Tree)</li><li>图(Graph)</li><li>.....</li></ol></blockquote><h2 id="python的数据结构">2. python的数据结构</h2><h3 id="不可变数据">2.1 不可变数据</h3><blockquote><ol type="1"><li>数字(Number)</li><li>字符串(String)</li><li>元组(tuple)</li></ol></blockquote><h4 id="数字">2.1.1 数字</h4><blockquote><ol type="1"><li>数字类型</li><li>计算方法</li></ol></blockquote><h4 id="字符串截取">2.1.2 字符串(截取)</h4><blockquote><ol type="1"><li>var[-1]: 从右到左，索引从-1开始</li><li>var[-3:-1]: 从右到左，索引从-1开始，到-3截止，不包含-3</li><li>var[1:7]: 从左到右，索引从1到7，不包含7</li><li>var[6:]: 从左到右，索引从6开始，包含后面所有的字符</li><li>var[:]: 所有的字符，相当于复制</li><li>var[0:5:2]: 从索引0开始到5，步长为2</li><li>var[1:7:3]: 从索引1开始到7，步长为3</li><li>var[::-1]: 反转字符</li></ol></blockquote><h4 id="字符串转换连接等">2.1.3 字符串(转换/连接等)</h4><blockquote><ol type="1"><li>字符串长度： len(str)</li><li>字符串替换字符：str.replace(old, new, max) #用new的字符替换old字符，最多替换max次</li><li>字符串分割：str.split(character) # 用character对字符串进行分割</li><li>字符串连接：character.join(list) #用character连接列表，如：'-'.join(list)</li><li>转换成大写: str.upper()</li><li>转换成小写：str.lower()</li><li>大小写互换：str.swapcase()</li><li>首字母转大写：str.capitalize()</li><li>判断是否全是小写：str.islower()</li><li>判断是否全是大写：str.isupper()</li><li>长度不够，前面补零: str.zfill(n) # 长度为n,如果长度不够，前面补零</li></ol></blockquote><h4 id="布尔型">2.1.4 布尔型</h4><blockquote><ol type="1"><li>True和False分别代表真和假，哪些情况会得到假：<ol type="1"><li>None, False</li><li>数值中的0， 0.0， 0j, Decimal(0), Fraction(0, 1)</li><li>空字符串"", 元组空，空列表</li><li>空字典，空集合</li></ol></li></ol></blockquote><h4 id="元组">2.1.5 元组</h4><blockquote><ol type="1"><li>元组类似于列表，只是元组的数值不能被改变</li><li>元组赋值给其它元素</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>)</span><br><span class="line">a, *b = x    <span class="comment"># a占第一个，剩余的组成列表全给b</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>)</span><br><span class="line">a, *b, c = x   <span class="comment"># a占第一个，c占最后一个，剩余的组成列表全给b</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="可变数据">2.2 可变数据</h3><blockquote><ol type="1"><li>列表List</li><li>字典Dictionary</li><li>集合Set</li></ol></blockquote><h4 id="列表">2.2.1 列表</h4><blockquote><ol type="1"><li>列表长度：len(list)</li><li>列表元素最大值：max(list)</li><li>列表元素最小值: min(list)</li><li>列表元素求和：sum(list)</li><li>指定元素位置：list.index(character)</li><li>元素的个数：list.count</li><li>列表排序：sorted(list)</li><li>列表是否至少一个元素为真：any(list)</li><li>列表是否所有元素为真：all(a)</li><li>列表添加一个元素：list.append(str, index)</li><li>列表删除最后元素：list.pop(str)</li><li>与其他列表合并：list.extend(list1)</li><li>列表指定索引插入元素：list.insert(index, str)</li><li>删除第一个指定元素：list.remove(str)</li><li>清空列表：list.clear()</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230704105239434.png"alt="image-20230704105239434" /></p><h4 id="列表通过迭代快速生成一个列表">2.2.2列表(通过迭代快速生成一个列表)</h4><blockquote><ol type="1"><li>[i for i in range(5)]</li><li>['第'+str(i) for i in range(5)]</li><li>[i for i in range(5) if i%2==0]</li><li>[i.upper() for i in "Hello world" if i!=' ']</li></ol></blockquote><h4 id="字典定义字典变量赋值">2.2.3 字典(定义字典变量/赋值)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="built_in">dict</span>(name=<span class="string">&#x27;Tom&#x27;</span>, age=<span class="number">18</span>, height=<span class="number">180</span>)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;height&#x27;</span>: <span class="number">180</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="built_in">dict</span>([(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;Tom&#x27;</span>),(<span class="string">&#x27;age&#x27;</span>,<span class="number">18</span>),(<span class="string">&#x27;height&#x27;</span>, <span class="number">190</span>)])</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;height&#x27;</span>: <span class="number">190</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;height&#x27;</span>],[<span class="string">&#x27;Tom&#x27;</span>,<span class="number">18</span>,<span class="number">180</span>]))</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;height&#x27;</span>: <span class="number">180</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="字典常用操作">2.2.4 字典(常用操作)</h4><blockquote><ol type="1"><li>删除指定key: d.pop('name')</li><li>随机删除某一项：d.popitem()</li><li>删除键值对：del d['name']</li><li>清空字典：d.clear()</li><li>列出所有键：d.keys()</li><li>列出所有值：d.values()</li><li>列出所有键值对元组：d.items()</li><li>插入一个键并给定默认值3：d.setdefault('a', 3)</li><li>将dict2的键值对添加到dict：d.update(dict2)</li><li>如果键存在，则返回其对应值；如果不存在字典中，则返回默认值：d.get('math',100)</li><li>最大值：max(d)</li><li>最小值: min(d)</li><li>字典长度：len(d)</li><li>字符串形式：str(d)</li><li>任意一个键为True：any(d)</li><li>所有键为True：all(d)</li><li>所有键的列表排序：sorted(d)</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;height&#x27;</span>],[<span class="string">&#x27;Tom&#x27;</span>,<span class="number">18</span>,<span class="number">180</span>]))</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line">d.pop(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;height&#x27;</span>: <span class="number">180</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;height&#x27;</span>: <span class="number">180</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;height&#x27;</span>],[<span class="string">&#x27;Tom&#x27;</span>,<span class="number">18</span>,<span class="number">180</span>]))</span><br><span class="line">d2 = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],[<span class="string">&#x27;simon&#x27;</span>,<span class="number">38</span>,<span class="number">170</span>]))</span><br><span class="line">d.update(d2)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;height&#x27;</span>: <span class="number">180</span>, <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">38</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">170</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;height&#x27;</span>],[<span class="string">&#x27;Tom&#x27;</span>,<span class="number">18</span>,<span class="number">180</span>]))</span><br><span class="line">d2 = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;math&#x27;</span>],[<span class="string">&#x27;simon&#x27;</span>,<span class="number">38</span>,<span class="number">170</span>,<span class="number">1000</span>]))</span><br><span class="line">d.update(d2)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line">d.get(<span class="string">&#x27;math&#x27;</span>,<span class="number">100</span>)<span class="comment"># 如果成员中没有math, 就输出默认100，有的话就输出成员键值</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;height&#x27;</span>: <span class="number">180</span>, <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">38</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">170</span>, <span class="string">&#x27;math&#x27;</span>: <span class="number">1000</span>&#125;</span><br><span class="line"><span class="number">1000</span></span><br></pre></td></tr></table></figure><h4 id="集合">2.2.5 集合</h4><blockquote><ol type="1"><li>集合存放无顺序，无索引内容的容器，使用{}表示</li><li>可以用集合消除重复的元素</li><li>定义方式</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;&#125; <span class="comment"># 空集合</span></span><br><span class="line">s = &#123;<span class="string">&#x27;5元&#x27;</span>， <span class="string">&#x27;10元&#x27;</span>&#125;</span><br><span class="line">s = <span class="built_in">set</span>() <span class="comment"># 空集合</span></span><br><span class="line">s = <span class="built_in">set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]) <span class="comment"># 使用列表定义</span></span><br><span class="line">s = &#123;<span class="number">1</span>, <span class="literal">True</span>, <span class="string">&#x27;a&#x27;</span>&#125;</span><br><span class="line">s = &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125; <span class="comment"># &#123;1&#125;去重</span></span><br><span class="line"><span class="built_in">type</span>(s)</span><br></pre></td></tr></table></figure><h4 id="集合基本操作">2.2.6 集合基本操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> s  <span class="comment"># True</span></span><br><span class="line">s.add(<span class="number">2</span>)  <span class="comment"># &#123;2, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;&#125;添加元素</span></span><br><span class="line">s.update([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>]) <span class="comment"># &#123;1, 2, 3, 4, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;&#125; 添加元素</span></span><br><span class="line"><span class="comment">#删除元素</span></span><br><span class="line">s.remove(<span class="string">&#x27;a&#x27;</span>)  <span class="comment"># &#123;&#x27;b&#x27;, &#x27;c&#x27;&#125;   删除不存在的会报错</span></span><br><span class="line">s.discard(<span class="string">&#x27;3&#x27;</span>) <span class="comment"># 删除一个元素，无则忽略，不报错</span></span><br><span class="line">s.clear() <span class="comment"># set()清空</span></span><br></pre></td></tr></table></figure><h4 id="集合数学运算">2.2.7 集合数学运算</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">s1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line">s2 = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line">s1 &amp; s2 <span class="comment"># 交集&#123;2,3&#125;</span></span><br><span class="line">s1.intersection(s2) <span class="comment"># 交集&#123;2,3&#125;</span></span><br><span class="line">s1.intersection_update(s2) <span class="comment"># 交集&#123;2,3&#125;, 会覆盖s1</span></span><br><span class="line"></span><br><span class="line">s1 | s2 <span class="comment"># 并集 &#123;1,2,3,4&#125;</span></span><br><span class="line">s1.union(s2) <span class="comment"># 并集 &#123;1,2,3,4&#125;</span></span><br><span class="line"></span><br><span class="line">s1.difference(s2) <span class="comment"># 差集 &#123;1&#125;</span></span><br><span class="line">s1.difference_update(s2) <span class="comment"># 差集 &#123;1&#125;会覆盖 s1</span></span><br><span class="line"></span><br><span class="line">s1.symmetric_difference(s2) <span class="comment"># &#123;1, 4&#125; 交集之外</span></span><br><span class="line"></span><br><span class="line">s1.isdisjoint(s2) <span class="comment"># False(是否没有交集)</span></span><br><span class="line">s1.issubset(s2) <span class="comment"># False(s1是否是s2的子集)</span></span><br><span class="line">s1.issuperset(s2) <span class="comment"># False(s1是否是s2的超集，即s1是否包含s2中所有的元素)</span></span><br></pre></td></tr></table></figure><h3 id="查询及判断数据类型">2.3 查询及判断数据类型</h3><blockquote><ol type="1"><li>查询数据类型</li><li>判断数据类型</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;hello&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(str1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(str2, <span class="built_in">str</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class"><span class="title">True</span></span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">21</span></span><br><span class="line"><span class="built_in">print</span>(a+b)</span><br><span class="line"><span class="built_in">print</span>(a-b)</span><br><span class="line"><span class="built_in">print</span>(a*b)</span><br><span class="line"><span class="built_in">print</span>(b/a)</span><br><span class="line"><span class="built_in">print</span>(a**b)</span><br><span class="line"><span class="built_in">print</span>(b%a)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="number">9</span>//<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">9.0</span>//<span class="number">2.0</span>)</span><br><span class="line"><span class="built_in">print</span>(-<span class="number">11</span>//<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(-<span class="number">11.0</span>//<span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">31</span></span><br><span class="line"><span class="number">-11</span></span><br><span class="line"><span class="number">210</span></span><br><span class="line"><span class="number">2.1</span></span><br><span class="line"><span class="number">1000000000000000000000</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4.0</span></span><br><span class="line"><span class="number">-4</span></span><br><span class="line"><span class="number">-4.0</span></span><br></pre></td></tr></table></figure><h2 id="numpy">3. Numpy</h2><h3 id="含义">3.1 含义</h3><blockquote><ol type="1"><li>Numpy是python的一个高性能矩阵运算的科学计算库，主要是以数组的形式进行数据操作和数学计算</li><li>Pandas在安装还是会自动安装Numpy</li><li>Pandas的数据结构和运算的底层工作都交给Numpy来完成</li></ol></blockquote><h3 id="数据结构">3.2 数据结构</h3><blockquote><ol type="1"><li>Numpy提供一维到三维的数据结构</li><li>Numpy提供两个基本对象：<ul><li>ndarray: 存储数据的多维数组</li><li>nfunc: 对数组进行处理的函数</li></ul></li></ol></blockquote><h3 id="创建数据">3.3 创建数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建阵列</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">np.array(([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]))</span><br><span class="line"></span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成10个数，步长为1</span></span><br><span class="line">np.arange(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从3到10(不包含10)，步长0.1</span></span><br><span class="line">np.arange(<span class="number">3</span>,<span class="number">10</span>,<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">array([<span class="number">3.</span> , <span class="number">3.1</span>, <span class="number">3.2</span>, <span class="number">3.3</span>, <span class="number">3.4</span>, <span class="number">3.5</span>, <span class="number">3.6</span>, <span class="number">3.7</span>, <span class="number">3.8</span>, <span class="number">3.9</span>, <span class="number">4.</span> , <span class="number">4.1</span>, <span class="number">4.2</span>,</span><br><span class="line">       <span class="number">4.3</span>, <span class="number">4.4</span>, <span class="number">4.5</span>, <span class="number">4.6</span>, <span class="number">4.7</span>, <span class="number">4.8</span>, <span class="number">4.9</span>, <span class="number">5.</span> , <span class="number">5.1</span>, <span class="number">5.2</span>, <span class="number">5.3</span>, <span class="number">5.4</span>, <span class="number">5.5</span>,</span><br><span class="line">       <span class="number">5.6</span>, <span class="number">5.7</span>, <span class="number">5.8</span>, <span class="number">5.9</span>, <span class="number">6.</span> , <span class="number">6.1</span>, <span class="number">6.2</span>, <span class="number">6.3</span>, <span class="number">6.4</span>, <span class="number">6.5</span>, <span class="number">6.6</span>, <span class="number">6.7</span>, <span class="number">6.8</span>,</span><br><span class="line">       <span class="number">6.9</span>, <span class="number">7.</span> , <span class="number">7.1</span>, <span class="number">7.2</span>, <span class="number">7.3</span>, <span class="number">7.4</span>, <span class="number">7.5</span>, <span class="number">7.6</span>, <span class="number">7.7</span>, <span class="number">7.8</span>, <span class="number">7.9</span>, <span class="number">8.</span> , <span class="number">8.1</span>,</span><br><span class="line">       <span class="number">8.2</span>, <span class="number">8.3</span>, <span class="number">8.4</span>, <span class="number">8.5</span>, <span class="number">8.6</span>, <span class="number">8.7</span>, <span class="number">8.8</span>, <span class="number">8.9</span>, <span class="number">9.</span> , <span class="number">9.1</span>, <span class="number">9.2</span>, <span class="number">9.3</span>, <span class="number">9.4</span>,</span><br><span class="line">       <span class="number">9.5</span>, <span class="number">9.6</span>, <span class="number">9.7</span>, <span class="number">9.8</span>, <span class="number">9.9</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从2.0到3.0，生成均匀的5个值，不包括终值3.0</span></span><br><span class="line">np.linspace(<span class="number">2.0</span>, <span class="number">3.0</span>, num=<span class="number">5</span>, endpoint=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">array([<span class="number">2.</span> , <span class="number">2.2</span>, <span class="number">2.4</span>, <span class="number">2.6</span>, <span class="number">2.8</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成随机 6x4 数组，浮点型</span></span><br><span class="line">np.random.randn(<span class="number">6</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">array([[-<span class="number">1.0709588</span> ,  <span class="number">0.8808834</span> , -<span class="number">2.10043801</span>,  <span class="number">0.76517084</span>],</span><br><span class="line">       [ <span class="number">0.99695336</span>,  <span class="number">0.00699434</span>, -<span class="number">0.25934578</span>, -<span class="number">1.10122087</span>],</span><br><span class="line">       [-<span class="number">1.66900922</span>, -<span class="number">0.84645755</span>, -<span class="number">1.78121819</span>,  <span class="number">0.57979337</span>],</span><br><span class="line">       [-<span class="number">1.2973744</span> , -<span class="number">0.09364091</span>, -<span class="number">0.50886083</span>, -<span class="number">0.62220284</span>],</span><br><span class="line">       [ <span class="number">0.98998725</span>, -<span class="number">0.57342678</span>,  <span class="number">0.60340412</span>,  <span class="number">1.01865171</span>],</span><br><span class="line">       [-<span class="number">0.78713738</span>, -<span class="number">0.78334524</span>, -<span class="number">1.8707407</span> ,  <span class="number">0.40581653</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定范围 3~7 的 2x4矩阵</span></span><br><span class="line">np.random.randint(<span class="number">3</span>,<span class="number">7</span>,size=(<span class="number">2</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">array([[<span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成浮点数0</span></span><br><span class="line">np.zeros(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">array([<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>])</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709193508184.png"alt="image-20230709193508184" /> <imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709193614237.png"alt="image-20230709193614237" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709194013638.png"alt="image-20230709194013638" /> <imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709193844528.png" /></p><h3 id="数组信息">3.4 数组信息</h3><blockquote><ol type="1"><li>n.shape # 数组的尺寸大小，类型为元组</li><li>n.shape = (4, 1) # 形状改变</li><li>a = n.reshape((2, 2)) # 改变原数组的形状，创建一个新数组</li><li>n.dtype # 数据类型</li><li>n.size # 元素数</li><li>np.typeDict # np的所有数据类型</li></ol></blockquote><h3 id="统计计算">3.5 统计计算</h3><h4 id="切片">3.5.1 切片</h4><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709200111841.png"alt="image-20230709200111841" /></p><h4 id="加法">3.5.2 加法</h4><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709200139101.png"alt="image-20230709200139101" /></p><h4 id="减法">3.5.3 减法</h4><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709200230685.png"alt="image-20230709200230685" /></p><h4 id="数学函数">3.5.4 数学函数</h4><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230709200642339.png"alt="image-20230709200642339" /></p><h2 id="pandas数据结构">4. Pandas数据结构</h2><h3 id="数组存储框架">4.1 数组存储框架</h3><blockquote><ol type="1"><li>Series<ul><li>一维数组</li><li>带标签的同构数组</li></ul></li><li>DataFrame<ul><li>二维数组</li><li>带标签，大小可变的二维异构表格</li></ul></li><li>多维数组<ul><li>使用多层索引形式来实现</li></ul></li></ol></blockquote><h3 id="dataframe">4.2 DataFrame</h3><blockquote><ol type="1"><li>二维数组</li><li>第一行是表头，或叫字段名，类似字典里的键值</li><li>第一列是索引，数据所描述的主体</li></ol></blockquote><h3 id="pandas生成数据">4.3 Pandas生成数据</h3><h4 id="字典格式生成数据">4.3.1 字典格式生成数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pandas create dataframe: dictionary</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data_by_pandas</span>():</span></span><br><span class="line">    df = pd.DataFrame(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;Country&quot;</span>: [<span class="string">&quot;China&quot;</span>, <span class="string">&quot;USA&quot;</span>, <span class="string">&quot;Japan&quot;</span>],</span><br><span class="line">            <span class="string">&quot;Area&quot;</span>: [<span class="string">&quot;Asia&quot;</span>, <span class="string">&quot;North American&quot;</span>, <span class="string">&quot;Asia&quot;</span>],</span><br><span class="line">            <span class="string">&quot;Populate&quot;</span>: [<span class="string">&quot;13.97&quot;</span>, <span class="string">&quot;3.28&quot;</span>, <span class="string">&quot;1.26&quot;</span>],</span><br><span class="line">            <span class="string">&quot;GDP&quot;</span>: [<span class="string">&quot;14.34&quot;</span>, <span class="string">&quot;21.34&quot;</span>, <span class="string">&quot;5.08&quot;</span>],</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># print(pd.__version__)</span></span><br><span class="line">    df = create_data_by_pandas()</span><br><span class="line">    <span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230718154340412.png"alt="image-20230718154340412" /></p><h4 id="一维数组方式生成dataframeseries或者numpy">4.3.2一维数组方式生成DataFrame(Series或者Numpy)</h4><blockquote><ol type="1"><li><p>pd.Series用法</p><ul><li><p>pd.Series(data, index=index)</p><ul><li><p>data可以是任意类型数据</p></li><li><p>index是轴上的一个列表，必须与data的长度相同，如果没有指定，则自动从0开始，表示为[0,..., len(data)-1]</p></li><li><p>https://www.runoob.com/pandas/pandas-series.html</p></li></ul></li><li><p>data数据生成方式</p><ul><li><p>使用列表和元组</p><ul><li><p>​ df = pd.Series(</p><p>​ ["a", "b", "c", "d", "e"],</p><p>​ <em>index</em>=<em>list</em>(range(5)),</p><p>​ <em>name</em>="character",</p><p>​ <em>dtype</em>="str",</p><p>​ )</p></li></ul></li><li><p>使用ndarray</p><ul><li><p>​ df = pd.Series(</p><p>​ np.random.randn(5),</p><p>​ <em>index</em>=["n1", "n2", "n3", "n4", "n5"],</p><p>​ <em>name</em>="character",</p><p>​ <em>dtype</em>="float32",</p><p>​ )</p></li></ul></li><li><p>使用字典(其中key值为index)</p><ul><li><p>​ d = {"b": 1, "a": 0, "c": 2}</p><p>​ s = pd.Series(d)</p></li></ul></li><li><p>使用标量</p></li></ul></li></ul></li><li><p>生成的DataFrame会自动对齐，如其中一个为4行，其它三个为1行，所有会对齐为4行</p></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># pandas create dataframe: Series/Numpy</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data_with_series_numpy</span>():</span></span><br><span class="line">    df = pd.DataFrame(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;A&quot;</span>: <span class="number">1.0</span>,</span><br><span class="line">            <span class="string">&quot;B&quot;</span>: pd.Timestamp(<span class="string">&quot;20230718&quot;</span>),</span><br><span class="line">            <span class="string">&quot;C&quot;</span>: pd.Series(<span class="number">1</span>, index=<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">4</span>)), dtype=<span class="string">&quot;float32&quot;</span>),</span><br><span class="line">            <span class="string">&quot;D&quot;</span>: np.array([<span class="number">3</span>] * <span class="number">4</span>, dtype=<span class="string">&quot;int32&quot;</span>),</span><br><span class="line">            <span class="string">&quot;E&quot;</span>: pd.Categorical([<span class="string">&quot;test&quot;</span>, <span class="string">&quot;train&quot;</span>, <span class="string">&quot;test&quot;</span>, <span class="string">&quot;train&quot;</span>]),</span><br><span class="line">            <span class="string">&quot;F&quot;</span>: <span class="string">&quot;foo&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># print(pd.__version__)</span></span><br><span class="line">    df = create_data_with_series_numpy()</span><br><span class="line">    <span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230718163056700.png"alt="image-20230718163056700" /></p><h4 id="生成二维dataframe">4.3.3 生成二维DataFrame</h4><blockquote><ol type="1"><li><p><strong>DataFrame最基本的定义格式如下：</strong></p><ul><li>df = pd.DataFrame(data=None, index=None, columns=None)<ul><li>data: 具体数据，结构化或者同构化ndarray</li><li>index: 索引，及各列标签，可自行指定</li><li>columns:列索引，表头，如果没有指定则自动生成RangeIndex(0,1,2....,n)</li></ul></li></ul></li><li><p><strong>DataFrame数据生成方式：</strong></p><ul><li><p>字典(key:列头，value:列内容)</p><ul><li><p>​ df = pd.DataFrame(</p><p>​ {</p><p>​ "Country": ["China", "USA", "Japan"],</p><p>​ "Area": ["Asia", "North American", "Asia"],</p><p>​ "Populate": ["13.97", "3.28", "1.26"],</p><p>​ "GDP": ["14.34", "21.34", "5.08"],</p><p>​ }</p><p>​ )</p></li></ul></li><li><p>Series组成的字典</p><ul><li>实质上和字典是一样的</li></ul></li><li><p>字典组成的列表</p><ul><li>key:列头</li><li>value:列内容</li></ul></li><li><p>Series生成一列的DataFrame</p></li><li><p><strong>其它：从字典中生成</strong></p><ul><li><p>​ s = pd.DataFrame.from_dict(</p><p>​ {</p><p>​ "Country": ["China", "USA", "Japan"],</p><p>​ "Area": ["Asia", "North American", "Asia"],</p><p>​ "Populate": ["13.97", "3.28", "1.26"],</p><p>​ "GDP": ["14.34", "21.34", "5.08"],</p><p>​ }</p><p>​ )</p><p>​ print(s)</p></li></ul></li><li><p><strong>其它：从列表，元组，ndarray中生成</strong></p><ul><li><p>​ s = pd.DataFrame.from_records(</p><p>​ [("China", "USA", "Japan"), ("14.34", "21.34", "5.08")],</p><p>​ )</p><p>​ print(s)</p></li></ul></li><li><p><strong>其它：列内容为字典</strong></p></li></ul></li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230718180223333.png"alt="image-20230718180223333" /></p><h3 id="pandas数据类型及数据检测">4.4 Pandas数据类型及数据检测</h3><h4 id="pandas数据类型">4.4.1 Pandas数据类型</h4><blockquote><ol type="1"><li>float</li><li>int</li><li>bool</li><li>datetime64[ns]</li><li>datetime64[ns,tz]</li><li>timedelta64[ns]</li><li>timedelta[ns]</li><li>category</li><li>object</li><li>string</li></ol></blockquote><h4 id="pandas数据检测">4.4.2 Pandas数据检测</h4><blockquote><ol type="1"><li>pd.api.types.is_bool_dtype(s)</li><li>pd.api.types.is_categorical_dtype(s)</li><li>pd.api.types.is_datetime64_any_dtype(s)</li><li>pd.api.types.is_datetime64_ns_dtype(s)</li><li>pd.api.types.is_datetime64_dtype(s)</li><li>pd.api.types.is_float_dtype(s)</li><li>pd.api.types.is_int64_dtype(s)</li><li>pd.api.types.is_numeric_dtype(s)</li><li>pd.api.types.is_object_dtype(s)</li><li>pd.api.types.is_string_dtype(s)</li><li>pd.api.types.is_timedelta64_dtype(s)</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python数据结构&quot;&gt;[Python]数据结构&lt;/h1&gt;
&lt;h2 id=&quot;什么是数据结构&quot;&gt;1. 什么是数据结构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;常见的数据结构&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;栈(stack)&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="Python" scheme="https://tresordie.github.io/categories/Python/"/>
    
    
    <category term="Pandas" scheme="https://tresordie.github.io/tags/Pandas/"/>
    
  </entry>
  
  <entry>
    <title>Pandas简介</title>
    <link href="https://tresordie.github.io/2023/05/30/Pandas%E7%AE%80%E4%BB%8B/"/>
    <id>https://tresordie.github.io/2023/05/30/Pandas%E7%AE%80%E4%BB%8B/</id>
    <published>2023-05-30T02:00:00.000Z</published>
    <updated>2023-05-30T06:54:35.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pythonpandas简介">[Python]Pandas简介</h1><h2 id="pandas">1. Pandas</h2><blockquote><ol type="1"><li>Python的第三方库</li><li>用于数据分析</li></ol></blockquote><h2 id="环境搭建">2. 环境搭建</h2><blockquote><ol type="1"><li><p>解释器：python</p></li><li><p>编辑器：Jupyter notebook / Jupyter lab / VScode</p></li><li><p>Pandas：</p><p>pip install pandas</p></li></ol></blockquote><h2 id="读写excel">3. 读写excel</h2><h3 id="读取excel">3.1 读取excel</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到dataframe</span></span><br><span class="line">df  <span class="comment">#打印dataframe</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530120846449.png"alt="image-20230530120846449" /></p><h3 id="打印前20行">3.2 打印前20行</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.head(<span class="number">20</span>)  <span class="comment">#打印前20行</span></span><br></pre></td></tr></table></figure><h3 id="打印最后-xx-行默认5行">3.3 打印最后 xx 行(默认5行)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.tail()<span class="comment">#打印倒数5行</span></span><br></pre></td></tr></table></figure><h3 id="随机打印-xx-行默认5行">3.4 随机打印 xx 行(默认5行)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.sample(<span class="number">10</span>)         <span class="comment">#random 10 rows</span></span><br></pre></td></tr></table></figure><h3 id="打印行列数">3.5 打印行列数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.shape  </span><br></pre></td></tr></table></figure><h3 id="打印data-frame所有的数据类型索引情况行列数等信息">3.6 打印dataframe所有的数据类型，索引情况，行列数等信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.info()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530121620586.png"alt="image-20230530121620586" /></p><h3 id="查看数值型列的汇总统计">3.7 查看数值型列的汇总统计</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530121800299.png"alt="image-20230530121800299" /></p><h3 id="查看各字段类型">3.8 查看各字段类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.dtypes</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530121955029.png" /></p><h3 id="查看数据列名">3.9 查看数据列名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.axes<span class="comment">#行名</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)   <span class="comment">#读取excel文件到df</span></span><br><span class="line">df.columns<span class="comment">#列名</span></span><br></pre></td></tr></table></figure><h3 id="建立索引">3.10 建立索引</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)   <span class="comment"># inplace=True表示立即生效</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530131723448.png"alt="image-20230530131723448" /></p><h3 id="查看指定列">3.11 查看指定列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)   <span class="comment"># inplace=True表示立即生效</span></span><br><span class="line">df[<span class="string">&#x27;Q1&#x27;</span>]<span class="comment"># 只看Q1列</span></span><br><span class="line">df[[<span class="string">&#x27;team&#x27;</span>, <span class="string">&#x27;Q2&#x27;</span>]]<span class="comment"># 看 team 和 Q2两列</span></span><br></pre></td></tr></table></figure><h3 id="选择多列">3.12 选择多列</h3><blockquote><ol type="1"><li>如果使用名称来选择多行的话，可以使用 df.loc[row, column]</li><li>如果使用数字来选择多行的话，可以使用 df.iloc[row_num,column_num]</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)   <span class="comment"># inplace=True表示立即生效</span></span><br><span class="line">df[[<span class="string">&#x27;team&#x27;</span>, <span class="string">&#x27;Q2&#x27;</span>]]<span class="comment"># 看 team 和 Q2两列</span></span><br><span class="line">df.loc[:, [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;team&#x27;</span>]]<span class="comment"># 看 team 和 Q2两列</span></span><br></pre></td></tr></table></figure><h3 id="数据选择">3.13 数据选择</h3><blockquote><ol type="1"><li><p>选择列</p><p>df['Q1'] 或 df.Q1</p></li><li><p>选择行</p><p>df[df.index == "Liver"]</p><p>df[0:3] # 0到3行</p></li><li><p>选择行和列</p><p>df.iloc[0:10, 0:4] # 0到310行，0到4列</p><p>df.loc['Ben', 'Q1':'Q4']</p><p>df.loc['Ben'：'Alex', 'Q1':'Q4'] # 指定多行，多列</p></li><li><p>条件选择</p><p>df[df.Q1 &gt; 90] # Q1列中大于90的成员</p></li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df[df.Q1 &gt; <span class="number">90</span>]</span><br></pre></td></tr></table></figure><h3 id="排序">3.14 排序</h3><blockquote><ol type="1"><li><p>指定列数据按照升序或者降序排列</p><p>df.sort_values(by='Q1') # Q1列按照数据升序排列</p><p>df.sort_values(by='Q1', ascending=False) # Q1列按照数据降序排列</p><p>df.sort_values(['team', 'Q1'], ascending=[True, False]) #team升序，Q1降序</p></li></ol></blockquote><h3 id="分组聚合">3.15 分组聚合</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df.groupby(<span class="string">&#x27;team&#x27;</span>).<span class="built_in">sum</span>()<span class="comment"># team分组，然后组内求和</span></span><br><span class="line">df.groupby(<span class="string">&#x27;team&#x27;</span>).mean()</span><br><span class="line"></span><br><span class="line">df.groupby(<span class="string">&#x27;team&#x27;</span>).agg(&#123;<span class="string">&#x27;Q1&#x27;</span>:<span class="built_in">sum</span>, <span class="string">&#x27;Q2&#x27;</span>: <span class="string">&#x27;count&#x27;</span>, <span class="string">&#x27;Q3&#x27;</span>: <span class="string">&#x27;mean&#x27;</span>, <span class="string">&#x27;Q4&#x27;</span>: <span class="string">&#x27;max&#x27;</span>&#125;)<span class="comment"># 不同列，不同的计算方法</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530143145034.png"alt="image-20230530143145034" /></p><h3 id="数据转换">3.16 数据转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># df.groupby(&#x27;team&#x27;).agg(&#123;&#x27;Q1&#x27;:sum, &#x27;Q2&#x27;: &#x27;count&#x27;, &#x27;Q3&#x27;: &#x27;mean&#x27;, &#x27;Q4&#x27;: &#x27;max&#x27;&#125;)# 不同列，不同的计算方法</span></span><br><span class="line">df.groupby(<span class="string">&#x27;team&#x27;</span>).agg(&#123;<span class="string">&#x27;Q1&#x27;</span>:<span class="built_in">sum</span>, <span class="string">&#x27;Q2&#x27;</span>: <span class="string">&#x27;count&#x27;</span>, <span class="string">&#x27;Q3&#x27;</span>: <span class="string">&#x27;mean&#x27;</span>, <span class="string">&#x27;Q4&#x27;</span>: <span class="string">&#x27;max&#x27;</span>&#125;).T<span class="comment"># T 意思为对矩阵进行转置</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530143223579.png"alt="image-20230530143223579" /></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">df.groupby(<span class="string">&#x27;team&#x27;</span>).<span class="built_in">sum</span>().stack()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530143332100.png"alt="image-20230530143332100" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">df.groupby(<span class="string">&#x27;team&#x27;</span>).<span class="built_in">sum</span>().unstack()</span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530143411021.png"alt="image-20230530143411021" /></p><h3 id="统计分析">3.17 统计分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># df.mean()# 所有行的平均值</span></span><br><span class="line"><span class="comment"># df.mean(1)# 所有列的平均值</span></span><br><span class="line"><span class="comment"># df.corr()# 列与列之间的相关关系</span></span><br><span class="line"><span class="comment"># df.count()# 每一列的非空值的个数</span></span><br><span class="line"><span class="comment"># df.max()# 每一列的最大值</span></span><br><span class="line"><span class="comment"># df.min()# 每一列的最小值</span></span><br><span class="line"><span class="comment"># df.median()# 每一列的中位数</span></span><br><span class="line"><span class="comment"># df.std()# 每一列的标准差</span></span><br><span class="line"><span class="comment"># df.var()# 方差</span></span><br><span class="line">df.mode()<span class="comment"># 众数</span></span><br></pre></td></tr></table></figure><h3 id="绘图">3.18 绘图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;team.xlsx&#x27;</span>)</span><br><span class="line">df.set_index(<span class="string">&#x27;name&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df.Q1.plot()</span><br><span class="line"><span class="comment"># df.loc[&#x27;Ben&#x27;, &#x27;Q1&#x27;:&#x27;Q4&#x27;].plot()# 变化图</span></span><br><span class="line"><span class="comment"># df.loc[&#x27;Ben&#x27;, &#x27;Q1&#x27;:&#x27;Q4&#x27;].plot.bar()# 纵向柱状图</span></span><br><span class="line"><span class="comment"># df.loc[&#x27;Ben&#x27;, &#x27;Q1&#x27;:&#x27;Q4&#x27;].plot.barh()# 横向柱状图</span></span><br><span class="line"><span class="comment"># df.groupby(&#x27;team&#x27;).sum().T.plot()# 转置折线图</span></span><br><span class="line"><span class="comment"># df.groupby(&#x27;team&#x27;).sum().plot()# 折线图</span></span><br><span class="line"><span class="comment"># df.groupby(&#x27;team&#x27;).count().Q1.plot.pie()# 饼图</span></span><br></pre></td></tr></table></figure><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530144110880.png"alt="image-20230530144110880" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530144051464.png"alt="image-20230530144051464" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530144224563.png"alt="image-20230530144224563" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530144438367.png"alt="image-20230530144438367" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20230530144504476.png"alt="image-20230530144504476" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;pythonpandas简介&quot;&gt;[Python]Pandas简介&lt;/h1&gt;
&lt;h2 id=&quot;pandas&quot;&gt;1. Pandas&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Python的第三方库&lt;/li&gt;
&lt;li&gt;用于数据分析</summary>
      
    
    
    
    <category term="Python" scheme="https://tresordie.github.io/categories/Python/"/>
    
    
    <category term="Pandas" scheme="https://tresordie.github.io/tags/Pandas/"/>
    
  </entry>
  
  <entry>
    <title>Python基本语法</title>
    <link href="https://tresordie.github.io/2022/11/12/[Python]python%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://tresordie.github.io/2022/11/12/[Python]python%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2022-11-12T12:00:00.000Z</published>
    <updated>2022-11-13T16:54:19.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pythonpython基本语法">[Python]Python基本语法</h1><h2 id="数据类型">1. 数据类型</h2><blockquote><ol type="1"><li>数字 Number (python有复数类型：-6+4j)</li><li>字符串 String</li><li>列表 List</li><li>元组 Tuple</li><li>字典 Dictionary</li></ol></blockquote><h2 id="数字类型">2. 数字类型</h2><h3 id="类型">2.1 类型</h3><blockquote><p>int: 有符号整形</p><p>long: 长整型(可以代表八进制或十六进制)</p><p>float: 浮点数</p><p>complex: 复数</p></blockquote><h3 id="运算">2.2 运算</h3><blockquote><p>加 +</p><p>减 -</p><p>乘 *</p><p>除 /</p><p>整除 //</p><p>取模 %</p><p>乘方 **</p></blockquote><h2 id="字符串">3. 字符串</h2><h3 id="字符串内容选取">3.1 字符串内容选取</h3><ol type="1"><li>字符串的小标从 0 开始</li><li>对字符串选取[头下标：尾下标]，选取从头下标到尾下标的内容(不包含尾下标)</li><li>当下标为负数时，表示从后到前的顺序</li></ol><ul><li><p>a[1:] 表示从下标 1 到字符串最后</p></li><li><p>a[1:3] 表示从下标 1 到下标 3，但是不包含下标 3</p></li><li><p>a[:3] 表示从下标 0 开始到下标 3，但不包含下标 3</p></li><li><p>a[-1] 表示下标从后到前的第一个字符</p></li><li><p>a[1:-2] 表示从下标 1 到下标倒数第2个，但不包含倒数第2个</p></li></ul><h3 id="字符串接续">3.2 字符串接续</h3><ol type="1"><li>字符串乘法：相当于字符串复制多次</li><li>字符串加法：将相加的字符串接续起来</li></ol><h3 id="字符串替换">3.3 字符串替换</h3><h4 id="strip">3.3.1 strip()</h4><blockquote><ol type="1"><li>strip('a'): 移除字符串头尾指定的字符序列</li><li>strip(): 不指定字符即移除字符串头尾的空格</li><li>strip('ab'): 移除字符串头尾指定的字符ab, 不管顺序ab还是ba,移除头尾所有的a和b</li></ol></blockquote><h4 id="lstrip">3.3.2 lstrip()</h4><blockquote><ol type="1"><li>lstrip('a'): 移除字符串左边指定的字符序列</li><li>lstrip(): 不指定字符即移除字符串左边的空格</li><li>lstrip('ab'): 移除字符串左边指定的字符ab, 不管顺序ab还是ba,移除左边所有的a和b</li></ol></blockquote><h4 id="rstrip">3.3.3 rstrip()</h4><blockquote><ol type="1"><li>rstrip('a'): 移除字符串右边指定的字符序列</li><li>rstrip(): 不指定字符即移除字符串右边的空格</li><li>rstrip('ab'): 移除字符串右边指定的字符ab, 不管顺序ab还是ba,移除右边所有的a和b</li></ol></blockquote><h3 id="字符串的连接">3.4 字符串的连接</h3><h4 id="加法方式连接字符串">3.4.1 加法方式连接字符串</h4><blockquote><p>a = 's'</p><p>b = 'o'</p><p>c = a + b</p></blockquote><h4 id="join">3.4.2 join()</h4><blockquote><ol type="1"><li><p>join(): 将序列中的元素以指定的字符连接成一个新的字符串</p><p>str.join(sequence) --用字符串str将sequence中的各个元素连接起来</p></li></ol></blockquote><h3 id="字符查找-find">3.5 字符查找 find()</h3><blockquote><ol type="1"><li>str.find(str1, beg=0, end=len(string))<ul><li>从str中从index=0开始，到index=end结束，查找是否包含str1,并返回查找到的第一个str1的index</li><li>如果没有找到，则返回 -1</li></ul></li></ol></blockquote><h3 id="字符串比较">3.6 字符串比较</h3><blockquote><ol type="1"><li>比较符号： &gt;, ==, &lt;</li><li>逐个字符比较，返回 True/False</li></ol></blockquote><h3 id="字符串长度-len">3.7 字符串长度 len()</h3><blockquote><ol type="1"><li>len(str): 返回字符串长度</li></ol></blockquote><h3 id="字符大小写转换">3.8 字符大小写转换</h3><blockquote><ol type="1"><li>str.upper(): 将字符串全部转为大写</li><li>str.lower(): 将字符串全部转为小写</li><li>str.swapcase(): 将字符串大小写互换</li><li>str.capitalize(): 字符串首字母大写</li></ol></blockquote><h2 id="列表">4. 列表</h2><h3 id="列表的基本操作">4.1 列表的基本操作</h3><blockquote><ol type="1"><li>cmp(list1, list2): python2支持，python3开始去掉了此函数</li><li>len(list1): list的长度(元素个数)</li><li>max(list1)：list1中最大值元素</li><li>min(list1)：list1中最小值元素</li><li>list(tuple):将元组转换为列表，原来的元组不变，转换后结果返回的是列表</li></ol></blockquote><h3 id="列表常见方法">4.2 列表常见方法</h3><blockquote><ol type="1"><li>list.append(obj): 在列表末尾添加新的对象</li><li>list.count(obj): 统计某个元素在列表中出现的次数</li><li>list.extend(seq):在列表的末尾一次性追加另一个序列中的多个值(用新列表扩展原来的列表)</li><li>list.index(obj): 从列表中找出某个值第一个匹配项的索引位置</li><li>list.insert(index, obj): 将obj对象插入到列表的index位置</li><li>list.pop(obj=list[-1]):移除列表中的一个元素(默认是最后一个元素)，并且返回该元素的值</li><li>list.remove(obj): 移除列表中某个值的第一个匹配项</li><li>list.reverse(): 反向列表中元素</li><li>list.sort([func]): 对原列表进行排序<ul><li>sort()方法：list.sort(cmp = None, key = None, reverse = False)</li><li>cmp -- 可选参数, 如果指定了该参数会使用该参数的方法进行排序</li><li>key --参数key用来指定一个函数，此函数在每次元素比较时被调用，此函数代表排序的规则，也就是你按照什么规则对你的序列进行排序</li><li>key是指在每次排序前都需要按照指定的key操作一遍</li><li>reverse = False表示默认是升序排列；reverse = True表示降序排列</li></ul></li></ol></blockquote><h2 id="元组">5. 元组</h2><blockquote><ol type="1"><li>元组相当于只读列表，a=('abc', 'dc')</li><li>通过list(seq)可以将seq元组转换为列表</li></ol></blockquote><h2 id="字典">6. 字典</h2><h3 id="字典数据类型">6.1 字典数据类型</h3><blockquote><ol type="1"><li>字典数据类型就是键值对数据类型，数据的存取是通过key关键字来进行的</li><li>字典进行赋值操作后，后赋值的键值对会存在靠前的位置</li></ol></blockquote><h3 id="字典的内置函数">6.2 字典的内置函数</h3><blockquote><ol type="1"><li>len(dict1): 字典元素个数</li><li>str(dict1)：输出字典可打印的是字符串标识</li><li>type(dict1)：类型</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;key1&#x27;</span>: <span class="string">&#x27;miss&#x27;</span>, <span class="string">&#x27;key2&#x27;</span>: <span class="string">&#x27;mr&#x27;</span>&#125;</span><br><span class="line">dict2 = &#123;<span class="string">&#x27;key3&#x27;</span>: <span class="string">&#x27;aiss&#x27;</span>, <span class="string">&#x27;key4&#x27;</span>: <span class="string">&#x27;smr&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(dict1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(dict1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(dict1))</span><br><span class="line"></span><br><span class="line">////////////////////////////////////////////</span><br><span class="line">Run &amp; Output:</span><br><span class="line">    <span class="number">2</span></span><br><span class="line">&#123;<span class="string">&#x27;key1&#x27;</span>: <span class="string">&#x27;miss&#x27;</span>, <span class="string">&#x27;key2&#x27;</span>: <span class="string">&#x27;mr&#x27;</span>&#125;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">dict</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字典的内置方法">6.3 字典的内置方法</h3><blockquote><ol type="1"><li><p>dict.clear(): 删除字典内所有元素</p></li><li><p>dict.copy():返回一个字典的浅复制；关于浅拷贝的含义，请参考以下链接</p><p>https://zhuanlan.zhihu.com/p/54011712</p></li><li><p>dict.fromkeys(seq[], value):以序列seq中的元素做字典的键，value为字典所有键对应的初始值</p></li><li><p>dict.get(key, default=None):返回指定键的值，如果值不在字典中，则返回default</p></li><li><p>dict.has_key(key): 如果键在字典中，则返回true,否则返回false</p></li><li><p>dict.items(): 以列表形式返回可遍历的(键，值)元组数组</p></li><li><p>dict.keys(): 以列表形式返回一个字典中所有的键</p></li><li><p>dict.setdefault(key, default=None):和get()类似，但如果键已经不存在于字典中，则将添加键并将值设为default</p></li><li><p>dict.update(dict2): 把dict2的键值对更新到字典中</p></li><li><p>dict.values(): 以列表形式返回字典中所有的值</p></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;pythonpython基本语法&quot;&gt;[Python]Python基本语法&lt;/h1&gt;
&lt;h2 id=&quot;数据类型&quot;&gt;1. 数据类型&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;数字 Number (python有复数类型：-6+4j</summary>
      
    
    
    
    <category term="Programming Language" scheme="https://tresordie.github.io/categories/Programming-Language/"/>
    
    
    <category term="Python" scheme="https://tresordie.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PyQt5环境搭建(Win)</title>
    <link href="https://tresordie.github.io/2022/11/12/[PyQt5]PyQt5%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(Win)/"/>
    <id>https://tresordie.github.io/2022/11/12/[PyQt5]PyQt5%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(Win)/</id>
    <published>2022-11-12T02:00:00.000Z</published>
    <updated>2023-01-08T02:59:28.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pyqtpyqt5-环境搭建win">[PyQt]PyQt5 环境搭建(Win)</h1><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/pyqt.png"alt="pyqt" /></p><h2 id="python3-安装">1. Python3 安装</h2><blockquote><ol type="1"><li>建议安装 Python3.10 之前的版本</li><li>安装 Python3.7.10</li></ol></blockquote><h2 id="pyqt5-安装">2. PyQt5 安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQt5</span><br></pre></td></tr></table></figure><h2 id="pyqt5-tool-安装">3. PyQt5 tool 安装</h2><blockquote><ol type="1"><li>安装 PyQt5 tool</li><li>将 PyQt5 tool 安装路径加入到系统环境变量</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQt5-tools</span><br></pre></td></tr></table></figure><h2 id="安装-python-模块">4. 安装 Python 模块</h2><blockquote><ol type="1"><li><p>安装 matplotlib</p><p>pip install matplotlib</p></li></ol></blockquote><h2 id="eric6-安装">5. Eric6 安装</h2><blockquote><ol type="1"><li><p>安装 Qsci 模块</p><p>pip install QScintilla</p></li><li><p>下载 Eric6，进入到解压缩的文件夹，进行源码安装</p><p>python ./install.py</p></li><li><p>Eric6 的汉化：</p><ul><li>下载汉化文件夹到 i18n 文件夹下</li><li>将 install-i18n.py 放到 eric6 的根目录下并运行</li></ul></li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113114510566.png"alt="image-20221113114510566" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113114557009.png"alt="image-20221113114557009" /></p><h2 id="插件安装">6. 插件安装</h2><blockquote><ol type="1"><li><p>安装 jedi 插件(自动补齐)</p><p>pip install jedi</p></li><li><p>Eric6 安装(手动安装)</p><ul><li>打开 Eric6，菜单栏选择 extra -- 插件 -- 安装插件 -- 选择下载的 jedi压缩文件进行安装</li></ul></li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113115840766.png"alt="image-20221113115840766" /></p><h2 id="eric6-配置">7. Eric6 配置</h2><h3 id="编码-utf-8">7.1 编码 utf-8</h3><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113114816267.png"alt="image-20221113114816267" /></p><h3 id="配置-qt-及-tool-的路径">7.2 配置 Qt 及 Tool 的路径</h3><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113114922882.png"alt="image-20221113114922882" /></p><h3 id="配置-api">7.3 配置 API</h3><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113115255565.png"alt="image-20221113115255565" /></p><h3 id="auto-completion-配置">7.4 Auto-Completion 配置</h3><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113115445688.png"alt="image-20221113115445688" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113115926521.png"alt="image-20221113115926521" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113115951727.png"alt="image-20221113115951727" /></p><h3 id="设置工作区">7.5 设置工作区</h3><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20221113120035079.png"alt="image-20221113120035079" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;pyqtpyqt5-环境搭建win&quot;&gt;[PyQt]PyQt5 环境搭建(Win)&lt;/h1&gt;
&lt;p&gt;&lt;img
src=&quot;https://raw.githubusercontent.com/Tresordie/PicBed/master/pyqt.png&quot;
al</summary>
      
    
    
    
    <category term="GUI" scheme="https://tresordie.github.io/categories/GUI/"/>
    
    
    <category term="PyQt5" scheme="https://tresordie.github.io/tags/PyQt5/"/>
    
  </entry>
  
  <entry>
    <title>Python列表</title>
    <link href="https://tresordie.github.io/2022/08/11/[Python]%E5%88%97%E8%A1%A8/"/>
    <id>https://tresordie.github.io/2022/08/11/[Python]%E5%88%97%E8%A1%A8/</id>
    <published>2022-08-11T12:00:00.000Z</published>
    <updated>2022-11-10T16:04:23.164Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python列表">Python列表</h1><h2 id="什么是列表">什么是列表</h2><ol type="1"><li>列表List类似于C语言中的数组，可以包含多元素且每种元素可以是多种数据类型</li><li>列表List和C语言中数组还一点类似，元素index从0开始；index为-1的元素表示的是列表中最后一个元素</li><li>List举例：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="列表操作">列表操作</h2><h3 id="修改列表元素的值">1. 修改列表元素的值</h3><ul><li>指定元素的index进行赋值</li><li>当index = -1时，指的是列表中的最后一个元素</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表元素赋值</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;original: &#x27;</span>, student)</span><br><span class="line">student[<span class="number">0</span>] = <span class="string">&#x27;author&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;after   : &#x27;</span>, student)</span><br></pre></td></tr></table></figure><h3 id="列表末尾添加元素append">2. 列表末尾添加元素：append</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表后面添加元素</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;original: &#x27;</span>, student)</span><br><span class="line">student.append(<span class="string">&#x27;author&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;append  : &#x27;</span>, student)</span><br></pre></td></tr></table></figure><h3 id="列表任意位置插入元素insert">3. 列表任意位置插入元素：insert</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表任何位置添加元素</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;original: &#x27;</span>, student)</span><br><span class="line">student.insert(<span class="number">0</span>, <span class="string">&#x27;author&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;insert  : &#x27;</span>, student)</span><br></pre></td></tr></table></figure><h3 id="列表中删除元素del-pop及remove">4. 列表中删除元素：del ,pop及remove</h3><ol type="1"><li>del：永久删除列表中任意位置元素</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除列表任何位置的元素</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;original: &#x27;</span>, student)</span><br><span class="line"><span class="keyword">del</span> student[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;del     : &#x27;</span>, student)</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li>pop：删除列表中任意位置元素同时返回删除的元素<ul><li>pop(): 此方法默认删除列表中最后一个元素</li><li>pop(index): 指定index的列表元素删除</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pop element from list</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line">pop_name = student.pop(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;pop_name: &#x27;</span>, pop_name)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;pop     : &#x27;</span>, student)</span><br></pre></td></tr></table></figure><ol start="3" type="1"><li>remove：根据值删除元素，必须带参数<ul><li>remove(value)</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移除指定值的元素</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;original: &#x27;</span>, student)</span><br><span class="line">student.remove(<span class="string">&#x27;alex&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;remove  : &#x27;</span>, student)</span><br></pre></td></tr></table></figure><h3 id="组织列表">5. 组织列表</h3><ol type="1"><li>sort方法<ul><li>默认按照从小到大的方式进行排列，如：student.sort()</li><li>永久性的改变了列表的排列顺序</li><li>可以带参数 reverse =true，进行从大到小的方式进行排列，如：student.sort(reverse=True)</li><li>sort方法必须先执行后，才能调用print打印输出sort之后的列表，不能在print内部进行sort方法调用<br /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sort进行排列</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;original: &#x27;</span>, student)</span><br><span class="line">student.sort()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;sort    : &#x27;</span>, student)</span><br><span class="line">student.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;sort rev: &#x27;</span>, student)</span><br></pre></td></tr></table></figure></li></ul></li><li>sorted方法<ul><li>按照特定排列顺序显示列表，如：sorted(student)，sorted(student,reverse=True)</li><li>列表中原始排列顺序不受影响<br /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sorted按照顺序显示，不改变原来的顺序</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;sorted      : &#x27;</span>, <span class="built_in">sorted</span>(student, reverse=<span class="literal">False</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;sorted rever: &#x27;</span>, <span class="built_in">sorted</span>(student, reverse=<span class="literal">True</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;after sorted: &#x27;</span>, student)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="列表倒序打印reverse">6. 列表倒序打印：reverse()</h3><ol type="1"><li>reverse方法是永久性的修改列表元素的排列顺序</li><li>reverse方法必须先执行后，才能调用print打印输出reverse之后的列表，不能在print内部进行reverse</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># reverse()永久性进行列表元素的顺序颠倒</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line">student.reverse()</span><br><span class="line"><span class="built_in">print</span>(student)</span><br></pre></td></tr></table></figure><h3 id="列表的长度">7. 列表的长度</h3><ol type="1"><li>列表中元素是从index = 0开始的</li><li>访问列表中元素时，如果index = -1, 则是指最后一个元素</li><li>如果列表为空，访问index = -1的元素时会出错</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># reverse()永久性进行列表元素的顺序颠倒</span></span><br><span class="line">student = [<span class="string">&#x27;alex&#x27;</span>, <span class="string">&#x27;simon&#x27;</span>, <span class="string">&#x27;matt&#x27;</span>, <span class="string">&#x27;richard&#x27;</span>]</span><br><span class="line"><span class="built_in">len</span>(student)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python列表&quot;&gt;Python列表&lt;/h1&gt;
&lt;h2 id=&quot;什么是列表&quot;&gt;什么是列表&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;列表List类似于C语言中的数组，可以包含多元素且每种元素可以是多种数据类型&lt;/li&gt;
&lt;li&gt;列表List和C语言中数</summary>
      
    
    
    
    <category term="Programming Language" scheme="https://tresordie.github.io/categories/Programming-Language/"/>
    
    
    <category term="Python" scheme="https://tresordie.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>GPS Basic</title>
    <link href="https://tresordie.github.io/2022/08/03/[GPS]GPS%E7%AE%80%E4%BB%8B/"/>
    <id>https://tresordie.github.io/2022/08/03/[GPS]GPS%E7%AE%80%E4%BB%8B/</id>
    <published>2022-08-03T02:00:00.000Z</published>
    <updated>2022-09-01T12:14:35.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gps-gps简介">[GPS] GPS简介</h1><h2 id="gps基础">1.GPS基础</h2><blockquote><ol type="1"><li>GPS: Global Position System，全球定位系统</li><li>GPS工作频率: 1575MHz</li></ol></blockquote><h2 id="gps定位原理">2. GPS定位原理</h2><blockquote><ol type="1"><li>接收机的坐标及时间</li><li>卫星的坐标及时间</li><li>通过距离及时间差来计算当前接收机的坐标，从而实现定位</li></ol></blockquote><p><a href="https://zhuanlan.zhihu.com/p/58518430">GPS定位原理</a></p><h2 id="全球范围的定位系统">3. 全球范围的定位系统</h2><h3 id="美国全球定位系统gps">3.1 美国全球定位系统GPS</h3><blockquote><ol type="1"><li><p>GPS起始于1958年美国军方的一个项目，1964年投入使用。20世纪70年代，美国陆海空三军联合研制了新一代卫星定位系统GPS，截至2018年06月21日，空间段新老卫星数为32颗，其中31颗运行、1颗维护</p></li><li><p>GPS已经实现单机导航精度约为10米，综合定位的话，精度可达厘米级和毫米级。但民用领域开放的精度约为10米，开阔地带定位精度在4-7米之间</p></li><li><p>据欧盟2018年的统计、GPS占据了全球60%以上的市场份额，也有数据显示目前GPS占据全球定位市场95%的份额</p></li></ol></blockquote><h3 id="俄罗斯格洛纳斯卫星导航定位系统glonass">3.2俄罗斯格洛纳斯卫星导航定位系统GLONASS</h3><blockquote><ol type="1"><li><p>GLONASS是苏联在1976年颁布法令开始建设的，截至2018年6月21日，GLONASS系统在轨卫星26颗，其中24颗GLONASS-M处于运行状态、1颗退役卫星用于主开发商测试、1颗GLONASS-K进行飞行参数测试</p></li><li><p>格洛纳斯在设计的时候就采用频分址体制，卫星靠频率不同来区分。所以，格洛纳斯可以防止整个卫星导航系统同时被敌方干扰，具有很强的抗干扰能力</p></li><li><p>格洛纳斯定位精度为1.2米，开放服务定位精度为2-8米</p></li></ol></blockquote><h3 id="欧洲伽利略卫星导航定位系统galileo">3.3欧洲伽利略卫星导航定位系统Galileo</h3><blockquote><ol type="1"><li><p>为了确保安全，建立欧洲自己控制的民用全球导航定位系统，1999年初欧洲正式推出伽利略计划，该计划旨在建立独立于GPS和GLONASS的全球卫星导航系统</p></li><li><p>2016年12月，“伽利略”系统投入初始运行，提供初始定位、导航与授时（PNT）服务，提供PNT服务的卫星数量为11颗，至2019年5月，提供PNT服务的卫星数量增加至22颗，服务覆盖、服务性能等得到明显提升</p></li><li><p>伽利略系统可以更加实时的发送地理位置信息，这是其他卫星所没有的功能，与美国GPS对比之下，显得更安全，更可靠</p></li><li><p>伽利略系统开放服务精度民用免费开放版为1米，商用加密版为1厘米</p></li><li><p>为了独立于美国GPS，欧洲在伽利略系统的建设中可谓不遗余力，最初的预算是29亿欧元，现在已突破100亿欧元</p></li></ol></blockquote><h3 id="中国北斗卫星导航系统bds">3.4 中国北斗卫星导航系统BDS</h3><blockquote><ol type="1"><li><p>中国从1994年开始北斗一号的研制，2003年北斗一号完工，基本形成了覆盖全中国的区域导航和定位系统；2005年推进“北斗二号”系统；2009年“北斗三号”工程启动</p></li><li><p>北斗三号组网结构由3颗静止轨道卫星（GEO）、3颗倾斜轨道卫星（IGSO）、24颗中轨道卫星（MEO）组成，此外还包括5 颗试验卫星；MEO 卫星均匀分布在3个轨道面</p></li><li><p>从定位精度来看，北斗系统在全球范围内民用定位精度在10米以内，亚太地区精度在5米以内，在增强系统加持下，其定位精度可达1米，已优于GPS全球定位均在10米以内的精度水平</p></li><li><p>除了拥有和GPS一样的卫星精确定位功能以外，还具备了通讯功能，领先欧洲的伽利略、美国的GPS以及俄罗斯的格洛纳斯</p></li></ol></blockquote><h2 id="gps开发应用">4. GPS开发应用</h2><h3 id="硬件gps模块">4.1 硬件：GPS模块</h3><blockquote><ol type="1"><li>UART接口：接收GPS定位信息流</li><li>PPS信号：GPS接收机接收到UTC时间后输出的脉冲(1Hz)</li></ol></blockquote><h3 id="固件nmea-0183协议gps基本都是遵从此协议">4.2固件：NMEA-0183协议(GPS基本都是遵从此协议)</h3><blockquote><ol type="1"><li>NMEA是美国国家海洋电子协会(National Marine ElectronicsAssociation)为海用电子设备制定的标准格式，目前已经成为了GPS导航系统统一的RTCM(RadioTechnical Commission for Maritime service)标准协议</li><li>定义了接收机输出的标准信息，有几种不同的输出格式，每种都是独立相关的ASCII码格式，数据流长度从30-100字符不等，通常以每秒间隔选择输出，最常用的格式是“GGA”，它包含了定位时间，纬度，经度，高度，定位所用的卫星数，DOP值，差分状态和校正时段等</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/NMEA-0183.jpg"alt="NMEA-0183" /></p><h3 id="nmealib库对nmea-0183协议进行解码">4.3NMEALib库对NMEA-0183协议进行解码</h3><blockquote><ol type="1"><li>nmealib库的官方网站请参考：<br />http://nmea.sourceforge.net/#intro</li></ol></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  nmea_decode_test 解码GPS模块信息</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nmea_decode_test</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> deg_lat;<span class="comment">//转换成[degree].[degree]格式的纬度</span></span><br><span class="line"><span class="keyword">double</span> deg_lon;<span class="comment">//转换成[degree].[degree]格式的经度</span></span><br><span class="line"></span><br><span class="line">    nmeaINFO info;          <span class="comment">//GPS解码后得到的信息</span></span><br><span class="line">    nmeaPARSER parser;      <span class="comment">//解码时使用的数据结构  </span></span><br><span class="line">    <span class="keyword">uint8_t</span> new_parse=<span class="number">0</span>;    <span class="comment">//是否有新的解码数据标志</span></span><br><span class="line">  </span><br><span class="line">    nmeaTIME beiJingTime;    <span class="comment">//北京时间 </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 设置用于输出调试信息的函数 */</span></span><br><span class="line">    nmea_property()-&gt;trace_func = &amp;trace;</span><br><span class="line">    nmea_property()-&gt;error_func = &amp;error;</span><br><span class="line">    nmea_property()-&gt;info_func = &amp;gps_info;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 初始化GPS数据结构 */</span></span><br><span class="line">    nmea_zero_INFO(&amp;info);</span><br><span class="line">    nmea_parser_init(&amp;parser);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(GPS_HalfTransferEnd)     <span class="comment">/* 接收到GPS_RBUFF_SIZE一半的数据 */</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">/* 进行nmea格式解码 */</span></span><br><span class="line">        nmea_parse(&amp;parser, (<span class="keyword">const</span> <span class="keyword">char</span>*)&amp;gps_rbuff[<span class="number">0</span>], HALF_GPS_RBUFF_SIZE, &amp;info);</span><br><span class="line">        </span><br><span class="line">        GPS_HalfTransferEnd = <span class="number">0</span>;   <span class="comment">//清空标志位</span></span><br><span class="line">        new_parse = <span class="number">1</span>;             <span class="comment">//设置解码消息标志 </span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(GPS_TransferEnd)    <span class="comment">/* 接收到另一半数据 */</span></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">        nmea_parse(&amp;parser, (<span class="keyword">const</span> <span class="keyword">char</span>*)&amp;gps_rbuff[HALF_GPS_RBUFF_SIZE], HALF_GPS_RBUFF_SIZE, &amp;info);</span><br><span class="line">       </span><br><span class="line">        GPS_TransferEnd = <span class="number">0</span>;</span><br><span class="line">        new_parse =<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(new_parse )                <span class="comment">//有新的解码消息   </span></span><br><span class="line">      &#123;    </span><br><span class="line">        <span class="comment">/* 对解码后的时间进行转换，转换成北京时间 */</span></span><br><span class="line">        GMTconvert(&amp;info.utc,&amp;beiJingTime,<span class="number">8</span>,<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/* 输出解码得到的信息 */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n时间%d-%02d-%02d,%d:%d:%d\r\n&quot;</span>, beiJingTime.year+<span class="number">1900</span>, beiJingTime.mon,beiJingTime.day,beiJingTime.hour,beiJingTime.min,beiJingTime.sec);</span><br><span class="line"></span><br><span class="line"><span class="comment">//info.lat lon中的格式为[degree][min].[sec/60]，使用以下函数转换成[degree].[degree]格式</span></span><br><span class="line">deg_lat = nmea_ndeg2degree(info.lat);</span><br><span class="line">deg_lon = nmea_ndeg2degree(info.lon);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n纬度：%f,经度%f\r\n&quot;</span>,deg_lat,deg_lon);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\n海拔高度：%f 米 &quot;</span>, info.elv);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\n速度：%f km/h &quot;</span>, info.speed);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\n航向：%f 度&quot;</span>, info.direction);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n正在使用的GPS卫星：%d,可见GPS卫星：%d&quot;</span>,info.satinfo.inuse,info.satinfo.inview);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n正在使用的北斗卫星：%d,可见北斗卫星：%d&quot;</span>,info.BDsatinfo.inuse,info.BDsatinfo.inview);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nPDOP：%f,HDOP：%f，VDOP：%f&quot;</span>,info.PDOP,info.HDOP,info.VDOP);</span><br><span class="line">        </span><br><span class="line">        new_parse = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 释放GPS数据结构 */</span></span><br><span class="line">    <span class="comment">// nmea_parser_destroy(&amp;parser);</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//  return 0;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="gps坐标系统转换">4.4 GPS坐标系统转换</h3><blockquote><ol type="1"><li>目前国内主要有以下三种坐标系：</li></ol><p>WGS84：为一种大地坐标系，也是目前广泛使用的GPS全球卫星定位系统使用的坐标系</p><p>GCJ02：又称火星坐标系，是由中国国家测绘局制订的地理信息系统的坐标系统。由WGS84坐标系经加密后的坐标</p><p>BD09：为百度坐标系，在GCJ02坐标系基础上再次加密。其中bd09ll表示百度经纬度坐标，bd09mc表示百度墨卡托米制坐标</p><ol start="2" type="1"><li><p>非中国地区地图，服务坐标统一使用WGS84坐标</p></li><li><p>WGS84坐标转百度地图坐标</p></li></ol><p>百度对外接口的坐标系为BD09坐标系，并不是GPS采集的真实经纬度，在使用百度地图JavaScriptAPI服务前，需先将非百度坐标通过坐标转换接口转换成百度坐标</p><p><ahref="https://lbsyun.baidu.com/index.php">https://lbsyun.baidu.com/index.php</a>?</p></blockquote><h2 id="gps模块启动方式">5. GPS模块启动方式</h2><blockquote><ol type="1"><li>冷启动</li><li>热启动</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/image-20220802100522248.png"alt="image-20220802100522248" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gps-gps简介&quot;&gt;[GPS] GPS简介&lt;/h1&gt;
&lt;h2 id=&quot;gps基础&quot;&gt;1.GPS基础&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;GPS: Global Position System，全球定位系统&lt;/li&gt;
</summary>
      
    
    
    
    <category term="GPS" scheme="https://tresordie.github.io/categories/GPS/"/>
    
    
    <category term="GPS" scheme="https://tresordie.github.io/tags/GPS/"/>
    
  </entry>
  
  <entry>
    <title>VNA校准</title>
    <link href="https://tresordie.github.io/2022/05/29/VNA%E6%A0%A1%E5%87%86/"/>
    <id>https://tresordie.github.io/2022/05/29/VNA%E6%A0%A1%E5%87%86/</id>
    <published>2022-05-29T02:00:00.000Z</published>
    <updated>2022-11-10T16:07:01.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="仪器vna校准">[仪器]VNA校准</h1><h2 id="为什么需要进校准">1. 为什么需要进⾏校准？</h2><blockquote><ol type="1"><li>在所有的RF测量中，VNA测量求有最⾼的准确性及可重复性，故⽽对仪器有校准要求</li></ol></blockquote><h2 id="有哪些类型的误差源">2. 有哪些类型的误差源？</h2><blockquote><p>⼀般来讲，在VNA测量过程中⼀般有3种误差源,⽆论哪种误差，都可能造成幅度或相位不准确(即⽮量)</p><ol type="a"><li>drift errors 漂移误差</li></ol><ul><li><p>漂移误差是在校准后环境变化所造成(主要是温度变化造成的)</p></li><li><p>可以通过控制测试境且让仪器有时间预热</p></li><li><p>可以在变化的环境中执⾏新的校准来消除漂移误差</p></li></ul><p><font color ='red'>[总结]即使采取上述的措施,也不可能完全的消除漂移误差，也只能是尽可能的减⼩漂移误差</font></p><ol start="2" type="a"><li>random errors 随机误差</li></ol><ul><li><p>随机误差主要是由测试环境搭建引起的(设备噪⾳，测量操作，cables/connector等等)</p></li><li><p>随机误差随时间推移⽽变化，不可重复且不可预料</p></li><li><p>可以通过⾼精度仪器以及好的操作实践可以最⼤化的减⼩随机误差，但是⽆法消除</p></li></ul><ol start="3" type="a"><li>systematic errors 系统误差</li></ol><ul><li><p>系统误差是可重复，可预测且不会随时间发⽣变化</p></li><li><p>还有⼀部分原因是VNA及测试设置中有⼀些⾮理想器件引起(VNA中的缺陷，e.g.,例如定向耦合器的⽅向 性不完整；还有Cable loss；阻抗不匹配)</p></li><li><p>系统误差⼏乎完全可以通过校准的⽅式消除</p></li></ul></blockquote><h2 id="什么是calibration">3. 什么是Calibration?</h2><blockquote><ol type="a"><li><p>Calibration的⽬的是从测量结果中剔除系统误差</p></li><li><p>校准的步骤：</p></li></ol><p>​ (1) 基于测量环境的搭建及期望的结果来选择校准类型</p><p>​ (2) 连接校准标准件到相应的位置</p><p>​ (3) 运⾏校准程序并测量响应(通常需要进⾏多个步骤的操作)</p><p>​ (4) 测量DUT时，校准数据被⽤于纠正测量结果</p></blockquote><h2 id="measurement-calibration-vs-instrument-calibration">4.Measurement calibration VS Instrument calibration</h2><blockquote><ol type="a"><li><p>Measurementcalibration是⽤于消除测量的系统误差，由⽤户⾃⾏校准(会频繁使⽤)</p></li><li><p>Instrumentcalibration⽤于设备的校准，主要是为了鉴定仪器是否是以其⾃身spec运⾏的，⽐如我想要仪器输出10dBm，那么⽤户控制仪器输出10dBm时，仪器实 际上是否输出了10dBm.⼀般情况下都是由专⻔的服务机构或者校准中⼼执⾏校准的，可能间隔⼏年才校准⼀次</p></li></ol></blockquote><h2 id="calibration-or-reference-plane校准或参考平">5. Calibration orreference plane(校准或参考平⾯)</h2><blockquote><ol type="a"><li><p>校准平⾯或者参考平⾯是在校准时才考虑的</p></li><li><p>校准时，DUT不能直接连接到VNA的ports</p></li><li><p>校准时要避免所有对校准或者参考平⾯的影响</p></li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/VNA%20reference%20plane.png" /></p><h2 id="校准标准件">6. 校准标准件</h2><blockquote><ol type="a"><li><p>校准标准件⼀般需要单独购买，其收集在⼀个校准套件⾥⾯</p></li><li><p>校准套件是⼀套⾼精度且已知幅度和相位响应的终端或者耦合器</p></li></ol><p>​ (1) 标准间数据包含在校准套件定义的⽂件中</p><p>​ (2) 定义通常是预加载到仪器端，或者通过USB或者其其它接⼝导⼊</p><ol start="3" type="a"><li>标准件被连接到校准或参考平⾯，在校准过程中进⾏测量</li></ol></blockquote><h2 id="常的校准标准及说明">7. 常⽤的校准标准及说明</h2><blockquote><ol type="a"><li>4种最常⽤的校准标准</li></ol><ul><li><p>Through(T)</p></li><li><p>Open(O)</p></li><li><p>Short(S)</p></li><li><p>Match(M) 也叫 Load</p></li></ul><ol start="2" type="a"><li>校准说明</li></ol><p>​ (1)现实中的校准套件并不是理想的，特别是在⼀个宽频率范围(⽐如在100MHz以上的开路电容就会增加，所以不同开路套件测出的值会有差别，所以需要对此标准需要有专⻔的数据描述)</p><p>​ (2) 特定的校准标准需要有数据进⾏描述说明</p></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/VNA%20Through%20standard.png"alt="VNA Through standard" /></p><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/VNA%20ECal.png"alt="VNA ECal" /></p><h2 id="校准单元">8. 校准单元</h2><blockquote><ol type="a"><li><p>校准套件有常规的分⽴器件的校准套件或者是集成了多种校准⽅式的T型校准件(1个T型件包含了Open/Short/Through/Match校准)</p></li><li><p>还有⾃动校准器</p></li></ol><p>​ (1) ⾃动校准器中包含了校准标准件，在校准过程中内部电控切换，通常是可以被VNA控制(通常是通过USB)</p><p>​ (2)内部标准件⽤于校准的数据被存储在⾃动校准单元⾥⾯，可以被VAN读取</p><p>​ (3) ⾃动校准的引⼊最⼩化了操作⼈员的介⼊，且校准过程叫⼈⼯校准更快，更少有机会有操作失误(如连接错误的校准件)，相对于分⽴校准件，其磨损程度更⼩</p></blockquote><h2 id="什么是校准类型">9. 什么是校准类型</h2><blockquote><ol type="a"><li>校准类型定义了我们需要连接哪些校准标准件</li></ol></blockquote><h2 id="校准类型的选择的考虑因素">10. 校准类型的选择的考虑因素</h2><blockquote><p>校准类型基于⼀下因素来选择：</p><ol type="a"><li><p>端⼝数量</p></li><li><p>测量的⽅向性</p></li><li><p>要求的准确等级</p></li><li><p>时间要求</p></li><li><p>可⽤的校准标准件</p></li></ol></blockquote><h2 id="校准类型">11. 校准类型</h2><blockquote><ol type="a"><li><p>Reﬂection Normalization - 反射归⼀化</p></li><li><p>Full One Port Calibration(OSM) - 全⼀端⼝校准</p></li><li><p>Transmission Normalization - 传输归⼀化</p></li><li><p>One Path Two Port Calibration - 两端⼝⼀个通路校准</p></li><li><p>Full Two Port Calibration(TOSM) - 两端⼝全校准</p></li><li><p>Full Two Port Calibration(UOSM) - 两端⼝全校准</p></li></ol></blockquote><h2 id="one-port-calibration单端校准">12. One PortCalibration(单端⼝校准)</h2><blockquote><ol type="a"><li>⽤于反射测量的单端⼝校准</li></ol><ol type="1"><li>Full one-port calibration(OSM - Open/Short/Match)</li></ol><ul><li>校准速度慢，但是有更⾼的精度</li><li>要求open, short, match校准</li></ul><ol start="2" type="1"><li>归⼀化校准</li></ol><ul><li><p>校准速度更快，但是精确度低</p></li><li><p>只需要⼀次校准，Open或者Short校准</p></li></ul></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/VNA%20Calibration.png"alt="VNA Calibration" /></p><h2 id="two-port-calibration双端校准">13. Two portcalibration(双端⼝校准)</h2><blockquote><ol type="a"><li><p>双端⼝校准适⽤于传输测量</p></li><li><p>校准⽅式</p></li></ol><ul><li><p>Normalization 归⼀化校准</p><ol type="1"><li><p>需要连接Through</p></li><li><p>可以进⾏单向或者双向校准</p></li></ol></li><li><p>One path two ports 双端⼝单向</p><ol type="1"><li>Full one-port OSM(Open/Short/Match) + Transmission normalization—&gt; 适合单向传输</li></ol></li><li><p>Full two port calibration 双端⼝全校准</p><ul><li><p>TOSM: Through Open/Short/Match</p><ol type="1"><li><p>TOSM(Through/Open/Short/Match)：双端⼝校准中最常⽤的校准</p></li><li><p>应⽤场合为: ①双端⼝的反射测量. ②双向传输测量 I</p></li><li><p>校准步骤要求：需要进⾏8次扫描①每个端⼝都要进⾏单端⼝的OSM(Open/Short/Match)标准件扫描，这就相当于6次了②双向的Through标准件测试，这就相当于两次了</p></li><li><p>校准完成后，就可以进⾏S参数的测量了;TOSM校准的弱点在于校准使⽤的时间较⻓，需要8次扫描才能完成，如上描述.</p></li></ol></li><li><p>UOSM: Unknown Open/Short/Match</p><ol type="1"><li><p>通常使⽤⼀个通⽤的RFcoupler来取代校准套件中的Through标准件</p></li><li><p>UOSM有⼀个特征是：双向特征完全相同，即S 21 == S12</p></li><li><p>UOSM对于有着不同类型的接头是有帮助的，如⼀端为SMA接⼝，另⼀端为不同类型接⼝</p></li></ol></li></ul></li></ul></blockquote><h2 id="isolation-measurement-校准法">14. Isolation measurement校准⽅法</h2><blockquote><ol type="a"><li><p>Isolation measurement ⽅法是对 Through calibration校准的补充</p></li><li><p>Isolation measurement⽅法主要是是测量通道信号泄漏及对相邻通道的串扰</p></li><li><p>Isolation measurement 没有相应的物理校准标准</p></li><li><p>通常的校准⽅法是在测试端⼝终端出接 50ohm 的终端负载</p></li><li><p>在绝⼤多书的VNA的测量中，这种错误(泄漏及串扰)并不是⼀个重⼤的错误源</p></li></ol></blockquote><h2 id="什么时候需要进户校准">15. 什么时候需要进⾏⽤户校准</h2><blockquote><ol type="a"><li><p>⽤户重新设置了频率范围</p></li><li><p>对于DUT的连接发⽣了变化(如，RF CableLength发⽣了变化，Adaptor等等发⽣了变化)</p></li><li><p>使⽤的VNA port发⽣了变化</p></li></ol></blockquote><p>[参考] 罗德施瓦茨的VNA校准介绍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;仪器vna校准&quot;&gt;[仪器]VNA校准&lt;/h1&gt;
&lt;h2 id=&quot;为什么需要进校准&quot;&gt;1. 为什么需要进⾏校准？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;在所有的RF测量中，
VNA测量求有最⾼的准确性及可重复性，故⽽对仪器</summary>
      
    
    
    
    <category term="硬件" scheme="https://tresordie.github.io/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    
    <category term="VNA" scheme="https://tresordie.github.io/tags/VNA/"/>
    
  </entry>
  
  <entry>
    <title>wav音频文件解析</title>
    <link href="https://tresordie.github.io/2022/05/22/[Audio]wav%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90/"/>
    <id>https://tresordie.github.io/2022/05/22/[Audio]wav%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90/</id>
    <published>2022-05-22T02:00:00.000Z</published>
    <updated>2022-09-01T12:14:35.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="audiowav文件解析">[Audio]wav文件解析</h1><h2 id="wav文件介绍">1. wav文件介绍</h2><blockquote><ol type="1"><li>微软专门为Windows定义的</li><li>符合RIFF文件规范</li><li>支持MSADPCM，CCITT A LAW算法，采样率为44.1KHz</li><li>一般采用线性PCM编码</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/wav.jpg" /></p><h2 id="wav文件的格式">2. wav文件的格式</h2><blockquote><ol type="1"><li>wav帧是有两部分组成：Chunk和数据<ul><li>Chunk里面包含了各种类型Chunk的信息，类型Chunk中还包括了音频数据的大小，音频通道数，音频格式，采样率等等信息</li><li>数据部分则为raw data</li></ul></li><li>Chunk又有以下类型的Chunk，Chunk中的具体信息参考以上的思维导图<ul><li>RIFF Wave Chunk</li><li>Format Chunk</li><li>Fact Chunk</li><li>Data Chunk</li></ul></li><li>Chunk以及数据格式，以下截图是将wav文件以二进制方式打开，内部所含的格式信息，可以和思维导图中各个Chunk的数据结构进行对比，以加深理解</li></ol></blockquote><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/wavBinary.jpg" /></p><h2 id="wav文件c语言解析">3. wav文件C语言解析</h2><h3 id="wav数据结构">3.1 wav数据结构</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* RIFF块 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkID;               <span class="comment">//chunk id固定为&quot;RIFF&quot;,即0X46464952</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkSize ;            <span class="comment">//集合大小=文件总大小-8</span></span><br><span class="line">    <span class="keyword">uint32_t</span> Format;                <span class="comment">//格式;WAVE,即0X45564157</span></span><br><span class="line">&#125; ChunkRIFF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* fmt块 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkID;               <span class="comment">//chunk id;这里固定为&quot;fmt &quot;,即0X20746D66</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkSize ;            <span class="comment">//子集合大小(不包括ID和Size);这里为:20.</span></span><br><span class="line">    <span class="keyword">uint16_t</span> AudioFormat;           <span class="comment">//音频格式;0X01,表示线性PCM;0X11表示IMA ADPCM</span></span><br><span class="line">    <span class="keyword">uint16_t</span> NumOfChannels;         <span class="comment">//通道数量;1,表示单声道;2,表示双声道;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> SampleRate;            <span class="comment">//采样率;0X1F40,表示8Khz</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ByteRate;              <span class="comment">//字节速率;</span></span><br><span class="line">    <span class="keyword">uint16_t</span> BlockAlign;            <span class="comment">//块对齐(字节);</span></span><br><span class="line">    <span class="keyword">uint16_t</span> BitsPerSample;         <span class="comment">//单个采样数据大小;4位ADPCM,设置为4</span></span><br><span class="line">    <span class="keyword">uint16_t</span> ByteExtraData;         <span class="comment">//附加的数据字节;2个; 线性PCM,没有这个参数</span></span><br><span class="line">&#125; ChunkFMT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* fact块 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkID;               <span class="comment">//chunk id;这里固定为&quot;fact&quot;,即0X74636166;线性PCM没有这个部分</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkSize ;            <span class="comment">//子集合大小(不包括ID和Size);这里为:4.</span></span><br><span class="line">    <span class="keyword">uint32_t</span> FactSize;              <span class="comment">//转换成PCM的文件大小;</span></span><br><span class="line">&#125; ChunkFACT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* LIST块 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkID;               <span class="comment">//chunk id;这里固定为&quot;LIST&quot;,即0X74636166;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkSize ;            <span class="comment">//子集合大小(不包括ID和Size);这里为:4.</span></span><br><span class="line">&#125; ChunkLIST;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* data块 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkID;               <span class="comment">//chunk id;这里固定为&quot;data&quot;,即0X5453494C</span></span><br><span class="line">    <span class="keyword">uint32_t</span> ChunkSize ;            <span class="comment">//子集合大小(不包括ID和Size)</span></span><br><span class="line">&#125; ChunkDATA;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* wav头 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ChunkRIFF riff;                 <span class="comment">//riff块</span></span><br><span class="line">    ChunkFMT fmt;                   <span class="comment">//fmt块</span></span><br><span class="line">    ChunkFACT fact;                 <span class="comment">//fact块 线性PCM,没有这个结构体</span></span><br><span class="line">    ChunkDATA data;                 <span class="comment">//data块</span></span><br><span class="line">&#125; __WaveHeader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* wav播放控制结构体 */</span></span><br><span class="line"><span class="keyword">typedef</span> __packed <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint16_t</span> audioformat;           <span class="comment">//音频格式;0X01,表示线性PCM;0X11表示IMA ADPCM</span></span><br><span class="line">    <span class="keyword">uint16_t</span> nchannels;             <span class="comment">//通道数量;1,表示单声道;2,表示双声道;</span></span><br><span class="line">    <span class="keyword">uint16_t</span> blockalign;            <span class="comment">//块对齐(字节);</span></span><br><span class="line">    <span class="keyword">uint32_t</span> datasize;              <span class="comment">//WAV数据大小</span></span><br><span class="line">    <span class="keyword">uint32_t</span> totsec ;               <span class="comment">//整首歌时长,单位:秒</span></span><br><span class="line">    <span class="keyword">uint32_t</span> cursec ;               <span class="comment">//当前播放时长</span></span><br><span class="line">    <span class="keyword">uint32_t</span> bitrate;               <span class="comment">//比特率(位速)</span></span><br><span class="line">    <span class="keyword">uint32_t</span> samplerate;            <span class="comment">//采样率</span></span><br><span class="line">    <span class="keyword">uint16_t</span> bps;                   <span class="comment">//位数,比如16bit,24bit,32bit</span></span><br><span class="line">    <span class="keyword">uint32_t</span> datastart;             <span class="comment">//数据帧开始的位置(在文件里面的偏移)</span></span><br><span class="line">&#125; wavctrl;</span><br></pre></td></tr></table></figure><h3 id="wav解析函数">3.2 wav解析函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">__align(<span class="number">8</span>) <span class="keyword">uint8_t</span> WaveFileBuf[WAVEFILEBUFSIZE];</span><br><span class="line">__align(<span class="number">8</span>) <span class="keyword">uint8_t</span> TempBuf[WAVEFILEBUFSIZE / <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief                   Decode wav audio file</span></span><br><span class="line"><span class="comment"> * @param  fname            wav audio path string</span></span><br><span class="line"><span class="comment"> * @param  wavx             wav audio data structure pointer</span></span><br><span class="line"><span class="comment"> * @return uint8_t          0: decode successfully; others: failed to decode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">wave_decode_init</span><span class="params">(<span class="keyword">char</span> *fname, wavctrl *wavx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> br = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">uint8_t</span> res = <span class="number">0</span>;</span><br><span class="line">    ChunkRIFF *riff;</span><br><span class="line">    ChunkFMT *fmt;</span><br><span class="line">    ChunkFACT *fact;</span><br><span class="line">    ChunkDATA *data;</span><br><span class="line">    res = f_open(&amp;WavFile, (TCHAR *)fname, FA_READ);                     <span class="comment">//打开文件</span></span><br><span class="line">    <span class="keyword">if</span> (res == FR_OK) &#123;</span><br><span class="line">        NeedCloseFile = <span class="number">1</span>;</span><br><span class="line">        f_read(&amp;WavFile, TempBuf, WAVEFILEBUFSIZE / <span class="number">2</span>, &amp;br);      <span class="comment">//读取WAVEFILEBUFSIZE/2字节数据</span></span><br><span class="line">        riff = (ChunkRIFF *)TempBuf;                                                    <span class="comment">//获取RIFF块</span></span><br><span class="line">        <span class="keyword">if</span> (riff-&gt;Format == <span class="number">0x45564157</span>) &#123;                                               <span class="comment">//是否为wav格式的文件</span></span><br><span class="line">            fmt = (ChunkFMT *)(TempBuf + <span class="number">12</span>);                                           <span class="comment">//Format Chunk起始地址</span></span><br><span class="line">            <span class="keyword">if</span> (fmt-&gt;AudioFormat == <span class="number">1</span> || fmt-&gt;AudioFormat == <span class="number">3</span>) &#123;                       <span class="comment">//线性PCM或32位WAVE=3</span></span><br><span class="line">                fact = (ChunkFACT *)(TempBuf + <span class="number">12</span> + <span class="number">8</span> + fmt-&gt;ChunkSize);                <span class="comment">//定位到Fact Chunk起始位置</span></span><br><span class="line">                <span class="keyword">if</span> (fact-&gt;ChunkID == <span class="number">0x74636166</span> || fact-&gt;ChunkID == <span class="number">0x5453494C</span>)         <span class="comment">//定位Data Chunk数据块的起始位置</span></span><br><span class="line">                    wavx-&gt;datastart = <span class="number">12</span> + <span class="number">8</span> + fmt-&gt;ChunkSize + <span class="number">8</span> + fact-&gt;ChunkSize;    <span class="comment">//具有fact/LIST块的时候(未测试)</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    wavx-&gt;datastart = <span class="number">12</span> + <span class="number">8</span> + fmt-&gt;ChunkSize;</span><br><span class="line">                data = (ChunkDATA *)(TempBuf + wavx-&gt;datastart);</span><br><span class="line">                <span class="keyword">if</span> (data-&gt;ChunkID == <span class="number">0x61746164</span>) &#123;                                      <span class="comment">//读取DATA块成功</span></span><br><span class="line">                    wavx-&gt;audioformat = fmt-&gt;AudioFormat;                               <span class="comment">//音频格式</span></span><br><span class="line">                    wavx-&gt;nchannels   = fmt-&gt;NumOfChannels;                             <span class="comment">//通道数</span></span><br><span class="line">                    wavx-&gt;samplerate  = fmt-&gt;SampleRate;                                <span class="comment">//采样率</span></span><br><span class="line">                    wavx-&gt;bitrate     = fmt-&gt;ByteRate * <span class="number">8</span>;                              <span class="comment">//位速率 = 通道数×每秒数据位数×每样本的数据位数</span></span><br><span class="line">                    wavx-&gt;blockalign  = fmt-&gt;BlockAlign;                                <span class="comment">//块对齐 = 通道数×每样本的数据位值／8</span></span><br><span class="line">                    wavx-&gt;bps         = fmt-&gt;BitsPerSample;                             <span class="comment">//位数,8/16/24/32位</span></span><br><span class="line">                    wavx-&gt;datasize    = data-&gt;ChunkSize;                                <span class="comment">//音频数据块大小</span></span><br><span class="line">                    wavx-&gt;datastart   = wavx-&gt;datastart + <span class="number">8</span>;                            <span class="comment">//数据流开始的地方.</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;audioformat:%d\r\n&quot;</span>, wavx-&gt;audioformat);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;nchannels:%d\r\n&quot;</span>, wavx-&gt;nchannels);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;samplerate:%d\r\n&quot;</span>, wavx-&gt;samplerate);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;bitrate:%d\r\n&quot;</span>, wavx-&gt;bitrate);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;blockalign:%d\r\n&quot;</span>, wavx-&gt;blockalign);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;bps:%d\r\n&quot;</span>, wavx-&gt;bps);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;datasize:%d\r\n&quot;</span>, wavx-&gt;datasize);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;wavx-&gt;datastart:%d\r\n&quot;</span>, wavx-&gt;datastart);</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                    res = <span class="number">4</span>;                                                                                                <span class="comment">//data区域未找到.</span></span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                res = <span class="number">3</span>;                                                                                                    <span class="comment">//非线性PCM，不支持</span></span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            res = <span class="number">2</span>;                                                                                                            <span class="comment">//非wav文件</span></span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        res = <span class="number">1</span>;                                                                                                                <span class="comment">//打开文件错误</span></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="wav-raw-data起始位置">3.3 wav raw data起始位置</h3><blockquote><ol type="1"><li>在获取了Data Chunk的起始位置后，真正的原始数据起始位置为DataChunk起始位置向右偏移8个字节(即为DataChunk的ChunkID占4个字节，ChunkSize占4个字节)</li></ol></blockquote><h2 id="wav音频文件进行播放">4. wav音频文件进行播放</h2><blockquote><ol type="1"><li><p>解析完wav文件后，可以定位wav文件raw data的起始位置</p></li><li><p>从raw data起始位置开始，发送数据到DAC接口进行播放</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f_lseek(&amp;WavFile, WaveCtrlData.datastart)</span><br></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;audiowav文件解析&quot;&gt;[Audio]wav文件解析&lt;/h1&gt;
&lt;h2 id=&quot;wav文件介绍&quot;&gt;1. wav文件介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;微软专门为Windows定义的&lt;/li&gt;
&lt;li&gt;符合RI</summary>
      
    
    
    
    <category term="Audio" scheme="https://tresordie.github.io/categories/Audio/"/>
    
    
    <category term="wav" scheme="https://tresordie.github.io/tags/wav/"/>
    
  </entry>
  
  <entry>
    <title>FatFS移植总结</title>
    <link href="https://tresordie.github.io/2022/04/04/[fs]FatFS%E7%A7%BB%E6%A4%8D%E6%80%BB%E7%BB%93/"/>
    <id>https://tresordie.github.io/2022/04/04/[fs]FatFS%E7%A7%BB%E6%A4%8D%E6%80%BB%E7%BB%93/</id>
    <published>2022-04-04T11:00:00.000Z</published>
    <updated>2022-09-01T12:14:35.806Z</updated>
    
    <content type="html"><![CDATA[<p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/img/FatFS%E7%A7%BB%E6%A4%8D%E5%AF%BC%E5%9B%BE.png"alt="FatFS移植导图" /></p><h1 id="fsfatfs-移植总结">[fs]FatFS 移植总结</h1><h2 id="获取源码">1. 获取源码</h2><blockquote><ol type="1"><li><p>下载源码</p><p>http://elm-chan.org/fsw/ff/archives.html</p></li><li><p>添加以下文件到工程中</p><ul><li>diskio.c</li><li>diskio.h</li><li>ff.c</li><li>ff.h</li><li>ffconf.h</li></ul></li></ol></blockquote><h2 id="ffconfig.h-中宏配置">2. ffconfig.h 中宏配置</h2><blockquote><ol type="1"><li><p>存储媒介文件系统格式化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_USE_MKFS     1</span></span><br><span class="line"><span class="comment">/* This option switches f_mkfs() function. (0:Disable or 1:Enable) */</span></span><br></pre></td></tr></table></figure></li><li><p>字符串功能函数使能</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_USE_STRFUNC  1</span></span><br></pre></td></tr></table></figure></li><li><p>字体编码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_CODE_PAGE    936</span></span><br><span class="line"><span class="comment">/* This option specifies the OEM code page to be used on the target system.</span></span><br><span class="line"><span class="comment">/  Incorrect code page setting can cause a file open failure.</span></span><br><span class="line"><span class="comment">/</span></span><br><span class="line"><span class="comment">/   437 - U.S.</span></span><br><span class="line"><span class="comment">/   720 - Arabic</span></span><br><span class="line"><span class="comment">/   737 - Greek</span></span><br><span class="line"><span class="comment">/   771 - KBL</span></span><br><span class="line"><span class="comment">/   775 - Baltic</span></span><br><span class="line"><span class="comment">/   850 - Latin 1</span></span><br><span class="line"><span class="comment">/   852 - Latin 2</span></span><br><span class="line"><span class="comment">/   855 - Cyrillic</span></span><br><span class="line"><span class="comment">/   857 - Turkish</span></span><br><span class="line"><span class="comment">/   860 - Portuguese</span></span><br><span class="line"><span class="comment">/   861 - Icelandic</span></span><br><span class="line"><span class="comment">/   862 - Hebrew</span></span><br><span class="line"><span class="comment">/   863 - Canadian French</span></span><br><span class="line"><span class="comment">/   864 - Arabic</span></span><br><span class="line"><span class="comment">/   865 - Nordic</span></span><br><span class="line"><span class="comment">/   866 - Russian</span></span><br><span class="line"><span class="comment">/   869 - Greek 2</span></span><br><span class="line"><span class="comment">/   932 - Japanese (DBCS)</span></span><br><span class="line"><span class="comment">/   936 - Simplified Chinese (DBCS)</span></span><br><span class="line"><span class="comment">/   949 - Korean (DBCS)</span></span><br><span class="line"><span class="comment">/   950 - Traditional Chinese (DBCS)</span></span><br><span class="line"><span class="comment">/     0 - Include all code pages above and configured by f_setcp()</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p>长文件名支持</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_USE_LFN      2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_MAX_LFN      255</span></span><br><span class="line"><span class="comment">/* The FF_USE_LFN switches the support for LFN (long file name).</span></span><br></pre></td></tr></table></figure></li><li><p>文件名大小缓存</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_LFN_BUF      255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_SFN_BUF      12</span></span><br><span class="line"><span class="comment">/* This set of options defines size of file name members in the FILINFO structure</span></span><br><span class="line"><span class="comment">/  which is used to read out directory items. These values should be suffcient for</span></span><br><span class="line"><span class="comment">/  the file names to read. The maximum possible length of the read file name depends</span></span><br><span class="line"><span class="comment">/  on character encoding. When LFN is not enabled, these options have no effect. */</span></span><br></pre></td></tr></table></figure></li><li><p>磁盘卷数量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_VOLUMES      1</span></span><br><span class="line"><span class="comment">/* Number of volumes (logical drives) to be used. (1-10) */</span></span><br></pre></td></tr></table></figure></li><li><p>卷 ID</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_STR_VOLUME_ID    0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_VOLUME_STRS      <span class="meta-string">&quot;RAM&quot;</span>,<span class="meta-string">&quot;NAND&quot;</span>,<span class="meta-string">&quot;CF&quot;</span>,<span class="meta-string">&quot;SD&quot;</span>,<span class="meta-string">&quot;SD2&quot;</span>,<span class="meta-string">&quot;USB&quot;</span>,<span class="meta-string">&quot;USB2&quot;</span>,<span class="meta-string">&quot;USB3&quot;</span></span></span><br><span class="line"><span class="comment">/* FF_STR_VOLUME_ID switches support for volume ID in arbitrary strings.</span></span><br><span class="line"><span class="comment">/  When FF_STR_VOLUME_ID is set to 1 or 2, arbitrary strings can be used as drive</span></span><br><span class="line"><span class="comment">/  number in the path name. FF_VOLUME_STRS defines the volume ID strings for each</span></span><br><span class="line"><span class="comment">/  logical drives. Number of items must not be less than FF_VOLUMES. Valid</span></span><br><span class="line"><span class="comment">/  characters for the volume ID strings are A-Z, a-z and 0-9, however, they are</span></span><br><span class="line"><span class="comment">/  compared in case-insensitive. If FF_STR_VOLUME_ID &gt;= 1 and FF_VOLUME_STRS is</span></span><br><span class="line"><span class="comment">/  not defined, a user defined volume string table needs to be defined as:</span></span><br><span class="line"><span class="comment">/</span></span><br><span class="line"><span class="comment">/  const char* VolumeStr[FF_VOLUMES] = &#123;&quot;ram&quot;,&quot;flash&quot;,&quot;sd&quot;,&quot;usb&quot;,...</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p>Sector Size 设定</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_MIN_SS       512</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FF_MAX_SS       4096</span></span><br><span class="line"><span class="comment">/* This set of options configures the range of sector size to be supported. (512,</span></span><br><span class="line"><span class="comment">/  1024, 2048 or 4096) Always set both 512 for most systems, generic memory card and</span></span><br><span class="line"><span class="comment">/  harddisk, but a larger value may be required for on-board flash memory and some</span></span><br><span class="line"><span class="comment">/  type of optical media. When FF_MAX_SS is larger than FF_MIN_SS, FatFs is configured</span></span><br><span class="line"><span class="comment">/  for variable sector size mode and disk_ioctl() function needs to implement</span></span><br><span class="line"><span class="comment">/  GET_SECTOR_SIZE command. */</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="diskio.c-中函数实现">3. diskio.c 中函数实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* Low level disk I/O module SKELETON for FatFs     (C)ChaN, 2019        */</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* If a working storage control module is available, it should be        */</span></span><br><span class="line"><span class="comment">/* attached to the FatFs via a glue function rather than modifying it.   */</span></span><br><span class="line"><span class="comment">/* This is an example of glue functions to attach various exsisting      */</span></span><br><span class="line"><span class="comment">/* storage control modules to the FatFs module with a defined API.       */</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ff.h&quot;</span>         <span class="comment">/* Obtains integer types */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;diskio.h&quot;</span>     <span class="comment">/* Declarations of disk functions */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_sdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Definitions of physical drive number for each drive */</span></span><br><span class="line"><span class="comment">//#define DEV_RAM       0   /* Example: Map Ramdisk to physical drive 0 */</span></span><br><span class="line"><span class="comment">//#define DEV_MMC       1   /* Example: Map MMC/SD card to physical drive 1 */</span></span><br><span class="line"><span class="comment">//#define DEV_USB       2   /* Example: Map USB MSD to physical drive 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEV_SDCARD      0   <span class="comment">/* SDCard used for Volume 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEV_SPIFLASH    1   <span class="comment">/* SPI Flash used for Volume 1 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SD_BLOCKSIZE    512</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* Get Drive Status                                                      */</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">DSTATUS <span class="title">disk_status</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    BYTE pdrv       <span class="comment">/* Physical drive nmuber to identify the drive */</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DSTATUS stat = STA_NOINIT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (pdrv) &#123;</span><br><span class="line">    <span class="keyword">case</span> DEV_SDCARD:</span><br><span class="line">        stat &amp;= ~STA_NOINIT;    <span class="comment">/* set bit0 to 0 */</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> DEV_SPIFLASH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        stat = STA_NOINIT;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* Inidialize a Drive                                                    */</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">DSTATUS <span class="title">disk_initialize</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    BYTE pdrv               <span class="comment">/* Physical drive nmuber to identify the drive */</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DSTATUS stat = STA_NOINIT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (pdrv) &#123;</span><br><span class="line">    <span class="keyword">case</span> DEV_SDCARD :</span><br><span class="line">        <span class="keyword">if</span> (SD_OK == SD_Init()) &#123;</span><br><span class="line">            stat &amp;= ~STA_NOINIT;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            stat = STA_NOINIT;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> DEV_SPIFLASH :</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        stat = STA_NOINIT;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* Read Sector(s)                                                        */</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">DRESULT <span class="title">disk_read</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    BYTE pdrv,      <span class="comment">/* Physical drive nmuber to identify the drive */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    BYTE *buff,     <span class="comment">/* Data buffer to store read data */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LBA_t sector,   <span class="comment">/* Start sector in LBA */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    UINT count      <span class="comment">/* Number of sectors to read */</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DRESULT result = RES_PARERR;</span><br><span class="line">    SD_Error SD_State = SD_OK;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (pdrv) &#123;</span><br><span class="line">    <span class="keyword">case</span> DEV_SDCARD :</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* BYTE pointer buff is not aligned with 4 bytes */</span></span><br><span class="line">        <span class="keyword">if</span> ((DWORD)buff &amp; <span class="number">3</span>) &#123;</span><br><span class="line">            DRESULT res = RES_OK;</span><br><span class="line">            DWORD scratch[SD_BLOCKSIZE / <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (count--) &#123;</span><br><span class="line">                res = disk_read(DEV_SDCARD, (<span class="keyword">void</span> *)scratch, sector++, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (RES_OK != res)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">memcpy</span>(buff, scratch, SD_BLOCKSIZE);</span><br><span class="line">                buff += SD_BLOCKSIZE;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SD_State = SD_ReadMultiBlocks(buff, (<span class="keyword">uint64_t</span>)sector * SD_BLOCKSIZE, SD_BLOCKSIZE, count);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SD_OK == SD_State) &#123;</span><br><span class="line">            <span class="comment">/* check if transfer finished */</span></span><br><span class="line">            SD_State = SD_WaitReadOperation();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (SD_TRANSFER_OK != SD_GetStatus());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SD_OK != SD_State)</span><br><span class="line">            result = RES_PARERR;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result = RES_OK;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> DEV_SPIFLASH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        result = RES_PARERR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* Write Sector(s)                                                       */</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> FF_FS_READONLY == 0</span></span><br><span class="line"></span><br><span class="line"><span class="function">DRESULT <span class="title">disk_write</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    BYTE pdrv,          <span class="comment">/* Physical drive nmuber to identify the drive */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">const</span> BYTE *buff,   <span class="comment">/* Data to be written */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    LBA_t sector,       <span class="comment">/* Start sector in LBA */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    UINT count          <span class="comment">/* Number of sectors to write */</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DRESULT result = RES_PARERR;</span><br><span class="line">    SD_Error SD_State = SD_OK;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!count) &#123;</span><br><span class="line">        <span class="keyword">return</span> RES_PARERR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (pdrv) &#123;</span><br><span class="line">    <span class="keyword">case</span> DEV_SDCARD:</span><br><span class="line">        <span class="keyword">if</span> ((DWORD)buff &amp; <span class="number">3</span>) &#123;</span><br><span class="line">            DRESULT res = RES_OK;</span><br><span class="line">            DWORD scratch[SD_BLOCKSIZE / <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (count--) &#123;</span><br><span class="line">                <span class="built_in">memcpy</span>(scratch, buff, SD_BLOCKSIZE);</span><br><span class="line">                res = disk_write(DEV_SDCARD, (<span class="keyword">void</span> *)scratch, sector++, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (SD_OK != res)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                buff += SD_BLOCKSIZE;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SD_State = SD_WriteMultiBlocks((<span class="keyword">uint8_t</span> *)buff, (<span class="keyword">uint64_t</span>)sector * SD_BLOCKSIZE, SD_BLOCKSIZE, count);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SD_OK == SD_State) &#123;</span><br><span class="line">            <span class="comment">/* check if transfer finished */</span></span><br><span class="line">            SD_State = SD_WaitWriteOperation();</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* wait until end of DMA transfer */</span></span><br><span class="line">            <span class="keyword">while</span> (SD_TRANSFER_OK != SD_GetStatus());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SD_OK != SD_State)</span><br><span class="line">            result = RES_PARERR;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result = RES_OK;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> DEV_SPIFLASH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        result = RES_PARERR;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/* Miscellaneous Functions                                               */</span></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">DRESULT <span class="title">disk_ioctl</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    BYTE pdrv,      <span class="comment">/* Physical drive nmuber (0..) */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    BYTE cmd,       <span class="comment">/* Control code */</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">void</span> *buff      <span class="comment">/* Buffer to send/receive control data */</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DRESULT result = RES_PARERR;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (pdrv) &#123;</span><br><span class="line">    <span class="keyword">case</span> DEV_SDCARD:</span><br><span class="line">        <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">        <span class="comment">/* get Read/Write sector size */</span></span><br><span class="line">        <span class="keyword">case</span> GET_SECTOR_SIZE:</span><br><span class="line">            *(WORD *)buff = SD_BLOCKSIZE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* get erase block size with unit of sector(DWORD) */</span></span><br><span class="line">        <span class="keyword">case</span> GET_BLOCK_SIZE:</span><br><span class="line">            *(WORD *)buff = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> CTRL_SYNC:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = RES_OK;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> DEV_SPIFLASH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        result = RES_PARERR;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">__weak DWORD <span class="title">get_fattime</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((DWORD)(<span class="number">2022</span> - <span class="number">1980</span>) &lt;&lt; <span class="number">25</span>)         <span class="comment">/* Year */</span></span><br><span class="line">           | ((DWORD)<span class="number">4</span> &lt;&lt; <span class="number">21</span>)                     <span class="comment">/* Month */</span></span><br><span class="line">           | ((DWORD)<span class="number">3</span> &lt;&lt; <span class="number">16</span>)                     <span class="comment">/* Day */</span></span><br><span class="line">           | ((DWORD)<span class="number">20</span> &lt;&lt; <span class="number">11</span>)                    <span class="comment">/* Hour */</span></span><br><span class="line">           | ((DWORD)<span class="number">53</span> &lt;&lt; <span class="number">5</span>)                     <span class="comment">/* Min */</span></span><br><span class="line">           | ((DWORD)<span class="number">0</span> &lt;&lt; <span class="number">1</span>);                      <span class="comment">/* Sec */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sdio-中断处理">4. SDIO 中断处理</h2><h3 id="sdio-传输中断">4.1 SDIO 传输中断</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 在SDIO_ITConfig()这个函数开启了sdio中断，数据传输结束时产生中断</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SDIO_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* Process All SDIO Interrupt Sources */</span></span><br><span class="line">    SD_ProcessIRQSrc();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sdio-中断处理函数">4.2 SDIO 中断处理函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 函数名：SD_ProcessIRQSrc</span></span><br><span class="line"><span class="comment"> * 描述  ：数据传输结束中断</span></span><br><span class="line"><span class="comment"> * 输入  ：无</span></span><br><span class="line"><span class="comment"> * 输出  ：SD错误类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">SD_Error <span class="title">SD_ProcessIRQSrc</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (StopCondition == <span class="number">1</span>) &#123;           <span class="comment">// 发送读取、多块读写命令时置1</span></span><br><span class="line">        SDIO-&gt;ARG = <span class="number">0x0</span>;                <span class="comment">// 命令参数寄存器</span></span><br><span class="line">        SDIO-&gt;CMD = <span class="number">0x44C</span>;              <span class="comment">// 命令寄存器： 0100    01      001100</span></span><br><span class="line">        <span class="comment">//                                                   [7:6]   [5:0]</span></span><br><span class="line">        <span class="comment">//              CPSMEN  WAITRESP CMDINDEX</span></span><br><span class="line">        <span class="comment">//      开启命令状态机   短响应   cmd12 STOP_ TRANSMISSION</span></span><br><span class="line">        TransferError = CmdResp1Error(SD_CMD_STOP_TRANSMISSION);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        TransferError = SD_OK;</span><br><span class="line">    &#125;</span><br><span class="line">    SDIO_ClearITPendingBit(SDIO_IT_DATAEND);        <span class="comment">// 清中断</span></span><br><span class="line">    SDIO_ITConfig(SDIO_IT_DATAEND, DISABLE);        <span class="comment">// 关闭sdio中断使能</span></span><br><span class="line">    TransferEnd = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (TransferError);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fatfs-测试">5. FatFS 测试</h2><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/img/image-20220404141719713.png"alt="image-20220404141719713" /></p><h3 id="文件挂载创建写入及读出">5.1 文件挂载，创建，写入及读出</h3><blockquote><ol type="1"><li><strong><font color = 'brown'>文本读 f_read的时候需要注意：当读到'\0'时结束符</font></strong></li><li><strong><font color = 'blue'>文本写的时候需要注意：当 f_write写结束时，会在最后加上'\0'，如果下次接续写 FA_OPEN_APPEND时，前面的'\0'会与后面写入的字符连接显示为NULL，且下次读的时候在'\0'会终止，后面的内容无法读出</font></strong></li><li><strong><font color = 'brown'>解决办法：在调用 f_write 之前，f_open之后将文件指针移到'\0'前面，写入时将其覆盖-----&gt;&gt;&gt;&gt; f_lseek(&amp;fObj, f_size(&amp;fObj) -1);</font></strong></li></ol></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file main.c</span></span><br><span class="line"><span class="comment"> * @brief  EU-STM32F103ZE</span></span><br><span class="line"><span class="comment"> * @author simon.y (Tresordie@163.com)</span></span><br><span class="line"><span class="comment"> * @version 1.0</span></span><br><span class="line"><span class="comment"> * @date 2022-03-26</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @copyright Copyright (c) 2022  Simon.Yuan</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @par 修改日志:</span></span><br><span class="line"><span class="comment"> * &lt;table&gt;</span></span><br><span class="line"><span class="comment"> * &lt;tr&gt;&lt;th&gt;Date       &lt;th&gt;Version &lt;th&gt;Author  &lt;th&gt;Description</span></span><br><span class="line"><span class="comment"> * &lt;tr&gt;&lt;td&gt;2022-03-26 &lt;td&gt;1.0     &lt;td&gt;simon.y     &lt;td&gt;内容</span></span><br><span class="line"><span class="comment"> * &lt;/table&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;app_sdcard.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ff.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">FATFS   fsObj;                                                  <span class="comment">// file system object</span></span><br><span class="line">FIL     fObj;                                                   <span class="comment">// file object</span></span><br><span class="line">FRESULT fResult;                                                <span class="comment">// file operation fResult</span></span><br><span class="line">UINT    fNum;                                                   <span class="comment">// number of file read/write successfully</span></span><br><span class="line">BYTE    readBuff[<span class="number">1024</span>] = &#123;<span class="number">0</span>&#125;;                                   <span class="comment">// read buffer</span></span><br><span class="line">BYTE    writeBuff[] = <span class="string">&quot;SDCard file open read write test.\r\n&quot;</span>;  <span class="comment">// write buffer</span></span><br><span class="line">BYTE    work[FF_MAX_SS];                                        <span class="comment">// sector size(512 bytes) - FatFS v0.14</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    delay_init();</span><br><span class="line">    USART_Config();</span><br><span class="line">    LED_Init();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;FatFS on SDCard\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* FatFS mount */</span></span><br><span class="line">    fResult = f_mount(&amp;fsObj, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);  <span class="comment">// mount immediately</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* if there is no file system then create it */</span></span><br><span class="line">    <span class="keyword">if</span> (fResult == FR_NO_FILESYSTEM) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No File System on SDCard, will go to format it!\r\n&quot;</span>);</span><br><span class="line">        <span class="comment">//        fResult = f_mkfs(&quot;0:&quot;, 0, 0);     // FatFS v0.11a</span></span><br><span class="line">        fResult = f_mkfs(<span class="string">&quot;0:&quot;</span>, <span class="number">0</span>, work, <span class="keyword">sizeof</span>(work));      <span class="comment">// FatFS v0.14</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;SDCard had been formatted file system successfully!\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* unmount then re-mount after SDCard fomartted with file system */</span></span><br><span class="line">            fResult = f_mount(<span class="literal">NULL</span>, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            fResult = f_mount(&amp;fsObj, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            LED1_ON;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;SDCard formatted failed!\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                LED2_TOGGLE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (FR_OK != fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;File System mount failed!, error = %d\r\n&quot;</span>, fResult);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;It may be caused by Failed SDCard initialize.\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            LED2_TOGGLE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;File System mounted successfully!\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* FatFS write */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\nFile write in FatFS!\r\n&quot;</span>);</span><br><span class="line">    fResult = f_open(&amp;fObj, <span class="string">&quot;0:FatFs Read Write Test.txt&quot;</span>, FA_OPEN_APPEND | FA_WRITE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;file size is %d Bytes\r\n&quot;</span>, f_size(&amp;fObj));</span><br><span class="line">    f_lseek(&amp;fObj, f_size(&amp;fObj) - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open successfully, write data into file!\r\n&quot;</span>);</span><br><span class="line">        fResult = f_write(&amp;fObj, writeBuff, <span class="keyword">sizeof</span>(writeBuff), &amp;fNum);</span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file written successfully, %d bytes written into file!\r\n&quot;</span>, fNum);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file written failed!, error = %d\r\n&quot;</span>, fResult);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        f_close(&amp;fObj);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open failed!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            LED2_TOGGLE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f_close(&amp;fObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* FatFS read */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\nFile read in FatFS!\r\n&quot;</span>);</span><br><span class="line">    fResult = f_open(&amp;fObj, <span class="string">&quot;0:FatFs Read Write Test.txt&quot;</span>, FA_OPEN_EXISTING | FA_READ);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;file size is %d Bytes\r\n&quot;</span>, f_size(&amp;fObj));</span><br><span class="line">    f_lseek(&amp;fObj, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open successfully, read data!\r\n&quot;</span>);</span><br><span class="line">        fResult = f_read(&amp;fObj, readBuff, <span class="keyword">sizeof</span>(readBuff), &amp;fNum);</span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file read successfully, %d bytes read!\r\n&quot;</span>, fNum);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\r\n[Content Read]:\r\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\r\n\r\n&quot;</span>, readBuff);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file read failed!, error = %d\r\n&quot;</span>, fResult);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        f_close(&amp;fObj);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open failed!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            LED2_TOGGLE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f_close(&amp;fObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* unmount */</span></span><br><span class="line">    f_mount(<span class="literal">NULL</span>, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件信息">5.2 文件信息</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">FRESULT fResult;</span><br><span class="line">FIL     fObj;</span><br><span class="line">UINT    fNum;</span><br><span class="line">FILINFO fInfo;</span><br><span class="line">DIR     dir;</span><br><span class="line"><span class="keyword">char</span>    readBuffer[<span class="number">512</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">FRESULT <span class="title">FatFS_fileInfoCheck</span><span class="params">(<span class="keyword">char</span> *pfPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* get file info */</span></span><br><span class="line">    fResult = f_stat(pfPath, &amp;fInfo);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\n%s info: \r\n&quot;</span>, pfPath);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file size: %d Bytes\r\n&quot;</span>, fInfo.fsize);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;time stamp: %u-%02u-%02u, %02u:%02u\r\n&quot;</span>,</span><br><span class="line">               (fInfo.fdate &gt;&gt; <span class="number">9</span>) + <span class="number">1980</span>,</span><br><span class="line">               fInfo.fdate &gt;&gt; <span class="number">5</span> &amp; <span class="number">15</span>,</span><br><span class="line">               fInfo.fdate &amp; <span class="number">31</span>,</span><br><span class="line">               fInfo.fdate &gt;&gt; <span class="number">11</span>,</span><br><span class="line">               fInfo.fdate &gt;&gt; <span class="number">5</span> &amp; <span class="number">63</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;attribution: %c%c%c%c%c\r\n&quot;</span>,</span><br><span class="line">               (fInfo.fattrib &amp; AM_DIR) ? <span class="string">&#x27;D&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* Directory? */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_RDO) ? <span class="string">&#x27;R&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* Read only? */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_HID) ? <span class="string">&#x27;H&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* Hide file? */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_SYS) ? <span class="string">&#x27;S&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* System file */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_ARC) ? <span class="string">&#x27;A&#x27;</span> : <span class="string">&#x27;-&#x27;</span>     <span class="comment">/* Archieve file? */</span></span><br><span class="line">              );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件扫描">5.3 文件扫描</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief                           scan directory and files in device Volume</span></span><br><span class="line"><span class="comment"> * @param  pDeviceVolumePath        device volume path</span></span><br><span class="line"><span class="comment"> * @return FRESULT                  FR_OK on success</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">FRESULT <span class="title">FatFS_fileScan</span><span class="params">(<span class="keyword">char</span> *pDeviceVolumePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FRESULT fResult;</span><br><span class="line">    DIR     dir;</span><br><span class="line">    UINT    i;</span><br><span class="line">    <span class="keyword">static</span>  FILINFO fInfo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* open Device Volume path */</span></span><br><span class="line">    fResult = f_opendir(&amp;dir, pDeviceVolumePath);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            fResult = f_readdir(&amp;dir, &amp;fInfo);                  <span class="comment">/* read device volume&#x27;s directory info to fInfo */</span></span><br><span class="line">            <span class="keyword">if</span> (FR_OK != fResult || fInfo.fname[<span class="number">0</span>] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* if directory scanned, recursive to scan files in this directory */</span></span><br><span class="line">            <span class="keyword">if</span> (fInfo.fattrib &amp; AM_DIR) &#123;</span><br><span class="line">                i = <span class="built_in">strlen</span>(pDeviceVolumePath);</span><br><span class="line">                <span class="built_in">sprintf</span>(&amp;pDeviceVolumePath[i], <span class="string">&quot;/%s&quot;</span>, fInfo.fname);</span><br><span class="line"></span><br><span class="line">                fResult = FatFS_fileScan(pDeviceVolumePath);</span><br><span class="line">                <span class="keyword">if</span> (fResult != FR_OK)                           <span class="comment">/* it will break if can&#x27;t scan any file info in directory */</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                pDeviceVolumePath[i] = <span class="number">0</span>;                       <span class="comment">/* it add 0 at the end of the path if scan file info in directory */</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s/%s\r\n&quot;</span>, pDeviceVolumePath, fInfo.fname);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        f_closedir(&amp;dir);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;failed to open directory!\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本功能">5.4 基本功能</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ex_fatfsfs.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief   get FatFS volume total size and free size</span></span><br><span class="line"><span class="comment"> * @notes   this function must be used close after f_mount, or result will be not correct</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FatFS_getFreeSize</span><span class="params">(<span class="keyword">size_info_t</span> *psize_info)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FATFS *pFatFS;</span><br><span class="line">    DWORD freeCluster, freeSector, totalSector;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n*****************Get device info *********************\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get device info and free cluster size */</span></span><br><span class="line">    f_getfree(<span class="string">&quot;0:&quot;</span>, &amp;freeCluster, &amp;pFatFS);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* calculate total sectors and free sectors */</span></span><br><span class="line">    totalSector = (pFatFS-&gt;n_fatent - <span class="number">2</span>) * pFatFS-&gt;csize;       <span class="comment">// FF_MAX_SS = 512 Bytes -&gt; Sector size</span></span><br><span class="line">    freeSector = freeCluster * pFatFS-&gt;csize;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* print device size information */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Device total size: %ld KB, Free Size: %ld KB\r\n&quot;</span>, (totalSector &gt;&gt; <span class="number">1</span>), (freeSector &gt;&gt; <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    psize_info-&gt;totalSector = totalSector;</span><br><span class="line">    psize_info-&gt;freeSector = freeSector;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief           write data content to end of file</span></span><br><span class="line"><span class="comment"> * @param  pfPath   file path(e.g., &quot;0:FatFs Read Write Test.txt&quot;)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FatFS_fileWrite</span><span class="params">(<span class="keyword">char</span> *pfPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FRESULT fResult;</span><br><span class="line">    FIL     fObj;</span><br><span class="line">    UINT    fNum;</span><br><span class="line">    <span class="keyword">char</span>    readBuffer[<span class="number">512</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;f_lseek to position and write content into file!\r\n&quot;</span>);</span><br><span class="line">    fResult = f_open(&amp;fObj, pfPath, FA_OPEN_ALWAYS | FA_WRITE | FA_READ);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        fResult = f_lseek(&amp;fObj, f_size(&amp;fObj) - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            f_printf(&amp;fObj, <span class="string">&quot;Add some new at end of original file.\r\n&quot;</span>);</span><br><span class="line">            fResult = f_lseek(&amp;fObj, <span class="number">0</span>);</span><br><span class="line">            fResult = f_read(&amp;fObj, readBuffer, f_size(&amp;fObj), &amp;fNum);</span><br><span class="line">            <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;[Content]:\r\n%s\r\n&quot;</span>, readBuffer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f_close(&amp;fObj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief                   rename file of pfPath to pfExpectPath, if folder not exist, create it</span></span><br><span class="line"><span class="comment"> * @param  pDir             pointer to Directory which pfExpectPath within</span></span><br><span class="line"><span class="comment"> * @param  pfDirPath        path of Directory where pfExpectPath inside</span></span><br><span class="line"><span class="comment"> * @param  pfPath           path of original file</span></span><br><span class="line"><span class="comment"> * @param  pfExpectPath     path been renamed of original file</span></span><br><span class="line"><span class="comment"> * @return FRESULT          FR_OK on success</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">FRESULT <span class="title">FatFS_folderCreate</span><span class="params">(DIR *pDir, <span class="keyword">char</span> *pfDirPath, <span class="keyword">char</span> *pfPath, <span class="keyword">char</span> *pfExpectPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FRESULT fResult;</span><br><span class="line">    FIL     fObj;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Create folder in FatFS!\r\n&quot;</span>);</span><br><span class="line">    fResult = f_opendir(pDir, pfDirPath);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK != fResult) &#123;</span><br><span class="line">        fResult = f_mkdir(pfDirPath);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fResult = f_closedir(pDir);</span><br><span class="line">        f_unlink(pfExpectPath);                           <span class="comment">/* delete file */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        fResult = f_open(&amp;fObj, pfPath, FA_OPEN_ALWAYS | FA_WRITE | FA_READ);   <span class="comment">/* Create if no file */</span></span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            fResult = f_rename(pfPath, pfExpectPath);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Successfully renamed\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Failed to open %s\r\n&quot;</span>, pfPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    f_close(&amp;fObj);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fResult;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief               show file info in fatfs</span></span><br><span class="line"><span class="comment"> * @param  pfPath       file path(e.g., &quot;0:FatFs Read Write Test.txt&quot;)</span></span><br><span class="line"><span class="comment"> * @return FRESULT      FR_OK on success</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">FRESULT <span class="title">FatFS_fileInfoCheck</span><span class="params">(<span class="keyword">char</span> *pfPath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FRESULT fResult;</span><br><span class="line">    FILINFO fInfo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get file info */</span></span><br><span class="line">    fResult = f_stat(pfPath, &amp;fInfo);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\n%s info: \r\n&quot;</span>, pfPath);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file size: %ld Bytes\r\n&quot;</span>, fInfo.fsize);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;time stamp: %u-%02u-%02u, %02u:%02u\r\n&quot;</span>,</span><br><span class="line">               (fInfo.fdate &gt;&gt; <span class="number">9</span>) + <span class="number">1980</span>,</span><br><span class="line">               fInfo.fdate &gt;&gt; <span class="number">5</span> &amp; <span class="number">15</span>,</span><br><span class="line">               fInfo.fdate &amp; <span class="number">31</span>,</span><br><span class="line">               fInfo.fdate &gt;&gt; <span class="number">11</span>,</span><br><span class="line">               fInfo.fdate &gt;&gt; <span class="number">5</span> &amp; <span class="number">63</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;attribution: %c%c%c%c%c\r\n&quot;</span>,</span><br><span class="line">               (fInfo.fattrib &amp; AM_DIR) ? <span class="string">&#x27;D&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* Directory? */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_RDO) ? <span class="string">&#x27;R&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* Read only? */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_HID) ? <span class="string">&#x27;H&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* Hide file? */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_SYS) ? <span class="string">&#x27;S&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,    <span class="comment">/* System file */</span></span><br><span class="line">               (fInfo.fattrib &amp; AM_ARC) ? <span class="string">&#x27;A&#x27;</span> : <span class="string">&#x27;-&#x27;</span>     <span class="comment">/* Archieve file? */</span></span><br><span class="line">              );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fResult;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief                           scan directory and files in device Volume</span></span><br><span class="line"><span class="comment"> * @param  pDeviceVolumePath        device volume path</span></span><br><span class="line"><span class="comment"> * @return FRESULT                  FR_OK on success</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">FRESULT <span class="title">FatFS_fileScan</span><span class="params">(<span class="keyword">char</span> *pDeviceVolumePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FRESULT fResult;</span><br><span class="line">    DIR     dir;</span><br><span class="line">    UINT    i;</span><br><span class="line">    <span class="keyword">static</span>  FILINFO fInfo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* open Device Volume path */</span></span><br><span class="line">    fResult = f_opendir(&amp;dir, pDeviceVolumePath);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            fResult = f_readdir(&amp;dir, &amp;fInfo);                  <span class="comment">/* read device volume&#x27;s directory info to fInfo */</span></span><br><span class="line">            <span class="keyword">if</span> (FR_OK != fResult || fInfo.fname[<span class="number">0</span>] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* if directory scanned, recursive to scan files in this directory */</span></span><br><span class="line">            <span class="keyword">if</span> (fInfo.fattrib &amp; AM_DIR) &#123;</span><br><span class="line">                i = <span class="built_in">strlen</span>(pDeviceVolumePath);</span><br><span class="line">                <span class="built_in">sprintf</span>(&amp;pDeviceVolumePath[i], <span class="string">&quot;/%s&quot;</span>, fInfo.fname);</span><br><span class="line"></span><br><span class="line">                fResult = FatFS_fileScan(pDeviceVolumePath);</span><br><span class="line">                <span class="keyword">if</span> (fResult != FR_OK)                           <span class="comment">/* it will break if can&#x27;t scan any file info in directory */</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                pDeviceVolumePath[i] = <span class="number">0</span>;                       <span class="comment">/* it add 0 at the end of the path if scan file info in directory */</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s/%s\r\n&quot;</span>, pDeviceVolumePath, fInfo.fname);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        f_closedir(&amp;dir);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;failed to open directory!\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结">6. 总结</h2><h3id="main.c-中文件相关对象定义必须放在-main-函数体外部否则会有问题"><font color='brown'>6.1main.c 中文件相关对象定义必须放在 main函数体外部，否则会有问题</font></h3><blockquote><ol type="1"><li><p><strong>如下所示，FATFS，FIL，DIR 这些对象都定义在 main函数以外</strong></p><p>FATFS fsObj; // file system object<br />FIL fObj;<br />UINT fNum;<br />DIR dir;</p></li></ol></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file main.c</span></span><br><span class="line"><span class="comment"> * @brief  EU-STM32F103ZE</span></span><br><span class="line"><span class="comment"> * @author simon.y (Tresordie@163.com)</span></span><br><span class="line"><span class="comment"> * @version 1.0</span></span><br><span class="line"><span class="comment"> * @date 2022-03-26</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @copyright Copyright (c) 2022  Simon.Yuan</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @par 修改日志:</span></span><br><span class="line"><span class="comment"> * &lt;table&gt;</span></span><br><span class="line"><span class="comment"> * &lt;tr&gt;&lt;th&gt;Date       &lt;th&gt;Version &lt;th&gt;Author  &lt;th&gt;Description</span></span><br><span class="line"><span class="comment"> * &lt;tr&gt;&lt;td&gt;2022-03-26 &lt;td&gt;1.0     &lt;td&gt;simon.y     &lt;td&gt;内容</span></span><br><span class="line"><span class="comment"> * &lt;/table&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;app_sdcard.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ex_fatfsfs.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ff.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">FRESULT fResult;</span><br><span class="line">FATFS   fsObj;                                                  <span class="comment">// file system object</span></span><br><span class="line">FIL     fObj;</span><br><span class="line">UINT    fNum;</span><br><span class="line">DIR     dir;</span><br><span class="line">BYTE    readBuff[<span class="number">1024</span>] = &#123;<span class="number">0</span>&#125;;                                   <span class="comment">// read buffer</span></span><br><span class="line">BYTE    writeBuff[] = <span class="string">&quot;SDCard file open read write test.\r\n&quot;</span>;  <span class="comment">// write buffer</span></span><br><span class="line"><span class="comment">// BYTE    work[FF_MAX_SS];                                        // sector size(512 bytes) - FatFS v0.14</span></span><br><span class="line"><span class="keyword">size_info_t</span> size_info;</span><br><span class="line"><span class="keyword">char</span> fPath[<span class="number">2048</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    USART_Config();</span><br><span class="line">    LED_Init();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;FatFS on SDCard\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* FatFS mount */</span></span><br><span class="line">    fResult = f_mount(&amp;fsObj, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);  <span class="comment">// mount immediately</span></span><br><span class="line">    FatFS_getFreeSize(&amp;size_info);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* if there is no file system then create it */</span></span><br><span class="line">    <span class="keyword">if</span> (fResult == FR_NO_FILESYSTEM) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No File System on SDCard, will go to format it!\r\n&quot;</span>);</span><br><span class="line">        fResult = f_mkfs(<span class="string">&quot;0:&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);     <span class="comment">// FatFS v0.11a</span></span><br><span class="line">        <span class="comment">//    fResult = f_mkfs(&quot;0:&quot;, 0, work, sizeof(work));      // FatFS v0.14</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;SDCard had been formatted file system successfully!\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* unmount then re-mount after SDCard fomartted with file system */</span></span><br><span class="line">            fResult = f_mount(<span class="literal">NULL</span>, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            fResult = f_mount(&amp;fsObj, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            LED1_ON;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;SDCard formatted failed!\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                LED2_TOGGLE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (FR_OK != fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;File System mount failed!, error = %d\r\n&quot;</span>, fResult);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;It may be caused by Failed SDCard initialize.\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            LED2_TOGGLE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;File System mounted successfully!\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* file scan */</span></span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(fPath, <span class="string">&quot;0:&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\nFatFS file scan!\r\n&quot;</span>);</span><br><span class="line">        FatFS_fileScan(fPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* FatFS write */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\nFile write in FatFS!\r\n&quot;</span>);</span><br><span class="line">    fResult = f_open(&amp;fObj, <span class="string">&quot;0:FatFs Read Write Test.txt&quot;</span>, FA_CREATE_ALWAYS | FA_WRITE);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open successfully, write data into file!\r\n&quot;</span>);</span><br><span class="line">        fResult = f_write(&amp;fObj, writeBuff, <span class="keyword">sizeof</span>(writeBuff), &amp;fNum);</span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file written successfully, %d bytes written into file!\r\n&quot;</span>, fNum);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file written failed!, error = %d\r\n&quot;</span>, fResult);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        f_close(&amp;fObj);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open failed!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            LED2_TOGGLE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f_close(&amp;fObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Write content to end of file */</span></span><br><span class="line">    FatFS_fileWrite(<span class="string">&quot;0:FatFs Read Write Test.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* FatFS read */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\nFile read in FatFS!\r\n&quot;</span>);</span><br><span class="line">    fResult = f_open(&amp;fObj, <span class="string">&quot;0:FatFs Read Write Test.txt&quot;</span>, FA_OPEN_EXISTING | FA_READ);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;file size is %ld Bytes\r\n&quot;</span>, f_size(&amp;fObj));</span><br><span class="line">    f_lseek(&amp;fObj, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open successfully, read data!\r\n&quot;</span>);</span><br><span class="line">        fResult = f_read(&amp;fObj, readBuff, <span class="keyword">sizeof</span>(readBuff), &amp;fNum);</span><br><span class="line">        <span class="keyword">if</span> (FR_OK == fResult) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file read successfully, %d bytes read!\r\n&quot;</span>, fNum);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\r\n[Content Read]:\r\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\r\n\r\n&quot;</span>, readBuff);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;file read failed!, error = %d\r\n&quot;</span>, fResult);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        f_close(&amp;fObj);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file open failed!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            LED2_TOGGLE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f_close(&amp;fObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* file rename */</span></span><br><span class="line">    FatFS_folderCreate(&amp;dir, <span class="string">&quot;0:TestDir&quot;</span>, <span class="string">&quot;0:TestDir/1.txt&quot;</span>, <span class="string">&quot;0:TestDir/2.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* file info check */</span></span><br><span class="line">    FatFS_fileInfoCheck(<span class="string">&quot;0:FatFs Read Write Test.txt&quot;</span>);</span><br><span class="line">    FatFS_fileInfoCheck(<span class="string">&quot;0:TestDir/2.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* unmount */</span></span><br><span class="line">    f_mount(<span class="literal">NULL</span>, <span class="string">&quot;0:&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3id="对存储介质中的文件进行全面扫描时需要给文件路径缓存分配较大空间以致能足以存储所有的路径在此数组中"><font color='brown'>6.2 对存储介质中的文件进行全面扫描时，需要给文件路径缓存分配较大空间以致能足以存储所有的路径在此数组中</font></h3><blockquote><ol type="1"><li><strong>以上例程中，存储文件路径的数组为 fPath，缓存的大小为 2048Bytes</strong></li><li><strong>之前测试时，由于文件路径较深，fPath 缓存大小为 512Bytes，导致很多文件无法扫描出来</strong></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img
src=&quot;https://raw.githubusercontent.com/Tresordie/PicBed/master/img/FatFS%E7%A7%BB%E6%A4%8D%E5%AF%BC%E5%9B%BE.png&quot;
alt=&quot;FatFS移植导图&quot; </summary>
      
    
    
    
    <category term="协议" scheme="https://tresordie.github.io/categories/%E5%8D%8F%E8%AE%AE/"/>
    
    
    <category term="file system" scheme="https://tresordie.github.io/tags/file-system/"/>
    
  </entry>
  
  <entry>
    <title>安装oh-my-posh美化界面(Windows)</title>
    <link href="https://tresordie.github.io/2022/04/04/[Git]oh-my-posh%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/"/>
    <id>https://tresordie.github.io/2022/04/04/[Git]oh-my-posh%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/</id>
    <published>2022-04-04T02:00:00.000Z</published>
    <updated>2022-09-01T13:19:56.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git安装oh-my-posh.v3-美化界面windows">[Git]安装oh-my-posh.v3美化界面(Windows)</h1><p><imgsrc="https://raw.githubusercontent.com/Tresordie/PicBed/master/img/image-20220404131453282.png"alt="image-20220404131453282" /></p><h2 id="powershell最新版本安装">1. PowerShell最新版本安装</h2><blockquote><ol type="1"><li><p>安装PowerShell最新版本可以很好支持一些特性</p><p>https://github.com/PowerShell/PowerShell/releases/</p></li></ol></blockquote><h2 id="安装字体">2. 安装字体</h2><blockquote><ol type="1"><li><p>安装字体支持oh-my-posh主题的支持</p></li><li><p>建议安装<strong>MesloLGS NF</strong>字体</p><p>https://github.com/romkatv/dotfiles-public/blob/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Regular.ttf</p></li></ol></blockquote><h2 id="安装oh-my-posh及posh-git">3. 安装oh-my-posh及posh-git</h2><blockquote><ol type="1"><li><p>下载安装oh-my-posh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy Bypass -Scope Process -Force; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString(<span class="string">&#x27;https://ohmyposh.dev/install.ps1&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li><p>如果使用的是PowerShell Core, 需要安装PSReadline</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Install-Module -Name PSReadLine -Scope CurrentUser -Force -SkipPublisherCheck  </span><br></pre></td></tr></table></figure></li><li><p>安装oh-my-posh及posh-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Install-Module oh-my-posh -Scope CurrentUser</span><br><span class="line">Install-Module posh-git -Scope CurrentUser</span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="启动配置">4. 启动配置</h2><blockquote><ol type="1"><li><p>在PowerShell中输入以下命令，实现启动编辑powershell配置文件的引擎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(Test-Path -Path <span class="variable">$PROFILE</span> )) &#123; New-Item -Type File -Path <span class="variable">$PROFILE</span> -Force &#125;</span><br></pre></td></tr></table></figure></li><li><p>输入以下命令，创建配置脚本，并在脚本中添加命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure></li><li><p>脚本内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入oh-my-posh</span></span><br><span class="line">oh-my-posh init pwsh | Invoke-Expression</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主题</span></span><br><span class="line">oh-my-posh init pwsh --config <span class="string">&#x27;C:\Users\simon\AppData\Local\Programs\oh-my-posh\themes\powerlevel10k_rainbow.omp.json&#x27;</span> | Invoke-Expression</span><br></pre></td></tr></table></figure></li><li><p>使配置生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="设置主题">5. 设置主题</h2><blockquote><ol type="1"><li><p>打开PowerShell之后，输入以下命令查看所有oh-my-posh主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-PoshTheme</span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="终端">6. 终端</h2><blockquote><ol type="1"><li>PowerShell通过oh-my-posh进行美化后，可以选择其它一款Terminal软件实现界面更加优美化</li><li>推荐使用：FluentTerminal，Tabby</li></ol></blockquote><p><ahref="https://lamirs.vercel.app/index-powershell/">oh-my-posh参考链接</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;git安装oh-my-posh.v3-美化界面windows&quot;&gt;[Git]安装oh-my-posh.v3
美化界面(Windows)&lt;/h1&gt;
&lt;p&gt;&lt;img
src=&quot;https://raw.githubusercontent.com/Tresordie/</summary>
      
    
    
    
    <category term="Git" scheme="https://tresordie.github.io/categories/Git/"/>
    
    
    <category term="oh-my-posh" scheme="https://tresordie.github.io/tags/oh-my-posh/"/>
    
  </entry>
  
</feed>
